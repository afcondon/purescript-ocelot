// Generated by purs bundle 0.13.8
var PS = {};
(function(exports) {
  /* global XMLHttpRequest */
  /* global process */
  "use strict";

  exports._ajax = function () {
    var platformSpecific = { };
    if (typeof module !== "undefined" && module.require && !(typeof process !== "undefined" && process.versions["electron"])) {
      // We are on node.js
      platformSpecific.newXHR = function () {
        var XHR = module.require("xhr2");
        return new XHR();
      };

      platformSpecific.fixupUrl = function (url, xhr) {
        if (xhr.nodejsBaseUrl === null) {
          var urllib = module.require("url");
          var u = urllib.parse(url);
          u.protocol = u.protocol || "http:";
          u.hostname = u.hostname || "localhost";
          return urllib.format(u);
        } else {
          return url || "/";
        }
      };

      platformSpecific.getResponse = function (xhr) {
        return xhr.response;
      };
    } else {
      // We are in the browser
      platformSpecific.newXHR = function () {
        return new XMLHttpRequest();
      };

      platformSpecific.fixupUrl = function (url) {
        return url || "/";
      };

      platformSpecific.getResponse = function (xhr) {
        return xhr.response;
      };
    }

    return function (mkHeader, options) {
      return function (errback, callback) {
        var xhr = platformSpecific.newXHR();
        var fixedUrl = platformSpecific.fixupUrl(options.url, xhr);
        xhr.open(options.method || "GET", fixedUrl, true, options.username, options.password);
        if (options.headers) {
          try {
            for (var i = 0, header; (header = options.headers[i]) != null; i++) {
              xhr.setRequestHeader(header.field, header.value);
            }
          } catch (e) {
            errback(e);
          }
        }
        var onerror = function (msg) {
          return function () {
            errback(new Error(msg + ": " + options.method + " " + options.url));
          };
        };
        xhr.onerror = onerror("AJAX request failed");
        xhr.ontimeout = onerror("AJAX request timed out");
        xhr.onload = function () {
          callback({
            status: xhr.status,
            statusText: xhr.statusText,
            headers: xhr.getAllResponseHeaders().split("\r\n")
              .filter(function (header) {
                return header.length > 0;
              })
              .map(function (header) {
                var i = header.indexOf(":");
                return mkHeader(header.substring(0, i))(header.substring(i + 2));
              }),
            body: platformSpecific.getResponse(xhr)
          });
        };
        xhr.responseType = options.responseType;
        xhr.withCredentials = options.withCredentials;
        xhr.send(options.content);

        return function (error, cancelErrback, cancelCallback) {
          try {
            xhr.abort();
          } catch (e) {
            return cancelErrback(e);
          }
          return cancelCallback();
        };
      };
    };
  }();
})(PS["Affjax"] = PS["Affjax"] || {});
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  var composeFlipped = function (dictSemigroupoid) {
      return function (f) {
          return function (g) {
              return compose(dictSemigroupoid)(g)(f);
          };
      };
  };
  exports["compose"] = compose;
  exports["composeFlipped"] = composeFlipped;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];                    
  var on = function (f) {
      return function (g) {
          return function (x) {
              return function (y) {
                  return f(g(x))(g(y));
              };
          };
      };
  };
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var applyFlipped = function (x) {
      return function (f) {
          return f(x);
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
  exports["applyFlipped"] = applyFlipped;
  exports["on"] = on;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var mapFlipped = function (dictFunctor) {
      return function (fa) {
          return function (f) {
              return map(dictFunctor)(f)(fa);
          };
      };
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var voidLeft = function (dictFunctor) {
      return function (f) {
          return function (x) {
              return map(dictFunctor)(Data_Function["const"](x))(f);
          };
      };
  };
  var voidRight = function (dictFunctor) {
      return function (x) {
          return map(dictFunctor)(Data_Function["const"](x));
      };
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
  exports["voidRight"] = voidRight;
  exports["voidLeft"] = voidLeft;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS);
(function(exports) {
  "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupUnit = new Semigroup(function (v) {
      return function (v1) {
          return Data_Unit.unit;
      };
  });
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupUnit"] = semigroupUnit;
  exports["semigroupArray"] = semigroupArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];                
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };
  var altArray = new Alt(function () {
      return Data_Functor.functorArray;
  }, Data_Semigroup.append(Data_Semigroup.semigroupArray));
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
  exports["altArray"] = altArray;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l*k);
      var n = 0;
      for (var i = 0; i < l; i++) {
        var f = fs[i];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var $foreign = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];                
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  }; 
  var applyArray = new Apply(function () {
      return Data_Functor.functorArray;
  }, $foreign.arrayApply);
  var apply = function (dict) {
      return dict.apply;
  };
  var applyFirst = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
          };
      };
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
              };
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applyFirst"] = applyFirst;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
  exports["applyArray"] = applyArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Unit = $PS["Data.Unit"];                
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var unless = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (!v) {
                  return v1;
              };
              if (v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 62, column 1 - line 62, column 65): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 57, column 1 - line 57, column 63): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  }; 
  var applicativeArray = new Applicative(function () {
      return Control_Apply.applyArray;
  }, function (x) {
      return [ x ];
  });
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["unless"] = unless;
  exports["when"] = when;
  exports["applicativeArray"] = applicativeArray;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var $foreign = $PS["Control.Bind"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];                
  var Discard = function (discard) {
      this.discard = discard;
  };
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var discard = function (dict) {
      return dict.discard;
  }; 
  var bindArray = new Bind(function () {
      return Control_Apply.applyArray;
  }, $foreign.arrayBind);
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  var composeKleisli = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bind(dictBind)(f(a))(g);
              };
          };
      };
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  var join = function (dictBind) {
      return function (m) {
          return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["discard"] = discard;
  exports["join"] = join;
  exports["composeKleisli"] = composeKleisli;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["bindArray"] = bindArray;
  exports["discardUnit"] = discardUnit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];
  var Control_Alt = $PS["Control.Alt"];                
  var Plus = function (Alt0, empty) {
      this.Alt0 = Alt0;
      this.empty = empty;
  };
  var plusArray = new Plus(function () {
      return Control_Alt.altArray;
  }, [  ]);
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
  exports["plusArray"] = plusArray;
})(PS);
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqBooleanImpl = refEq;
  exports.eqIntImpl = refEq;
  exports.eqNumberImpl = refEq;
  exports.eqCharImpl = refEq;
  exports.eqStringImpl = refEq;

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs === ys) return true;
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];      
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();
  var IsSymbol = function (reflectSymbol) {
      this.reflectSymbol = reflectSymbol;
  };
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };

  exports.unsafeSet = function (label) {
    return function (value) {
      return function (rec) {
        var copy = {};
        for (var key in rec) {
          if ({}.hasOwnProperty.call(rec, key)) {
            copy[key] = rec[key];
          }
        }
        copy[label] = value;
        return copy;
      };
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {};
  var exports = $PS["Record.Unsafe"];
  var $foreign = $PS["Record.Unsafe"];
  exports["unsafeGet"] = $foreign.unsafeGet;
  exports["unsafeSet"] = $foreign.unsafeSet;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Type.Data.RowList"] = $PS["Type.Data.RowList"] || {};
  var exports = $PS["Type.Data.RowList"];
  var RLProxy = (function () {
      function RLProxy() {

      };
      RLProxy.value = new RLProxy();
      return RLProxy;
  })();
  exports["RLProxy"] = RLProxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];                
  var EqRecord = function (eqRecord) {
      this.eqRecord = eqRecord;
  };
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqUnit = new Eq(function (v) {
      return function (v1) {
          return true;
      };
  });
  var eqString = new Eq($foreign.eqStringImpl);
  var eqRowNil = new EqRecord(function (v) {
      return function (v1) {
          return function (v2) {
              return true;
          };
      };
  });
  var eqRecord = function (dict) {
      return dict.eqRecord;
  };
  var eqRec = function (dictRowToList) {
      return function (dictEqRecord) {
          return new Eq(eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value));
      };
  };
  var eqNumber = new Eq($foreign.eqNumberImpl);
  var eqInt = new Eq($foreign.eqIntImpl);
  var eqChar = new Eq($foreign.eqCharImpl);
  var eqBoolean = new Eq($foreign.eqBooleanImpl);
  var eq = function (dict) {
      return dict.eq;
  };
  var eqArray = function (dictEq) {
      return new Eq($foreign.eqArrayImpl(eq(dictEq)));
  }; 
  var eqRowCons = function (dictEqRecord) {
      return function (dictCons) {
          return function (dictIsSymbol) {
              return function (dictEq) {
                  return new EqRecord(function (v) {
                      return function (ra) {
                          return function (rb) {
                              var tail = eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                              var get = Record_Unsafe.unsafeGet(key);
                              return eq(dictEq)(get(ra))(get(rb)) && tail;
                          };
                      };
                  });
              };
          };
      };
  };
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqNumber"] = eqNumber;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
  exports["eqUnit"] = eqUnit;
  exports["eqArray"] = eqArray;
  exports["eqRec"] = eqRec;
  exports["eqRowNil"] = eqRowNil;
  exports["eqRowCons"] = eqRowCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];          
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [ v.constructor.name ]);
      };
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  var altMaybe = new Control_Alt.Alt(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nothing) {
              return v1;
          };
          return v;
      };
  });
  var plusMaybe = new Control_Plus.Plus(function () {
      return altMaybe;
  }, Nothing.value);
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["plusMaybe"] = plusMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["eqMaybe"] = eqMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.MediaType.Common"] = $PS["Data.MediaType.Common"] || {};
  var exports = $PS["Data.MediaType.Common"];          
  var applicationJSON = "application/json";
  var applicationFormURLEncoded = "application/x-www-form-urlencoded";
  exports["applicationFormURLEncoded"] = applicationFormURLEncoded;
  exports["applicationJSON"] = applicationJSON;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Affjax.RequestBody"] = $PS["Affjax.RequestBody"] || {};
  var exports = $PS["Affjax.RequestBody"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_MediaType_Common = $PS["Data.MediaType.Common"];                
  var ArrayView = (function () {
      function ArrayView(value0) {
          this.value0 = value0;
      };
      ArrayView.create = function (value0) {
          return new ArrayView(value0);
      };
      return ArrayView;
  })();
  var Blob = (function () {
      function Blob(value0) {
          this.value0 = value0;
      };
      Blob.create = function (value0) {
          return new Blob(value0);
      };
      return Blob;
  })();
  var Document = (function () {
      function Document(value0) {
          this.value0 = value0;
      };
      Document.create = function (value0) {
          return new Document(value0);
      };
      return Document;
  })();
  var $$String = (function () {
      function $$String(value0) {
          this.value0 = value0;
      };
      $$String.create = function (value0) {
          return new $$String(value0);
      };
      return $$String;
  })();
  var FormData = (function () {
      function FormData(value0) {
          this.value0 = value0;
      };
      FormData.create = function (value0) {
          return new FormData(value0);
      };
      return FormData;
  })();
  var FormURLEncoded = (function () {
      function FormURLEncoded(value0) {
          this.value0 = value0;
      };
      FormURLEncoded.create = function (value0) {
          return new FormURLEncoded(value0);
      };
      return FormURLEncoded;
  })();
  var Json = (function () {
      function Json(value0) {
          this.value0 = value0;
      };
      Json.create = function (value0) {
          return new Json(value0);
      };
      return Json;
  })();
  var toMediaType = function (v) {
      if (v instanceof FormURLEncoded) {
          return new Data_Maybe.Just(Data_MediaType_Common.applicationFormURLEncoded);
      };
      if (v instanceof Json) {
          return new Data_Maybe.Just(Data_MediaType_Common.applicationJSON);
      };
      return Data_Maybe.Nothing.value;
  };
  exports["ArrayView"] = ArrayView;
  exports["Blob"] = Blob;
  exports["Document"] = Document;
  exports["String"] = $$String;
  exports["FormData"] = FormData;
  exports["FormURLEncoded"] = FormURLEncoded;
  exports["Json"] = Json;
  exports["toMediaType"] = toMediaType;
})(PS);
(function(exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  var heytingAlgebraFunction = function (dictHeytingAlgebra) {
      return new HeytingAlgebra(function (f) {
          return function (g) {
              return function (a) {
                  return conj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (g) {
              return function (a) {
                  return disj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (v) {
          return ff(dictHeytingAlgebra);
      }, function (f) {
          return function (g) {
              return function (a) {
                  return implies(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (a) {
              return not(dictHeytingAlgebra)(f(a));
          };
      }, function (v) {
          return tt(dictHeytingAlgebra);
      });
  };
  exports["HeytingAlgebra"] = HeytingAlgebra;
  exports["tt"] = tt;
  exports["ff"] = ff;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
  exports["heytingAlgebraFunction"] = heytingAlgebraFunction;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };
  var monoidUnit = new Monoid(function () {
      return Data_Semigroup.semigroupUnit;
  }, Data_Unit.unit);
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");                    
  var monoidArray = new Monoid(function () {
      return Data_Semigroup.semigroupArray;
  }, [  ]);
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidUnit"] = monoidUnit;
  exports["monoidString"] = monoidString;
  exports["monoidArray"] = monoidArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Monoid.Disj"] = $PS["Data.Monoid.Disj"] || {};
  var exports = $PS["Data.Monoid.Disj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var monoidDisj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };
  exports["Disj"] = Disj;
  exports["monoidDisj"] = monoidDisj;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];                      
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var over = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (v) {
              return function (f) {
                  var $90 = wrap(dictNewtype1);
                  var $91 = unwrap(dictNewtype);
                  return function ($92) {
                      return $90(f($91($92)));
                  };
              };
          };
      };
  };                        
  var newtypeDisj = new Newtype(function (v) {
      return v;
  }, Data_Monoid_Disj.Disj);
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          var $96 = Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1));
                          var $97 = Data_Functor.map(dictFunctor)(wrap(dictNewtype));
                          return function ($98) {
                              return $96(f($97($98)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
  exports["alaF"] = alaF;
  exports["over"] = over;
  exports["newtypeDisj"] = newtypeDisj;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.MediaType"] = $PS["Data.MediaType"] || {};
  var exports = $PS["Data.MediaType"];
  var Data_Newtype = $PS["Data.Newtype"];          
  var MediaType = function (x) {
      return x;
  }; 
  var newtypeMediaType = new Data_Newtype.Newtype(function (n) {
      return n;
  }, MediaType);
  exports["newtypeMediaType"] = newtypeMediaType;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Affjax.RequestHeader"] = $PS["Affjax.RequestHeader"] || {};
  var exports = $PS["Affjax.RequestHeader"];
  var Data_MediaType = $PS["Data.MediaType"];
  var Data_Newtype = $PS["Data.Newtype"];          
  var Accept = (function () {
      function Accept(value0) {
          this.value0 = value0;
      };
      Accept.create = function (value0) {
          return new Accept(value0);
      };
      return Accept;
  })();
  var ContentType = (function () {
      function ContentType(value0) {
          this.value0 = value0;
      };
      ContentType.create = function (value0) {
          return new ContentType(value0);
      };
      return ContentType;
  })();
  var RequestHeader = (function () {
      function RequestHeader(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RequestHeader.create = function (value0) {
          return function (value1) {
              return new RequestHeader(value0, value1);
          };
      };
      return RequestHeader;
  })();
  var value = function (v) {
      if (v instanceof Accept) {
          return Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)(v.value0);
      };
      if (v instanceof ContentType) {
          return Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)(v.value0);
      };
      if (v instanceof RequestHeader) {
          return v.value1;
      };
      throw new Error("Failed pattern match at Affjax.RequestHeader (line 26, column 1 - line 26, column 33): " + [ v.constructor.name ]);
  }; 
  var name = function (v) {
      if (v instanceof Accept) {
          return "Accept";
      };
      if (v instanceof ContentType) {
          return "Content-Type";
      };
      if (v instanceof RequestHeader) {
          return v.value0;
      };
      throw new Error("Failed pattern match at Affjax.RequestHeader (line 21, column 1 - line 21, column 32): " + [ v.constructor.name ]);
  };
  exports["Accept"] = Accept;
  exports["ContentType"] = ContentType;
  exports["name"] = name;
  exports["value"] = value;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Affjax.ResponseFormat"] = $PS["Affjax.ResponseFormat"] || {};
  var exports = $PS["Affjax.ResponseFormat"];
  var Control_Category = $PS["Control.Category"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_MediaType_Common = $PS["Data.MediaType.Common"];
  var $$ArrayBuffer = (function () {
      function $$ArrayBuffer(value0) {
          this.value0 = value0;
      };
      $$ArrayBuffer.create = function (value0) {
          return new $$ArrayBuffer(value0);
      };
      return $$ArrayBuffer;
  })();
  var Blob = (function () {
      function Blob(value0) {
          this.value0 = value0;
      };
      Blob.create = function (value0) {
          return new Blob(value0);
      };
      return Blob;
  })();
  var Document = (function () {
      function Document(value0) {
          this.value0 = value0;
      };
      Document.create = function (value0) {
          return new Document(value0);
      };
      return Document;
  })();
  var Json = (function () {
      function Json(value0) {
          this.value0 = value0;
      };
      Json.create = function (value0) {
          return new Json(value0);
      };
      return Json;
  })();
  var $$String = (function () {
      function $$String(value0) {
          this.value0 = value0;
      };
      $$String.create = function (value0) {
          return new $$String(value0);
      };
      return $$String;
  })();
  var Ignore = (function () {
      function Ignore(value0) {
          this.value0 = value0;
      };
      Ignore.create = function (value0) {
          return new Ignore(value0);
      };
      return Ignore;
  })();
  var toResponseType = function (v) {
      if (v instanceof $$ArrayBuffer) {
          return "arraybuffer";
      };
      if (v instanceof Blob) {
          return "blob";
      };
      if (v instanceof Document) {
          return "document";
      };
      if (v instanceof Json) {
          return "text";
      };
      if (v instanceof $$String) {
          return "text";
      };
      if (v instanceof Ignore) {
          return "";
      };
      throw new Error("Failed pattern match at Affjax.ResponseFormat (line 46, column 3 - line 52, column 19): " + [ v.constructor.name ]);
  };
  var toMediaType = function (v) {
      if (v instanceof Json) {
          return new Data_Maybe.Just(Data_MediaType_Common.applicationJSON);
      };
      return Data_Maybe.Nothing.value;
  };
  var json = new Json(Control_Category.identity(Control_Category.categoryFn));
  var ignore = new Ignore(Control_Category.identity(Control_Category.categoryFn));
  exports["ArrayBuffer"] = $$ArrayBuffer;
  exports["Blob"] = Blob;
  exports["Document"] = Document;
  exports["Json"] = Json;
  exports["String"] = $$String;
  exports["Ignore"] = Ignore;
  exports["json"] = json;
  exports["ignore"] = ignore;
  exports["toResponseType"] = toResponseType;
  exports["toMediaType"] = toMediaType;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Affjax.ResponseHeader"] = $PS["Affjax.ResponseHeader"] || {};
  var exports = $PS["Affjax.ResponseHeader"];      
  var ResponseHeader = (function () {
      function ResponseHeader(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ResponseHeader.create = function (value0) {
          return function (value1) {
              return new ResponseHeader(value0, value1);
          };
      };
      return ResponseHeader;
  })();
  exports["ResponseHeader"] = ResponseHeader;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var unlessM = function (dictMonad) {
      return function (mb) {
          return function (m) {
              return Control_Bind.bind(dictMonad.Bind1())(mb)(function (b) {
                  return Control_Applicative.unless(dictMonad.Applicative0())(b)(m);
              });
          };
      };
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
  exports["unlessM"] = unlessM;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Bifunctor"] = $PS["Data.Bifunctor"] || {};
  var exports = $PS["Data.Bifunctor"];
  var Control_Category = $PS["Control.Category"];                
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var rmap = function (dictBifunctor) {
      return bimap(dictBifunctor)(Control_Category.identity(Control_Category.categoryFn));
  };
  exports["bimap"] = bimap;
  exports["Bifunctor"] = Bifunctor;
  exports["lmap"] = lmap;
  exports["rmap"] = rmap;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var note = function (a) {
      return Data_Maybe.maybe(new Left(a))(Right.create);
  };
  var functorEither = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof Left) {
              return new Left(m.value0);
          };
          if (m instanceof Right) {
              return new Right(f(m.value0));
          };
          throw new Error("Failed pattern match at Data.Either (line 38, column 1 - line 38, column 52): " + [ m.constructor.name ]);
      };
  });
  var eqEither = function (dictEq) {
      return function (dictEq1) {
          return new Data_Eq.Eq(function (x) {
              return function (y) {
                  if (x instanceof Left && y instanceof Left) {
                      return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                  };
                  if (x instanceof Right && y instanceof Right) {
                      return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
                  };
                  return false;
              };
          });
      };
  };
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either (line 46, column 1 - line 48, column 36): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either (line 82, column 1 - line 84, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Control_Bind.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var semigroupEither = function (dictSemigroup) {
      return new Data_Semigroup.Semigroup(function (x) {
          return function (y) {
              return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semigroup.append(dictSemigroup))(x))(y);
          };
      });
  };
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  var monadEither = new Control_Monad.Monad(function () {
      return applicativeEither;
  }, function () {
      return bindEither;
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["note"] = note;
  exports["hush"] = hush;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["bindEither"] = bindEither;
  exports["monadEither"] = monadEither;
  exports["eqEither"] = eqEither;
  exports["semigroupEither"] = semigroupEither;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Error.Class"] = $PS["Control.Monad.Error.Class"] || {};
  var exports = $PS["Control.Monad.Error.Class"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];                        
  var MonadThrow = function (Monad0, throwError) {
      this.Monad0 = Monad0;
      this.throwError = throwError;
  };
  var MonadError = function (MonadThrow0, catchError) {
      this.MonadThrow0 = MonadThrow0;
      this.catchError = catchError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };                                                      
  var catchError = function (dict) {
      return dict.catchError;
  };
  var $$try = function (dictMonadError) {
      return function (a) {
          return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))((function () {
              var $17 = Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0());
              return function ($18) {
                  return $17(Data_Either.Left.create($18));
              };
          })());
      };
  };
  exports["throwError"] = throwError;
  exports["MonadThrow"] = MonadThrow;
  exports["MonadError"] = MonadError;
  exports["try"] = $$try;
})(PS);
(function(exports) {
  "use strict";

  var unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };                                         
  exports.ordIntImpl = unsafeCompareImpl;
  exports.ordNumberImpl = unsafeCompareImpl;
  exports.ordStringImpl = unsafeCompareImpl;
  exports.ordCharImpl = unsafeCompareImpl;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];              
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS);
(function(exports) {
  "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };

  exports.numSub = function (n1) {
    return function (n2) {
      return n1 - n2;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };

  exports.numAdd = function (n1) {
    return function (n2) {
      return n1 + n2;
    };
  };

  exports.numMul = function (n1) {
    return function (n2) {
      return n1 * n2;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Semiring"] = $PS["Data.Semiring"] || {};
  var exports = $PS["Data.Semiring"];
  var $foreign = $PS["Data.Semiring"];
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var zero = function (dict) {
      return dict.zero;
  }; 
  var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var one = function (dict) {
      return dict.one;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var add = function (dict) {
      return dict.add;
  };
  exports["Semiring"] = Semiring;
  exports["add"] = add;
  exports["zero"] = zero;
  exports["mul"] = mul;
  exports["one"] = one;
  exports["semiringInt"] = semiringInt;
  exports["semiringNumber"] = semiringNumber;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Ring"] = $PS["Data.Ring"] || {};
  var exports = $PS["Data.Ring"];
  var $foreign = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Ring = function (Semiring0, sub) {
      this.Semiring0 = Semiring0;
      this.sub = sub;
  };
  var sub = function (dict) {
      return dict.sub;
  };
  var ringNumber = new Ring(function () {
      return Data_Semiring.semiringNumber;
  }, $foreign.numSub);
  var ringInt = new Ring(function () {
      return Data_Semiring.semiringInt;
  }, $foreign.intSub);
  var negate = function (dictRing) {
      return function (a) {
          return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
      };
  };
  exports["Ring"] = Ring;
  exports["sub"] = sub;
  exports["negate"] = negate;
  exports["ringInt"] = ringInt;
  exports["ringNumber"] = ringNumber;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  }; 
  var ordUnit = new Ord(function () {
      return Data_Eq.eqUnit;
  }, function (v) {
      return function (v1) {
          return Data_Ordering.EQ.value;
      };
  });
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordNumber = new Ord(function () {
      return Data_Eq.eqNumber;
  }, $foreign.ordNumberImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordChar = new Ord(function () {
      return Data_Eq.eqChar;
  }, $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var compare = function (dict) {
      return dict.compare;
  };
  var greaterThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.GT) {
                  return true;
              };
              return false;
          };
      };
  };
  var greaterThanOrEq = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.LT) {
                  return false;
              };
              return true;
          };
      };
  };
  var signum = function (dictOrd) {
      return function (dictRing) {
          return function (x) {
              var $43 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
              if ($43) {
                  return Data_Semiring.one(dictRing.Semiring0());
              };
              return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing.Semiring0()));
          };
      };
  };
  var lessThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.LT) {
                  return true;
              };
              return false;
          };
      };
  };
  var lessThanOrEq = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.GT) {
                  return false;
              };
              return true;
          };
      };
  };
  var max = function (dictOrd) {
      return function (x) {
          return function (y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof Data_Ordering.LT) {
                  return y;
              };
              if (v instanceof Data_Ordering.EQ) {
                  return x;
              };
              if (v instanceof Data_Ordering.GT) {
                  return x;
              };
              throw new Error("Failed pattern match at Data.Ord (line 167, column 3 - line 170, column 12): " + [ v.constructor.name ]);
          };
      };
  };
  var min = function (dictOrd) {
      return function (x) {
          return function (y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof Data_Ordering.LT) {
                  return x;
              };
              if (v instanceof Data_Ordering.EQ) {
                  return x;
              };
              if (v instanceof Data_Ordering.GT) {
                  return y;
              };
              throw new Error("Failed pattern match at Data.Ord (line 158, column 3 - line 161, column 12): " + [ v.constructor.name ]);
          };
      };
  };
  var abs = function (dictOrd) {
      return function (dictRing) {
          return function (x) {
              var $53 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
              if ($53) {
                  return x;
              };
              return Data_Ring.negate(dictRing)(x);
          };
      };
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["lessThan"] = lessThan;
  exports["lessThanOrEq"] = lessThanOrEq;
  exports["greaterThan"] = greaterThan;
  exports["min"] = min;
  exports["max"] = max;
  exports["abs"] = abs;
  exports["signum"] = signum;
  exports["ordInt"] = ordInt;
  exports["ordNumber"] = ordNumber;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
  exports["ordUnit"] = ordUnit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];                
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var uncurry = function (f) {
      return function (v) {
          return f(v.value0)(v.value1);
      };
  };
  var swap = function (v) {
      return new Tuple(v.value1, v.value0);
  };
  var snd = function (v) {
      return v.value1;
  };
  var functorTuple = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new Tuple(m.value0, f(m.value1));
      };
  });                                                                                                   
  var fst = function (v) {
      return v.value0;
  }; 
  var eqTuple = function (dictEq) {
      return function (dictEq1) {
          return new Data_Eq.Eq(function (x) {
              return function (y) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
              };
          });
      };
  };
  var ordTuple = function (dictOrd) {
      return function (dictOrd1) {
          return new Data_Ord.Ord(function () {
              return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
          }, function (x) {
              return function (y) {
                  var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                  if (v instanceof Data_Ordering.LT) {
                      return Data_Ordering.LT.value;
                  };
                  if (v instanceof Data_Ordering.GT) {
                      return Data_Ordering.GT.value;
                  };
                  return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
              };
          });
      };
  };
  var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return new Tuple(f(v.value0), g(v.value1));
          };
      };
  });
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["uncurry"] = uncurry;
  exports["swap"] = swap;
  exports["ordTuple"] = ordTuple;
  exports["functorTuple"] = functorTuple;
  exports["bifunctorTuple"] = bifunctorTuple;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.State.Class"] = $PS["Control.Monad.State.Class"] || {};
  var exports = $PS["Control.Monad.State.Class"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];                
  var MonadState = function (Monad0, state) {
      this.Monad0 = Monad0;
      this.state = state;
  };
  var state = function (dict) {
      return dict.state;
  };
  var put = function (dictMonadState) {
      return function (s) {
          return state(dictMonadState)(function (v) {
              return new Data_Tuple.Tuple(Data_Unit.unit, s);
          });
      };
  };
  var modify_ = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
          });
      };
  };
  var modify = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              var s$prime = f(s);
              return new Data_Tuple.Tuple(s$prime, s$prime);
          });
      };
  };
  var gets = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(f(s), s);
          });
      };
  };
  var get = function (dictMonadState) {
      return state(dictMonadState)(function (s) {
          return new Data_Tuple.Tuple(s, s);
      });
  };
  exports["state"] = state;
  exports["MonadState"] = MonadState;
  exports["get"] = get;
  exports["gets"] = gets;
  exports["put"] = put;
  exports["modify"] = modify;
  exports["modify_"] = modify_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Trans.Class"] = $PS["Control.Monad.Trans.Class"] || {};
  var exports = $PS["Control.Monad.Trans.Class"];
  var MonadTrans = function (lift) {
      this.lift = lift;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  exports["lift"] = lift;
  exports["MonadTrans"] = MonadTrans;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Except.Trans"] = $PS["Control.Monad.Except.Trans"] || {};
  var exports = $PS["Control.Monad.Except.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];                
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  };          
  var monadTransExceptT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function (m) {
          return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(a));
          });
      };
  });
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either((function () {
                  var $90 = Control_Applicative.pure(dictMonad.Applicative0());
                  return function ($91) {
                      return $90(Data_Either.Left.create($91));
                  };
              })())(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, (function () {
          var $92 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($93) {
              return ExceptT($92(Data_Either.Right.create($93)));
          };
      })());
  };
  var monadStateExceptT = function (dictMonadState) {
      return new Control_Monad_State_Class.MonadState(function () {
          return monadExceptT(dictMonadState.Monad0());
      }, function (f) {
          return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
      });
  };
  var monadThrowExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadExceptT(dictMonad);
      }, (function () {
          var $102 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($103) {
              return ExceptT($102(Data_Either.Left.create($103)));
          };
      })());
  };
  exports["ExceptT"] = ExceptT;
  exports["runExceptT"] = runExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadTransExceptT"] = monadTransExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
  exports["monadStateExceptT"] = monadStateExceptT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Comonad"] = $PS["Control.Comonad"] || {};
  var exports = $PS["Control.Comonad"];
  var Comonad = function (Extend0, extract) {
      this.Extend0 = Extend0;
      this.extract = extract;
  };
  var extract = function (dict) {
      return dict.extract;
  };
  exports["Comonad"] = Comonad;
  exports["extract"] = extract;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Extend"] = $PS["Control.Extend"] || {};
  var exports = $PS["Control.Extend"];
  var Control_Category = $PS["Control.Category"];            
  var Extend = function (Functor0, extend) {
      this.Functor0 = Functor0;
      this.extend = extend;
  };                       
  var extend = function (dict) {
      return dict.extend;
  };
  var duplicate = function (dictExtend) {
      return extend(dictExtend)(Control_Category.identity(Control_Category.categoryFn));
  };
  exports["Extend"] = Extend;
  exports["extend"] = extend;
  exports["duplicate"] = duplicate;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Comonad = $PS["Control.Comonad"];
  var Control_Extend = $PS["Control.Extend"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];          
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (m) {
          return f(m);
      };
  });
  var extendIdentity = new Control_Extend.Extend(function () {
      return functorIdentity;
  }, function (f) {
      return function (m) {
          return f(m);
      };
  });
  var comonadIdentity = new Control_Comonad.Comonad(function () {
      return extendIdentity;
  }, function (v) {
      return v;
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["monadIdentity"] = monadIdentity;
  exports["comonadIdentity"] = comonadIdentity;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Except"] = $PS["Control.Monad.Except"] || {};
  var exports = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];                                                
  var runExcept = (function () {
      var $0 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
      return function ($1) {
          return $0(Control_Monad_Except_Trans.runExceptT($1));
      };
  })();
  exports["runExcept"] = runExcept;
})(PS);
(function(exports) {
  "use strict";

  function id(x) {
    return x;
  }                      
  exports.fromObject = id;

  exports.stringify = function (j) {
    return JSON.stringify(j);
  };

  function isArray(a) {
    return Object.prototype.toString.call(a) === "[object Array]";
  }

  exports._caseJson = function (isNull, isBool, isNum, isStr, isArr, isObj, j) {
    if (j == null) return isNull();
    else if (typeof j === "boolean") return isBool(j);
    else if (typeof j === "number") return isNum(j);
    else if (typeof j === "string") return isStr(j);
    else if (Object.prototype.toString.call(j) === "[object Array]")
      return isArr(j);
    else return isObj(j);
  };
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
  "use strict";

  exports._copyST = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f();
  };

  exports._fmapObject = function (m0, f) {
    var m = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m[k] = f(m0[k]);
      }
    }
    return m;
  };

  exports._mapWithKey = function (m0, f) {
    var m = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m[k] = f(k)(m0[k]);
      }
    }
    return m;
  };

  exports._foldM = function (bind) {
    return function (f) {
      return function (mz) {
        return function (m) {
          var acc = mz;
          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            if (hasOwnProperty.call(m, k)) {
              acc = bind(acc)(g(k));
            }
          }
          return acc;
        };
      };
    };
  };

  exports.all = function (f) {
    return function (m) {
      for (var k in m) {
        if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;
      }
      return true;
    };
  };

  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }

  exports.toArrayWithKey = toArrayWithKey;
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function(exports) {
  "use strict";

  exports.map_ = function (f) {
    return function (a) {
      return function () {
        return f(a());
      };
    };
  };

  exports.pure_ = function (a) {
    return function () {
      return a;
    };
  };

  exports.bind_ = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.foreach = function (as) {
    return function (f) {
      return function () {
        for (var i = 0, l = as.length; i < l; i++) {
          f(as[i])();
        }
      };
    };
  };
})(PS["Control.Monad.ST.Internal"] = PS["Control.Monad.ST.Internal"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.ST.Internal"] = $PS["Control.Monad.ST.Internal"] || {};
  var exports = $PS["Control.Monad.ST.Internal"];
  var $foreign = $PS["Control.Monad.ST.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var functorST = new Data_Functor.Functor($foreign.map_);
  var monadST = new Control_Monad.Monad(function () {
      return applicativeST;
  }, function () {
      return bindST;
  });
  var bindST = new Control_Bind.Bind(function () {
      return applyST;
  }, $foreign.bind_);
  var applyST = new Control_Apply.Apply(function () {
      return functorST;
  }, Control_Monad.ap(monadST));
  var applicativeST = new Control_Applicative.Applicative(function () {
      return applyST;
  }, $foreign.pure_);
  exports["functorST"] = functorST;
  exports["applicativeST"] = applicativeST;
  exports["foreach"] = $foreign.foreach;
})(PS);
(function(exports) {
  "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start, n = 0;
      while (i !== end) {
        result[n++] = i;
        i += step;
      }
      result[n] = i;
      return result;
    };
  };                                                                                                 

  exports.fromFoldableImpl = (function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  exports.snoc = function (l) {
    return function (e) {
      var l1 = l.slice();
      l1.push(e);
      return l1;
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  exports._deleteAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 1);
          return just(l1);
        };
      };
    };
  };

  //------------------------------------------------------------------------------
  // Transformations -------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.reverse = function (l) {
    return l.slice().reverse();
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortImpl = function (f) {
    return function (l) {
      return l.slice().sort(function (x, y) {
        return f(x)(y);
      });
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  exports.take = function (n) {
    return function (l) {
      return n < 1 ? [] : l.slice(0, n);
    };
  };

  exports.drop = function (n) {
    return function (l) {
      return n < 1 ? l : l.slice(n);
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Lazy"] = $PS["Control.Lazy"] || {};
  var exports = $PS["Control.Lazy"];               
  var Lazy = function (defer) {
      this.defer = defer;
  }; 
  var defer = function (dict) {
      return dict.defer;
  };
  exports["defer"] = defer;
  exports["Lazy"] = Lazy;
})(PS);
(function(exports) {
  "use strict";

  exports.empty = function () {
    return [];
  };

  exports.pushAll = function (as) {
    return function (xs) {
      return function () {
        return xs.push.apply(xs, as);
      };
    };
  };

  exports.unsafeFreeze = function (xs) {
    return function () {
      return xs;
    };
  };

  function copyImpl(xs) {
    return function () {
      return xs.slice();
    };
  }
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Array.ST"] = $PS["Data.Array.ST"] || {};
  var exports = $PS["Data.Array.ST"];
  var $foreign = $PS["Data.Array.ST"];
  var push = function (a) {
      return $foreign.pushAll([ a ]);
  };
  exports["push"] = push;
  exports["empty"] = $foreign.empty;
  exports["unsafeFreeze"] = $foreign.unsafeFreeze;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];                
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)((function () {
                  var $197 = Control_Apply.applySecond(dictApplicative.Apply0());
                  return function ($198) {
                      return $197(f($198));
                  };
              })())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var indexl = function (dictFoldable) {
      return function (idx) {
          var go = function (cursor) {
              return function (a) {
                  if (cursor.elem instanceof Data_Maybe.Just) {
                      return cursor;
                  };
                  var $109 = cursor.pos === idx;
                  if ($109) {
                      return {
                          elem: new Data_Maybe.Just(a),
                          pos: cursor.pos
                      };
                  };
                  return {
                      pos: cursor.pos + 1 | 0,
                      elem: cursor.elem
                  };
              };
          };
          var $199 = foldl(dictFoldable)(go)({
              elem: Data_Maybe.Nothing.value,
              pos: 0
          });
          return function ($200) {
              return (function (v) {
                  return v.elem;
              })($199($200));
          };
      };
  }; 
  var foldableMaybe = new Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Data_Maybe.Just) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var find = function (dictFoldable) {
      return function (p) {
          var go = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Nothing && p(v1)) {
                      return new Data_Maybe.Just(v1);
                  };
                  return v;
              };
          };
          return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
      };
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeDisj)(Data_Newtype.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  var elem = function (dictFoldable) {
      return function (dictEq) {
          var $204 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);
          var $205 = Data_Eq.eq(dictEq);
          return function ($206) {
              return $204($205($206));
          };
      };
  };
  var notElem = function (dictFoldable) {
      return function (dictEq) {
          return function (x) {
              var $207 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
              var $208 = elem(dictFoldable)(dictEq)(x);
              return function ($209) {
                  return $207($208($209));
              };
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["traverse_"] = traverse_;
  exports["for_"] = for_;
  exports["any"] = any;
  exports["elem"] = elem;
  exports["notElem"] = notElem;
  exports["indexl"] = indexl;
  exports["find"] = find;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Data_Array_ST = $PS["Data.Array.ST"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var sortBy = function (comp) {
      return function (xs) {
          var comp$prime = function (x) {
              return function (y) {
                  var v = comp(x)(y);
                  if (v instanceof Data_Ordering.GT) {
                      return 1;
                  };
                  if (v instanceof Data_Ordering.EQ) {
                      return 0;
                  };
                  if (v instanceof Data_Ordering.LT) {
                      return -1 | 0;
                  };
                  throw new Error("Failed pattern match at Data.Array (line 702, column 15 - line 705, column 13): " + [ v.constructor.name ]);
              };
          };
          return $foreign.sortImpl(comp$prime)(xs);
      };
  };
  var sort = function (dictOrd) {
      return function (xs) {
          return sortBy(Data_Ord.compare(dictOrd))(xs);
      };
  };
  var singleton = function (a) {
      return [ a ];
  };
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  var nubByEq = function (eq) {
      return function (xs) {
          return (function __do() {
              var arr = Data_Array_ST.empty();
              Control_Monad_ST_Internal.foreach(xs)(function (x) {
                  return function __do() {
                      var e = Data_Functor.map(Control_Monad_ST_Internal.functorST)((function () {
                          var $84 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
                          var $85 = Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
                              return eq(v)(x);
                          });
                          return function ($86) {
                              return $84($85($86));
                          };
                      })())(Data_Array_ST.unsafeFreeze(arr))();
                      return Control_Applicative.when(Control_Monad_ST_Internal.applicativeST)(e)(Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(x)(arr)))();
                  };
              })();
              return Data_Array_ST.unsafeFreeze(arr)();
          })();
      };
  };
  var mapWithIndex = function (f) {
      return function (xs) {
          return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
      };
  };
  var some = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())($foreign.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                  return many(dictAlternative)(dictLazy)(v);
              }));
          };
      };
  };
  var many = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())([  ]));
          };
      };
  };                                                                                     
  var init = function (xs) {
      if ($$null(xs)) {
          return Data_Maybe.Nothing.value;
      };
      if (Data_Boolean.otherwise) {
          return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
      };
      throw new Error("Failed pattern match at Data.Array (line 323, column 1 - line 323, column 45): " + [ xs.constructor.name ]);
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var last = function (xs) {
      return index(xs)($foreign.length(xs) - 1 | 0);
  };
  var unsnoc = function (xs) {
      return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return function (v1) {
              return {
                  init: v,
                  last: v1
              };
          };
      })(init(xs)))(last(xs));
  };
  var head = function (xs) {
      return index(xs)(0);
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteAt = $foreign["_deleteAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteBy = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2.length === 0) {
                  return [  ];
              };
              return Data_Maybe.maybe(v2)(function (i) {
                  return Data_Maybe.fromJust()(deleteAt(i)(v2));
              })(findIndex(v(v1))(v2));
          };
      };
  };
  var $$delete = function (dictEq) {
      return deleteBy(Data_Eq.eq(dictEq));
  };
  var difference = function (dictEq) {
      return Data_Foldable.foldr(Data_Foldable.foldableArray)($$delete(dictEq));
  };
  var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
  var mapMaybe = function (f) {
      return concatMap((function () {
          var $94 = Data_Maybe.maybe([  ])(singleton);
          return function ($95) {
              return $94(f($95));
          };
      })());
  };
  var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));
  exports["fromFoldable"] = fromFoldable;
  exports["some"] = some;
  exports["null"] = $$null;
  exports["head"] = head;
  exports["last"] = last;
  exports["unsnoc"] = unsnoc;
  exports["index"] = index;
  exports["catMaybes"] = catMaybes;
  exports["mapWithIndex"] = mapWithIndex;
  exports["sort"] = sort;
  exports["nubByEq"] = nubByEq;
  exports["difference"] = difference;
  exports["length"] = $foreign.length;
  exports["cons"] = $foreign.cons;
  exports["snoc"] = $foreign.snoc;
  exports["reverse"] = $foreign.reverse;
  exports["filter"] = $foreign.filter;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
})(PS);
(function(exports) {
  "use strict";

  exports.mapWithIndexArray = function (f) {
    return function (xs) {
      var l = xs.length;
      var result = Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(i)(xs[i]);
      }
      return result;
    };
  };
})(PS["Data.FunctorWithIndex"] = PS["Data.FunctorWithIndex"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.FunctorWithIndex"] = $PS["Data.FunctorWithIndex"] || {};
  var exports = $PS["Data.FunctorWithIndex"];
  var $foreign = $PS["Data.FunctorWithIndex"];
  var Data_Functor = $PS["Data.Functor"];          
  var FunctorWithIndex = function (Functor0, mapWithIndex) {
      this.Functor0 = Functor0;
      this.mapWithIndex = mapWithIndex;
  };
  var mapWithIndex = function (dict) {
      return dict.mapWithIndex;
  }; 
  var functorWithIndexArray = new FunctorWithIndex(function () {
      return Data_Functor.functorArray;
  }, $foreign.mapWithIndexArray);
  exports["FunctorWithIndex"] = FunctorWithIndex;
  exports["mapWithIndex"] = mapWithIndex;
  exports["functorWithIndexArray"] = functorWithIndexArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.FoldableWithIndex"] = $PS["Data.FoldableWithIndex"] || {};
  var exports = $PS["Data.FoldableWithIndex"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FunctorWithIndex = $PS["Data.FunctorWithIndex"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var FoldableWithIndex = function (Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
      this.Foldable0 = Foldable0;
      this.foldMapWithIndex = foldMapWithIndex;
      this.foldlWithIndex = foldlWithIndex;
      this.foldrWithIndex = foldrWithIndex;
  };
  var foldrWithIndex = function (dict) {
      return dict.foldrWithIndex;
  };
  var foldMapWithIndexDefaultR = function (dictFoldableWithIndex) {
      return function (dictMonoid) {
          return function (f) {
              return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                  return function (x) {
                      return function (acc) {
                          return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
                      };
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableWithIndexArray = new FoldableWithIndex(function () {
      return Data_Foldable.foldableArray;
  }, function (dictMonoid) {
      return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
  }, function (f) {
      return function (z) {
          var $49 = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (y) {
              return function (v) {
                  return f(v.value0)(y)(v.value1);
              };
          })(z);
          var $50 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create);
          return function ($51) {
              return $49($50($51));
          };
      };
  }, function (f) {
      return function (z) {
          var $52 = Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
              return function (y) {
                  return f(v.value0)(v.value1)(y);
              };
          })(z);
          var $53 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create);
          return function ($54) {
              return $52($53($54));
          };
      };
  });
  exports["FoldableWithIndex"] = FoldableWithIndex;
  exports["foldrWithIndex"] = foldrWithIndex;
  exports["foldableWithIndexArray"] = foldableWithIndexArray;
})(PS);
(function(exports) {
  "use strict";

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Function.Uncurried"] = $PS["Data.Function.Uncurried"] || {};
  var exports = $PS["Data.Function.Uncurried"];
  var $foreign = $PS["Data.Function.Uncurried"];
  exports["runFn4"] = $foreign.runFn4;
})(PS);
(function(exports) {
  "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                case 0: return pure([]);
                case 1: return map(array1)(f(array[bot]));
                case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }
              return go(0, array.length);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var $foreign = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];                                                          
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var traversableMaybe = new Traversable(function () {
      return Data_Foldable.foldableMaybe;
  }, function () {
      return Data_Maybe.functorMaybe;
  }, function (dictApplicative) {
      return function (v) {
          if (v instanceof Data_Maybe.Nothing) {
              return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
          };
          if (v instanceof Data_Maybe.Just) {
              return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v.value0);
          };
          throw new Error("Failed pattern match at Data.Traversable (line 86, column 1 - line 90, column 33): " + [ v.constructor.name ]);
      };
  }, function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v(v1.value0));
              };
              throw new Error("Failed pattern match at Data.Traversable (line 86, column 1 - line 90, column 33): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["Traversable"] = Traversable;
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["traversableArray"] = traversableArray;
  exports["traversableMaybe"] = traversableMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.TraversableWithIndex"] = $PS["Data.TraversableWithIndex"] || {};
  var exports = $PS["Data.TraversableWithIndex"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_FunctorWithIndex = $PS["Data.FunctorWithIndex"];
  var Data_Traversable = $PS["Data.Traversable"];  
  var TraversableWithIndex = function (FoldableWithIndex1, FunctorWithIndex0, Traversable2, traverseWithIndex) {
      this.FoldableWithIndex1 = FoldableWithIndex1;
      this.FunctorWithIndex0 = FunctorWithIndex0;
      this.Traversable2 = Traversable2;
      this.traverseWithIndex = traverseWithIndex;
  };
  var traverseWithIndexDefault = function (dictTraversableWithIndex) {
      return function (dictApplicative) {
          return function (f) {
              var $19 = Data_Traversable.sequence(dictTraversableWithIndex.Traversable2())(dictApplicative);
              var $20 = Data_FunctorWithIndex.mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0())(f);
              return function ($21) {
                  return $19($20($21));
              };
          };
      };
  };
  var traverseWithIndex = function (dict) {
      return dict.traverseWithIndex;
  }; 
  var traversableWithIndexArray = new TraversableWithIndex(function () {
      return Data_FoldableWithIndex.foldableWithIndexArray;
  }, function () {
      return Data_FunctorWithIndex.functorWithIndexArray;
  }, function () {
      return Data_Traversable.traversableArray;
  }, function (dictApplicative) {
      return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
  });
  exports["TraversableWithIndex"] = TraversableWithIndex;
  exports["traverseWithIndex"] = traverseWithIndex;
  exports["traversableWithIndexArray"] = traversableWithIndexArray;
})(PS);
(function(exports) {
  "use strict";

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (k) {
    return function (v) {
      return function (m) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Foreign.Object.ST"] = $PS["Foreign.Object.ST"] || {};
  var exports = $PS["Foreign.Object.ST"];
  var $foreign = $PS["Foreign.Object.ST"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Foreign.Object"] = $PS["Foreign.Object"] || {};
  var exports = $PS["Foreign.Object"];
  var $foreign = $PS["Foreign.Object"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_Function = $PS["Data.Function"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_FunctorWithIndex = $PS["Data.FunctorWithIndex"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_TraversableWithIndex = $PS["Data.TraversableWithIndex"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Foreign_Object_ST = $PS["Foreign.Object.ST"];        
  var values = $foreign.toArrayWithKey(function (v) {
      return function (v1) {
          return v1;
      };
  });                                                            
  var thawST = $foreign["_copyST"];
  var mutate = function (f) {
      return function (m) {
          return $foreign.runST(function __do() {
              var s = thawST(m)();
              f(s)();
              return s;
          });
      };
  };                                                                                                    
  var mapWithKey = function (f) {
      return function (m) {
          return $foreign["_mapWithKey"](m, f);
      };
  };
  var lookup = Data_Function_Uncurried.runFn4($foreign["_lookup"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var isSubmap = function (dictEq) {
      return function (m1) {
          return function (m2) {
              var f = function (k) {
                  return function (v) {
                      return $foreign["_lookup"](false, Data_Eq.eq(dictEq)(v), k, m2);
                  };
              };
              return $foreign.all(f)(m1);
          };
      };
  }; 
  var insert = function (k) {
      return function (v) {
          return mutate(Foreign_Object_ST.poke(k)(v));
      };
  };
  var functorObject = new Data_Functor.Functor(function (f) {
      return function (m) {
          return $foreign["_fmapObject"](m, f);
      };
  });
  var functorWithIndexObject = new Data_FunctorWithIndex.FunctorWithIndex(function () {
      return functorObject;
  }, mapWithKey);
  var fromFoldable = function (dictFoldable) {
      return function (l) {
          return $foreign.runST(function __do() {
              var s = Foreign_Object_ST["new"]();
              Control_Monad_ST_Internal.foreach(Data_Array.fromFoldable(dictFoldable)(l))(function (v) {
                  return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Foreign_Object_ST.poke(v.value0)(v.value1)(s));
              })();
              return s;
          });
      };
  };
  var fold = $foreign["_foldM"](Data_Function.applyFlipped);
  var foldMap = function (dictMonoid) {
      return function (f) {
          return fold(function (acc) {
              return function (k) {
                  return function (v) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
                  };
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  };
  var foldableObject = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return foldMap(dictMonoid)(Data_Function["const"](f));
      };
  }, function (f) {
      return fold(function (z) {
          return function (v) {
              return f(z);
          };
      });
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
          };
      };
  });
  var foldableWithIndexObject = new Data_FoldableWithIndex.FoldableWithIndex(function () {
      return foldableObject;
  }, function (dictMonoid) {
      return foldMap(dictMonoid);
  }, function (f) {
      return fold(Data_Function.flip(f));
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Tuple.uncurry(f))(z)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)(m));
          };
      };
  });
  var traversableWithIndexObject = new Data_TraversableWithIndex.TraversableWithIndex(function () {
      return foldableWithIndexObject;
  }, function () {
      return functorWithIndexObject;
  }, function () {
      return traversableObject;
  }, function (dictApplicative) {
      return function (f) {
          return function (ms) {
              return fold(function (acc) {
                  return function (k) {
                      return function (v) {
                          return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Function.flip(insert(k)))(acc))(f(k)(v));
                      };
                  };
              })(Control_Applicative.pure(dictApplicative)($foreign.empty))(ms);
          };
      };
  });
  var traversableObject = new Data_Traversable.Traversable(function () {
      return foldableObject;
  }, function () {
      return functorObject;
  }, function (dictApplicative) {
      return Data_Traversable.traverse(traversableObject)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  }, function (dictApplicative) {
      var $43 = Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexObject)(dictApplicative);
      return function ($44) {
          return $43(Data_Function["const"]($44));
      };
  });
  var eqObject = function (dictEq) {
      return new Data_Eq.Eq(function (m1) {
          return function (m2) {
              return isSubmap(dictEq)(m1)(m2) && isSubmap(dictEq)(m2)(m1);
          };
      });
  };
  exports["lookup"] = lookup;
  exports["fromFoldable"] = fromFoldable;
  exports["values"] = values;
  exports["functorObject"] = functorObject;
  exports["traversableObject"] = traversableObject;
  exports["eqObject"] = eqObject;
  exports["empty"] = $foreign.empty;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Argonaut.Core"] = $PS["Data.Argonaut.Core"] || {};
  var exports = $PS["Data.Argonaut.Core"];
  var $foreign = $PS["Data.Argonaut.Core"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Foreign_Object = $PS["Foreign.Object"];                
  var verbJsonType = function (def) {
      return function (f) {
          return function (g) {
              return g(def)(f);
          };
      };
  };
  var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var jsonEmptyObject = $foreign.fromObject(Foreign_Object.empty);
  var caseJsonString = function (d) {
      return function (f) {
          return function (j) {
              return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                        
  var caseJsonObject = function (d) {
      return function (f) {
          return function (j) {
              return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, j);
          };
      };
  };                                        
  var toObject = toJsonType(caseJsonObject);  
  var caseJsonArray = function (d) {
      return function (f) {
          return function (j) {
              return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), j);
          };
      };
  };                                      
  var toArray = toJsonType(caseJsonArray);
  exports["caseJsonString"] = caseJsonString;
  exports["toArray"] = toArray;
  exports["toObject"] = toObject;
  exports["jsonEmptyObject"] = jsonEmptyObject;
  exports["stringify"] = $foreign.stringify;
})(PS);
(function(exports) {
  "use strict";

  exports._jsonParser = function (fail, succ, s) {
    try {
      return succ(JSON.parse(s));
    }
    catch (e) {
      return fail(e.message);
    }
  };
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Argonaut.Parser"] = $PS["Data.Argonaut.Parser"] || {};
  var exports = $PS["Data.Argonaut.Parser"];
  var $foreign = $PS["Data.Argonaut.Parser"];
  var Data_Either = $PS["Data.Either"];                
  var jsonParser = function (j) {
      return $foreign["_jsonParser"](Data_Either.Left.create, Data_Either.Right.create, j);
  };
  exports["jsonParser"] = jsonParser;
})(PS);
(function(exports) {
  "use strict";

  exports.replaceAll = function (s1) {
    return function (s2) {
      return function (s3) {
        return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2); // eslint-disable-line no-useless-escape
      };
    };
  };

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.toLower = function (s) {
    return s.toLowerCase();
  };

  exports.trim = function (s) {
    return s.trim();
  };

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.Common"] = $PS["Data.String.Common"] || {};
  var exports = $PS["Data.String.Common"];
  var $foreign = $PS["Data.String.Common"];                
  var $$null = function (s) {
      return s === "";
  };
  exports["null"] = $$null;
  exports["replaceAll"] = $foreign.replaceAll;
  exports["split"] = $foreign.split;
  exports["toLower"] = $foreign.toLower;
  exports["trim"] = $foreign.trim;
  exports["joinWith"] = $foreign.joinWith;
})(PS);
(function(exports) {
  /* globals exports */
  "use strict";         

  exports.infinity = Infinity;                       

  var encdecURI = function (encdec) {
    return function (fail, succ, s) {
      try {
        return succ(encdec(s));
      }
      catch (e) {
        return fail(e.message);
      }
    };
  };                                                          
  exports._encodeURIComponent = encdecURI(encodeURIComponent);
})(PS["Global"] = PS["Global"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Global"] = $PS["Global"] || {};
  var exports = $PS["Global"];
  var $foreign = $PS["Global"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var $$encodeURIComponent = function (s) {
      return $foreign["_encodeURIComponent"](Data_Function["const"](Data_Maybe.Nothing.value), Data_Maybe.Just.create, s);
  };
  exports["encodeURIComponent"] = $$encodeURIComponent;
  exports["infinity"] = $foreign.infinity;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.FormURLEncoded"] = $PS["Data.FormURLEncoded"] || {};
  var exports = $PS["Data.FormURLEncoded"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Global = $PS["Global"];
  var toArray = function (v) {
      return v;
  };                                                                                                                 
  var encode = (function () {
      var encodePart = function (v) {
          if (v.value1 instanceof Data_Maybe.Nothing) {
              return Global["encodeURIComponent"](v.value0);
          };
          if (v.value1 instanceof Data_Maybe.Just) {
              return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (key) {
                  return function (val) {
                      return key + ("=" + val);
                  };
              })(Global["encodeURIComponent"](v.value0)))(Global["encodeURIComponent"](v.value1.value0));
          };
          throw new Error("Failed pattern match at Data.FormURLEncoded (line 37, column 18 - line 39, column 108): " + [ v.constructor.name ]);
      };
      var $19 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_String_Common.joinWith("&"));
      var $20 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(encodePart);
      return function ($21) {
          return $19($20(toArray($21)));
      };
  })();
  exports["encode"] = encode;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };

  exports.showCharImpl = function (c) {
    var code = c.charCodeAt(0);
    if (code < 0x20 || code === 0x7F) {
      switch (c) {
        case "\x07": return "'\\a'";
        case "\b": return "'\\b'";
        case "\f": return "'\\f'";
        case "\n": return "'\\n'";
        case "\r": return "'\\r'";
        case "\t": return "'\\t'";
        case "\v": return "'\\v'";
      }
      return "'\\" + code.toString(10) + "'";
    }
    return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var Show = function (show) {
      this.show = show;
  };
  var showString = new Show($foreign.showStringImpl);
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);
  var showChar = new Show($foreign.showCharImpl);
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (dictShow) {
      return new Show($foreign.showArrayImpl(show(dictShow)));
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
  exports["showChar"] = showChar;
  exports["showString"] = showString;
  exports["showArray"] = showArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.HTTP.Method"] = $PS["Data.HTTP.Method"] || {};
  var exports = $PS["Data.HTTP.Method"];
  var Data_Either = $PS["Data.Either"];
  var Data_Show = $PS["Data.Show"];                                  
  var OPTIONS = (function () {
      function OPTIONS() {

      };
      OPTIONS.value = new OPTIONS();
      return OPTIONS;
  })();
  var GET = (function () {
      function GET() {

      };
      GET.value = new GET();
      return GET;
  })();
  var HEAD = (function () {
      function HEAD() {

      };
      HEAD.value = new HEAD();
      return HEAD;
  })();
  var POST = (function () {
      function POST() {

      };
      POST.value = new POST();
      return POST;
  })();
  var PUT = (function () {
      function PUT() {

      };
      PUT.value = new PUT();
      return PUT;
  })();
  var DELETE = (function () {
      function DELETE() {

      };
      DELETE.value = new DELETE();
      return DELETE;
  })();
  var TRACE = (function () {
      function TRACE() {

      };
      TRACE.value = new TRACE();
      return TRACE;
  })();
  var CONNECT = (function () {
      function CONNECT() {

      };
      CONNECT.value = new CONNECT();
      return CONNECT;
  })();
  var PROPFIND = (function () {
      function PROPFIND() {

      };
      PROPFIND.value = new PROPFIND();
      return PROPFIND;
  })();
  var PROPPATCH = (function () {
      function PROPPATCH() {

      };
      PROPPATCH.value = new PROPPATCH();
      return PROPPATCH;
  })();
  var MKCOL = (function () {
      function MKCOL() {

      };
      MKCOL.value = new MKCOL();
      return MKCOL;
  })();
  var COPY = (function () {
      function COPY() {

      };
      COPY.value = new COPY();
      return COPY;
  })();
  var MOVE = (function () {
      function MOVE() {

      };
      MOVE.value = new MOVE();
      return MOVE;
  })();
  var LOCK = (function () {
      function LOCK() {

      };
      LOCK.value = new LOCK();
      return LOCK;
  })();
  var UNLOCK = (function () {
      function UNLOCK() {

      };
      UNLOCK.value = new UNLOCK();
      return UNLOCK;
  })();
  var PATCH = (function () {
      function PATCH() {

      };
      PATCH.value = new PATCH();
      return PATCH;
  })();
  var unCustomMethod = function (v) {
      return v;
  };
  var showMethod = new Data_Show.Show(function (v) {
      if (v instanceof OPTIONS) {
          return "OPTIONS";
      };
      if (v instanceof GET) {
          return "GET";
      };
      if (v instanceof HEAD) {
          return "HEAD";
      };
      if (v instanceof POST) {
          return "POST";
      };
      if (v instanceof PUT) {
          return "PUT";
      };
      if (v instanceof DELETE) {
          return "DELETE";
      };
      if (v instanceof TRACE) {
          return "TRACE";
      };
      if (v instanceof CONNECT) {
          return "CONNECT";
      };
      if (v instanceof PROPFIND) {
          return "PROPFIND";
      };
      if (v instanceof PROPPATCH) {
          return "PROPPATCH";
      };
      if (v instanceof MKCOL) {
          return "MKCOL";
      };
      if (v instanceof COPY) {
          return "COPY";
      };
      if (v instanceof MOVE) {
          return "MOVE";
      };
      if (v instanceof LOCK) {
          return "LOCK";
      };
      if (v instanceof UNLOCK) {
          return "UNLOCK";
      };
      if (v instanceof PATCH) {
          return "PATCH";
      };
      throw new Error("Failed pattern match at Data.HTTP.Method (line 40, column 1 - line 56, column 23): " + [ v.constructor.name ]);
  });
  var print = Data_Either.either(Data_Show.show(showMethod))(unCustomMethod);
  exports["GET"] = GET;
  exports["print"] = print;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];                    
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modify'"] = function (f) {
    return function (ref) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.write = function (val) {
    return function (ref) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Ref"] = $PS["Effect.Ref"] || {};
  var exports = $PS["Effect.Ref"];
  var $foreign = $PS["Effect.Ref"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];                
  var modify = function (f) {
      return $foreign["modify'"](function (s) {
          var s$prime = f(s);
          return {
              state: s$prime,
              value: s$prime
          };
      });
  };
  var modify_ = function (f) {
      return function (s) {
          return Data_Functor["void"](Effect.functorEffect)(modify(f)(s));
      };
  };
  exports["modify_"] = modify_;
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["modify'"] = $foreign["modify'"];
  exports["write"] = $foreign.write;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Rec.Class"] = $PS["Control.Monad.Rec.Class"] || {};
  var exports = $PS["Control.Monad.Rec.Class"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];                
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var MonadRec = function (Monad0, tailRecM) {
      this.Monad0 = Monad0;
      this.tailRecM = tailRecM;
  };
  var tailRecM = function (dict) {
      return dict.tailRecM;
  };
  var tailRec = function (f) {
      var go = function ($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
              if (v instanceof Loop) {
                  $copy_v = f(v.value0);
                  return;
              };
              if (v instanceof Done) {
                  $tco_done = true;
                  return v.value0;
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 93, column 3 - line 93, column 25): " + [ v.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return function ($58) {
          return go(f($58));
      };
  }; 
  var monadRecEither = new MonadRec(function () {
      return Data_Either.monadEither;
  }, function (f) {
      return function (a0) {
          var g = function (v) {
              if (v instanceof Data_Either.Left) {
                  return new Done(new Data_Either.Left(v.value0));
              };
              if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
                  return new Loop(f(v.value0.value0));
              };
              if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
                  return new Done(new Data_Either.Right(v.value0.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 121, column 7 - line 121, column 33): " + [ v.constructor.name ]);
          };
          return tailRec(g)(f(a0));
      };
  });
  var monadRecEffect = new MonadRec(function () {
      return Effect.monadEffect;
  }, function (f) {
      return function (a) {
          var fromDone = function (v) {
              if (v instanceof Done) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 113, column 30 - line 113, column 44): " + [ v.constructor.name ]);
          };
          return function __do() {
              var r = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(f(a))();
              (function () {
                  while (!(function __do() {
                      var v = Effect_Ref.read(r)();
                      if (v instanceof Loop) {
                          var e = f(v.value0)();
                          Effect_Ref.write(e)(r)();
                          return false;
                      };
                      if (v instanceof Done) {
                          return true;
                      };
                      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 104, column 22 - line 109, column 28): " + [ v.constructor.name ]);
                  })()) {

                  };
                  return {};
              })();
              return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(r))();
          };
      };
  });
  var bifunctorStep = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Loop) {
                  return new Loop(v(v2.value0));
              };
              if (v2 instanceof Done) {
                  return new Done(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 29, column 1 - line 31, column 34): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["MonadRec"] = MonadRec;
  exports["tailRecM"] = tailRecM;
  exports["bifunctorStep"] = bifunctorStep;
  exports["monadRecEffect"] = monadRecEffect;
  exports["monadRecEither"] = monadRecEither;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.NonEmpty"] = $PS["Data.NonEmpty"] || {};
  var exports = $PS["Data.NonEmpty"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Functor = $PS["Data.Functor"];                        
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  var functorNonEmpty = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (m) {
              return new NonEmpty(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
          };
      });
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
  exports["functorNonEmpty"] = functorNonEmpty;
})(PS);
(function(exports) {
  "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {};
  var exports = $PS["Data.Unfoldable1"];
  var $foreign = $PS["Data.Unfoldable1"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Unfoldable1 = function (unfoldr1) {
      this.unfoldr1 = unfoldr1;
  }; 
  var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable1"] = Unfoldable1;
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {};
  var exports = $PS["Data.Unfoldable"];
  var $foreign = $PS["Data.Unfoldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];  
  var Unfoldable = function (Unfoldable10, unfoldr) {
      this.Unfoldable10 = Unfoldable10;
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  }; 
  var unfoldableArray = new Unfoldable(function () {
      return Data_Unfoldable1.unfoldable1Array;
  }, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];                
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var listMap = function (f) {
      var chunkedRevMap = function ($copy_chunksAcc) {
          return function ($copy_v) {
              var $tco_var_chunksAcc = $copy_chunksAcc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(chunksAcc, v) {
                  if (v instanceof Cons && (v.value1 instanceof Cons && v.value1.value1 instanceof Cons)) {
                      $tco_var_chunksAcc = new Cons(v, chunksAcc);
                      $copy_v = v.value1.value1.value1;
                      return;
                  };
                  var unrolledMap = function (v1) {
                      if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil)) {
                          return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
                      };
                      if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                          return new Cons(f(v1.value0), Nil.value);
                      };
                      return Nil.value;
                  };
                  var reverseUnrolledMap = function ($copy_v1) {
                      return function ($copy_acc) {
                          var $tco_var_v1 = $copy_v1;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v1, acc) {
                              if (v1 instanceof Cons && (v1.value0 instanceof Cons && (v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons))) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                                  return;
                              };
                              $tco_done = true;
                              return acc;
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v1, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
                  $tco_done = true;
                  return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
              };
              return $tco_result;
          };
      };
      return chunkedRevMap(Nil.value);
  };
  var functorList = new Data_Functor.Functor(listMap);
  var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              var $202 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
              return function ($203) {
                  return $202(f($203));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types (line 109, column 12 - line 111, column 30): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
          var $204 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
          return function ($205) {
              return $204(rev($205));
          };
      };
  });
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });
  var unfoldable1List = new Data_Unfoldable1.Unfoldable1(function (f) {
      return function (b) {
          var go = function ($copy_source) {
              return function ($copy_memo) {
                  var $tco_var_source = $copy_source;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(source, memo) {
                      var v = f(source);
                      if (v.value1 instanceof Data_Maybe.Just) {
                          $tco_var_source = v.value1.value0;
                          $copy_memo = new Cons(v.value0, memo);
                          return;
                      };
                      if (v.value1 instanceof Data_Maybe.Nothing) {
                          $tco_done = true;
                          return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
                      };
                      throw new Error("Failed pattern match at Data.List.Types (line 133, column 22 - line 135, column 61): " + [ v.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_source, $copy_memo);
                  };
                  return $tco_result;
              };
          };
          return go(b)(Nil.value);
      };
  });
  var unfoldableList = new Data_Unfoldable.Unfoldable(function () {
      return unfoldable1List;
  }, function (f) {
      return function (b) {
          var go = function ($copy_source) {
              return function ($copy_memo) {
                  var $tco_var_source = $copy_source;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(source, memo) {
                      var v = f(source);
                      if (v instanceof Data_Maybe.Nothing) {
                          $tco_done = true;
                          return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
                      };
                      if (v instanceof Data_Maybe.Just) {
                          $tco_var_source = v.value0.value1;
                          $copy_memo = new Cons(v.value0.value0, memo);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List.Types (line 140, column 22 - line 142, column 52): " + [ v.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_source, $copy_memo);
                  };
                  return $tco_result;
              };
          };
          return go(b)(Nil.value);
      };
  });
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types (line 155, column 1 - line 157, column 48): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applyNonEmptyList = new Control_Apply.Apply(function () {
      return functorNonEmptyList;
  }, function (v) {
      return function (v1) {
          return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
      };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });                                              
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
      return applyNonEmptyList;
  }, (function () {
      var $233 = Data_NonEmpty.singleton(plusList);
      return function ($234) {
          return NonEmptyList($233($234));
      };
  })());
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["unfoldableList"] = unfoldableList;
  exports["applicativeList"] = applicativeList;
  exports["plusList"] = plusList;
  exports["applicativeNonEmptyList"] = applicativeNonEmptyList;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.List"] = $PS["Data.List"] || {};
  var exports = $PS["Data.List"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Unit = $PS["Data.Unit"];
  var reverse = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var $$null = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };
  var manyRec = function (dictMonadRec) {
      return function (dictAlternative) {
          return function (p) {
              var go = function (acc) {
                  return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative.Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (aa) {
                      return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v) {
                          return new Data_List_Types.Cons(v, acc);
                      })(function (v) {
                          return reverse(acc);
                      })(aa));
                  });
              };
              return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
          };
      };
  };
  var some = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                  return many(dictAlternative)(dictLazy)(v);
              }));
          };
      };
  };
  var many = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
          };
      };
  };
  var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
      return function (v) {
          return acc + 1 | 0;
      };
  })(0);
  exports["some"] = some;
  exports["manyRec"] = manyRec;
  exports["null"] = $$null;
  exports["length"] = length;
  exports["reverse"] = reverse;
})(PS);
(function(exports) {
  "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  "use strict";

  // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Partial"] = $PS["Partial"] || {};
  var exports = $PS["Partial"];
  var $foreign = $PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Partial.Unsafe"] = $PS["Partial.Unsafe"] || {};
  var exports = $PS["Partial.Unsafe"];
  var $foreign = $PS["Partial.Unsafe"];
  var Partial = $PS["Partial"];
  var unsafeCrashWith = function (msg) {
      return $foreign.unsafePartial(function (dictPartial) {
          return Partial.crashWith()(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.List.NonEmpty"] = $PS["Data.List.NonEmpty"] || {};
  var exports = $PS["Data.List.NonEmpty"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var wrappedOperation = function (name) {
      return function (f) {
          return function (v) {
              var v1 = f(new Data_List_Types.Cons(v.value0, v.value1));
              if (v1 instanceof Data_List_Types.Cons) {
                  return new Data_NonEmpty.NonEmpty(v1.value0, v1.value1);
              };
              if (v1 instanceof Data_List_Types.Nil) {
                  return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
              };
              throw new Error("Failed pattern match at Data.List.NonEmpty (line 91, column 3 - line 93, column 81): " + [ v1.constructor.name ]);
          };
      };
  };
  var toList = function (v) {
      return new Data_List_Types.Cons(v.value0, v.value1);
  };
  var singleton = (function () {
      var $168 = Data_NonEmpty.singleton(Data_List_Types.plusList);
      return function ($169) {
          return Data_List_Types.NonEmptyList($168($169));
      };
  })();
  var reverse = wrappedOperation("reverse")(Data_List.reverse);
  var head = function (v) {
      return v.value0;
  };
  var cons = function (y) {
      return function (v) {
          return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
      };
  };
  exports["toList"] = toList;
  exports["singleton"] = singleton;
  exports["cons"] = cons;
  exports["head"] = head;
  exports["reverse"] = reverse;
})(PS);
(function(exports) {
  "use strict";

  exports["null"] = null;

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
  exports["toNullable"] = toNullable;
  exports["null"] = $foreign["null"];
})(PS);
(function(exports) {
  /* globals setImmediate, clearImmediate, setTimeout, clearTimeout */
  /* jshint -W083, -W098, -W003 */
  "use strict";

  var Aff = function () {
    // A unique value for empty.
    var EMPTY = {};

    /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */  
    var PURE    = "Pure";
    var THROW   = "Throw";
    var CATCH   = "Catch";
    var SYNC    = "Sync";
    var ASYNC   = "Async";
    var BIND    = "Bind";
    var BRACKET = "Bracket";
    var FORK    = "Fork";
    var SEQ     = "Sequential";

    /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */  
    var MAP   = "Map";
    var APPLY = "Apply";
    var ALT   = "Alt";

    // Various constructors used in interpretation
    var CONS      = "Cons";      // Cons-list, for stacks
    var RESUME    = "Resume";    // Continue indiscriminately
    var RELEASE   = "Release";   // Continue with bracket finalizers
    var FINALIZER = "Finalizer"; // A non-interruptible effect
    var FINALIZED = "Finalized"; // Marker for finalization
    var FORKED    = "Forked";    // Reference to a forked fiber, with resumption stack
    var FIBER     = "Fiber";     // Actual fiber reference
    var THUNK     = "Thunk";     // Primed effect, ready to invoke

    function Aff(tag, _1, _2, _3) {
      this.tag = tag;
      this._1  = _1;
      this._2  = _2;
      this._3  = _3;
    }

    function AffCtr(tag) {
      var fn = function (_1, _2, _3) {
        return new Aff(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }

    function nonCanceler(error) {
      return new Aff(PURE, void 0);
    }

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error) {
        return left(error);
      }
    }

    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error) {
        k(left(error))();
        return nonCanceler;
      }
    }

    var Scheduler = function () {
      var limit    = 1024;
      var size     = 0;
      var ix       = 0;
      var queue    = new Array(limit);
      var draining = false;

      function drain() {
        var thunk;
        draining = true;
        while (size !== 0) {
          size--;
          thunk     = queue[ix];
          queue[ix] = void 0;
          ix        = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }

      return {
        isDraining: function () {
          return draining;
        },
        enqueue: function (cb) {
          var i, tmp;
          if (size === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }

          queue[(ix + size) % limit] = cb;
          size++;

          if (!draining) {
            drain();
          }
        }
      };
    }();

    function Supervisor(util) {
      var fibers  = {};
      var fiberId = 0;
      var count   = 0;

      return {
        register: function (fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function (result) {
              return function () {
                count--;
                delete fibers[fid];
              };
            }
          })();
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function () {
          return count === 0;
        },
        killAll: function (killError, cb) {
          return function () {
            if (count === 0) {
              return cb();
            }

            var killCount = 0;
            var kills     = {};

            function kill(fid) {
              kills[fid] = fibers[fid].kill(killError, function (result) {
                return function () {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function () {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }

            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill(k);
              }
            }

            fibers  = {};
            fiberId = 0;
            count   = 0;

            return function (error) {
              return new Aff(SYNC, function () {
                for (var k in kills) {
                  if (kills.hasOwnProperty(k)) {
                    kills[k]();
                  }
                }
              });
            };
          };
        }
      };
    }

    // Fiber state machine
    var SUSPENDED   = 0; // Suspended, pending a join.
    var CONTINUE    = 1; // Interpret the next instruction.
    var STEP_BIND   = 2; // Apply the next bind.
    var STEP_RESULT = 3; // Handle potential failure from a result.
    var PENDING     = 4; // An async effect is running.
    var RETURN      = 5; // The current stack has returned.
    var COMPLETED   = 6; // The entire fiber has completed.

    function Fiber(util, supervisor, aff) {
      // Monotonically increasing tick, increased on each asynchronous turn.
      var runTick = 0;

      // The current branch of the state machine.
      var status = SUSPENDED;

      // The current point of interest for the state machine branch.
      var step      = aff;  // Successful step
      var fail      = null; // Failure step
      var interrupt = null; // Asynchronous interrupt

      // Stack of continuations for the current fiber.
      var bhead = null;
      var btail = null;

      // Stack of attempts and finalizers for error recovery. Every `Cons` is also
      // tagged with current `interrupt` state. We use this to track which items
      // should be ignored or evaluated as a result of a kill.
      var attempts = null;

      // A special state is needed for Bracket, because it cannot be killed. When
      // we enter a bracket acquisition or finalizer, we increment the counter,
      // and then decrement once complete.
      var bracketCount = 0;

      // Each join gets a new id so they can be revoked.
      var joinId  = 0;
      var joins   = null;
      var rethrow = true;

      // Each invocation of `run` requires a tick. When an asynchronous effect is
      // resolved, we must check that the local tick coincides with the fiber
      // tick before resuming. This prevents multiple async continuations from
      // accidentally resuming the same fiber. A common example may be invoking
      // the provided callback in `makeAff` more than once, but it may also be an
      // async effect resuming after the fiber was already cancelled.
      function run(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp       = null;
          result    = null;
          attempt   = null;

          switch (status) {
          case STEP_BIND:
            status = CONTINUE;
            try {
              step   = bhead(step);
              if (btail === null) {
                bhead = null;
              } else {
                bhead = btail._1;
                btail = btail._2;
              }
            } catch (e) {
              status = RETURN;
              fail   = util.left(e);
              step   = null;
            }
            break;

          case STEP_RESULT:
            if (util.isLeft(step)) {
              status = RETURN;
              fail   = step;
              step   = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step   = util.fromRight(step);
            }
            break;

          case CONTINUE:
            switch (step.tag) {
            case BIND:
              if (bhead) {
                btail = new Aff(CONS, bhead, btail);
              }
              bhead  = step._2;
              status = CONTINUE;
              step   = step._1;
              break;

            case PURE:
              if (bhead === null) {
                status = RETURN;
                step   = util.right(step._1);
              } else {
                status = STEP_BIND;
                step   = step._1;
              }
              break;

            case SYNC:
              status = STEP_RESULT;
              step   = runSync(util.left, util.right, step._1);
              break;

            case ASYNC:
              status = PENDING;
              step   = runAsync(util.left, step._1, function (result) {
                return function () {
                  if (runTick !== localRunTick) {
                    return;
                  }
                  runTick++;
                  Scheduler.enqueue(function () {
                    // It's possible to interrupt the fiber between enqueuing and
                    // resuming, so we need to check that the runTick is still
                    // valid.
                    if (runTick !== localRunTick + 1) {
                      return;
                    }
                    status = STEP_RESULT;
                    step   = result;
                    run(runTick);
                  });
                };
              });
              return;

            case THROW:
              status = RETURN;
              fail   = util.left(step._1);
              step   = null;
              break;

            // Enqueue the Catch so that we can call the error handler later on
            // in case of an exception.
            case CATCH:
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead    = null;
              btail    = null;
              status   = CONTINUE;
              step     = step._1;
              break;

            // Enqueue the Bracket so that we can call the appropriate handlers
            // after resource acquisition.
            case BRACKET:
              bracketCount++;
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead  = null;
              btail  = null;
              status = CONTINUE;
              step   = step._1;
              break;

            case FORK:
              status = STEP_RESULT;
              tmp    = Fiber(util, supervisor, step._2);
              if (supervisor) {
                supervisor.register(tmp);
              }
              if (step._1) {
                tmp.run();
              }
              step = util.right(tmp);
              break;

            case SEQ:
              status = CONTINUE;
              step   = sequential(util, supervisor, step._1);
              break;
            }
            break;

          case RETURN:
            bhead = null;
            btail = null;
            // If the current stack has returned, and we have no other stacks to
            // resume or finalizers to run, the fiber has halted and we can
            // invoke all join callbacks. Otherwise we need to resume.
            if (attempts === null) {
              status = COMPLETED;
              step   = interrupt || fail || step;
            } else {
              // The interrupt status for the enqueued item.
              tmp      = attempts._3;
              attempt  = attempts._1;
              attempts = attempts._2;

              switch (attempt.tag) {
              // We cannot recover from an unmasked interrupt. Otherwise we should
              // continue stepping, or run the exception handler if an exception
              // was raised.
              case CATCH:
                // We should compare the interrupt status as well because we
                // only want it to apply if there has been an interrupt since
                // enqueuing the catch.
                if (interrupt && interrupt !== tmp && bracketCount === 0) {
                  status = RETURN;
                } else if (fail) {
                  status = CONTINUE;
                  step   = attempt._2(util.fromLeft(fail));
                  fail   = null;
                }
                break;

              // We cannot resume from an unmasked interrupt or exception.
              case RESUME:
                // As with Catch, we only want to ignore in the case of an
                // interrupt since enqueing the item.
                if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {
                  status = RETURN;
                } else {
                  bhead  = attempt._1;
                  btail  = attempt._2;
                  status = STEP_BIND;
                  step   = util.fromRight(step);
                }
                break;

              // If we have a bracket, we should enqueue the handlers,
              // and continue with the success branch only if the fiber has
              // not been interrupted. If the bracket acquisition failed, we
              // should not run either.
              case BRACKET:
                bracketCount--;
                if (fail === null) {
                  result   = util.fromRight(step);
                  // We need to enqueue the Release with the same interrupt
                  // status as the Bracket that is initiating it.
                  attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);
                  // We should only coninue as long as the interrupt status has not changed or
                  // we are currently within a non-interruptable finalizer.
                  if (interrupt === tmp || bracketCount > 0) {
                    status = CONTINUE;
                    step   = attempt._3(result);
                  }
                }
                break;

              // Enqueue the appropriate handler. We increase the bracket count
              // because it should not be cancelled.
              case RELEASE:
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                // It has only been killed if the interrupt status has changed
                // since we enqueued the item, and the bracket count is 0. If the
                // bracket count is non-zero then we are in a masked state so it's
                // impossible to be killed.
                if (interrupt && interrupt !== tmp && bracketCount === 0) {
                  step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                } else if (fail) {
                  step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                } else {
                  step = attempt._1.completed(util.fromRight(step))(attempt._2);
                }
                fail = null;
                bracketCount++;
                break;

              case FINALIZER:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                step     = attempt._1;
                break;

              case FINALIZED:
                bracketCount--;
                status = RETURN;
                step   = attempt._1;
                fail   = attempt._2;
                break;
              }
            }
            break;

          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step));
              }
            }
            joins = null;
            // If we have an interrupt and a fail, then the thread threw while
            // running finalizers. This should always rethrow in a fresh stack.
            if (interrupt && fail) {
              setTimeout(function () {
                throw util.fromLeft(fail);
              }, 0);
            // If we have an unhandled exception, and no other fiber has joined
            // then we need to throw the exception in a fresh stack.
            } else if (util.isLeft(step) && rethrow) {
              setTimeout(function () {
                // Guard on reathrow because a completely synchronous fiber can
                // still have an observer which was added after-the-fact.
                if (rethrow) {
                  throw util.fromLeft(step);
                }
              }, 0);
            }
            return;
          case SUSPENDED:
            status = CONTINUE;
            break;
          case PENDING: return;
          }
        }
      }

      function onComplete(join) {
        return function () {
          if (status === COMPLETED) {
            rethrow = rethrow && join.rethrow;
            join.handler(step)();
            return function () {};
          }

          var jid    = joinId++;
          joins      = joins || {};
          joins[jid] = join;

          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }

      function kill(error, cb) {
        return function () {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function () {};
          }

          var canceler = onComplete({
            rethrow: false,
            handler: function (/* unused */) {
              return cb(util.right(void 0));
            }
          })();

          switch (status) {
          case SUSPENDED:
            interrupt = util.left(error);
            status    = COMPLETED;
            step      = interrupt;
            run(runTick);
            break;
          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
              }
              status   = RETURN;
              step     = null;
              fail     = null;
              run(++runTick);
            }
            break;
          default:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              status = RETURN;
              step   = null;
              fail   = null;
            }
          }

          return canceler;
        };
      }

      function join(cb) {
        return function () {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run(runTick);
          }
          return canceler;
        };
      }

      return {
        kill: kill,
        join: join,
        onComplete: onComplete,
        isSuspended: function () {
          return status === SUSPENDED;
        },
        run: function () {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function () {
                run(runTick);
              });
            } else {
              run(runTick);
            }
          }
        }
      };
    }

    function runPar(util, supervisor, par, cb) {
      // Table of all forked fibers.
      var fiberId   = 0;
      var fibers    = {};

      // Table of currently running cancelers, as a product of `Alt` behavior.
      var killId    = 0;
      var kills     = {};

      // Error used for early cancelation on Alt branches.
      var early     = new Error("[ParAff] Early exit");

      // Error used to kill the entire tree.
      var interrupt = null;

      // The root pointer of the tree.
      var root      = EMPTY;

      // Walks a tree, invoking all the cancelers. Returns the table of pending
      // cancellation fibers.
      function kill(error, par, cb) {
        var step  = par;
        var head  = null;
        var tail  = null;
        var count = 0;
        var kills = {};
        var tmp, kid;

        loop: while (true) {
          tmp = null;

          switch (step.tag) {
          case FORKED:
            if (step._3 === EMPTY) {
              tmp = fibers[step._1];
              kills[count++] = tmp.kill(error, function (result) {
                return function () {
                  count--;
                  if (count === 0) {
                    cb(result)();
                  }
                };
              });
            }
            // Terminal case.
            if (head === null) {
              break loop;
            }
            // Go down the right side of the tree.
            step = head._2;
            if (tail === null) {
              head = null;
            } else {
              head = tail._1;
              tail = tail._2;
            }
            break;
          case MAP:
            step = step._2;
            break;
          case APPLY:
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = step;
            step = step._1;
            break;
          }
        }

        if (count === 0) {
          cb(util.right(void 0))();
        } else {
          // Run the cancelation effects. We alias `count` because it's mutable.
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills[kid] = kills[kid]();
          }
        }

        return kills;
      }

      // When a fiber resolves, we need to bubble back up the tree with the
      // result, computing the applicative nodes.
      function join(result, head, tail) {
        var fail, step, lhs, rhs, tmp, kid;

        if (util.isLeft(result)) {
          fail = result;
          step = null;
        } else {
          step = result;
          fail = null;
        }

        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;

          // We should never continue if the entire tree has been interrupted.
          if (interrupt !== null) {
            return;
          }

          // We've made it all the way to the root of the tree, which means
          // the tree has fully evaluated.
          if (head === null) {
            cb(fail || step)();
            return;
          }

          // The tree has already been computed, so we shouldn't try to do it
          // again. This should never happen.
          // TODO: Remove this?
          if (head._3 !== EMPTY) {
            return;
          }

          switch (head.tag) {
          case MAP:
            if (fail === null) {
              head._3 = util.right(head._1(util.fromRight(step)));
              step    = head._3;
            } else {
              head._3 = fail;
            }
            break;
          case APPLY:
            lhs = head._1._3;
            rhs = head._2._3;
            // If we have a failure we should kill the other side because we
            // can't possible yield a result anymore.
            if (fail) {
              head._3 = fail;
              tmp     = true;
              kid     = killId++;

              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(fail, null, null);
                  } else {
                    join(fail, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            } else if (lhs === EMPTY || rhs === EMPTY) {
              // We can only proceed if both sides have resolved.
              return;
            } else {
              step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
              head._3 = step;
            }
            break;
          case ALT:
            lhs = head._1._3;
            rhs = head._2._3;
            // We can only proceed if both have resolved or we have a success
            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
              return;
            }
            // If both sides resolve with an error, we should continue with the
            // first error
            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
              fail    = step === lhs ? rhs : lhs;
              step    = null;
              head._3 = fail;
            } else {
              head._3 = step;
              tmp     = true;
              kid     = killId++;
              // Once a side has resolved, we need to cancel the side that is still
              // pending before we can continue.
              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            }
            break;
          }

          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
        }
      }

      function resolve(fiber) {
        return function (result) {
          return function () {
            delete fibers[fiber._1];
            fiber._3 = result;
            join(result, fiber._2._1, fiber._2._2);
          };
        };
      }

      // Walks the applicative tree, substituting non-applicative nodes with
      // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
      // as a mutable slot for memoization. In an unresolved state, the `_3`
      // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
      // the left side first, because both operations are left-associative. As
      // we `RETURN` from those branches, we then walk the right side.
      function run() {
        var status = CONTINUE;
        var step   = par;
        var head   = null;
        var tail   = null;
        var tmp, fid;

        loop: while (true) {
          tmp = null;
          fid = null;

          switch (status) {
          case CONTINUE:
            switch (step.tag) {
            case MAP:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(MAP, step._1, EMPTY, EMPTY);
              step = step._2;
              break;
            case APPLY:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(APPLY, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            case ALT:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(ALT, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            default:
              // When we hit a leaf value, we suspend the stack in the `FORKED`.
              // When the fiber resolves, it can bubble back up the tree.
              fid    = fiberId++;
              status = RETURN;
              tmp    = step;
              step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
              tmp    = Fiber(util, supervisor, tmp);
              tmp.onComplete({
                rethrow: false,
                handler: resolve(step)
              })();
              fibers[fid] = tmp;
              if (supervisor) {
                supervisor.register(tmp);
              }
            }
            break;
          case RETURN:
            // Terminal case, we are back at the root.
            if (head === null) {
              break loop;
            }
            // If we are done with the right side, we need to continue down the
            // left. Otherwise we should continue up the stack.
            if (head._1 === EMPTY) {
              head._1 = step;
              status  = CONTINUE;
              step    = head._2;
              head._2 = EMPTY;
            } else {
              head._2 = step;
              step    = head;
              if (tail === null) {
                head  = null;
              } else {
                head  = tail._1;
                tail  = tail._2;
              }
            }
          }
        }

        // Keep a reference to the tree root so it can be cancelled.
        root = step;

        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }

      // Cancels the entire tree. If there are already subtrees being canceled,
      // we need to first cancel those joins. We will then add fresh joins for
      // all pending branches including those that were in the process of being
      // canceled.
      function cancel(error, cb) {
        interrupt = util.left(error);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }

        kills = null;
        var newKills = kill(error, root, cb);

        return function (killError) {
          return new Aff(ASYNC, function (killCb) {
            return function () {
              for (var kid in newKills) {
                if (newKills.hasOwnProperty(kid)) {
                  newKills[kid]();
                }
              }
              return nonCanceler;
            };
          });
        };
      }

      run();

      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            return cancel(killError, killCb);
          };
        });
      };
    }

    function sequential(util, supervisor, par) {
      return new Aff(ASYNC, function (cb) {
        return function () {
          return runPar(util, supervisor, par, cb);
        };
      });
    }

    Aff.EMPTY       = EMPTY;
    Aff.Pure        = AffCtr(PURE);
    Aff.Throw       = AffCtr(THROW);
    Aff.Catch       = AffCtr(CATCH);
    Aff.Sync        = AffCtr(SYNC);
    Aff.Async       = AffCtr(ASYNC);
    Aff.Bind        = AffCtr(BIND);
    Aff.Bracket     = AffCtr(BRACKET);
    Aff.Fork        = AffCtr(FORK);
    Aff.Seq         = AffCtr(SEQ);
    Aff.ParMap      = AffCtr(MAP);
    Aff.ParApply    = AffCtr(APPLY);
    Aff.ParAlt      = AffCtr(ALT);
    Aff.Fiber       = Fiber;
    Aff.Supervisor  = Supervisor;
    Aff.Scheduler   = Scheduler;
    Aff.nonCanceler = nonCanceler;

    return Aff;
  }();

  exports._pure = Aff.Pure;

  exports._throwError = Aff.Throw;

  exports._catchError = function (aff) {
    return function (k) {
      return Aff.Catch(aff, k);
    };
  };

  exports._map = function (f) {
    return function (aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function (value) {
          return Aff.Pure(f(value));
        });
      }
    };
  };

  exports._bind = function (aff) {
    return function (k) {
      return Aff.Bind(aff, k);
    };
  };

  exports._fork = function (immediate) {
    return function (aff) {
      return Aff.Fork(immediate, aff);
    };
  };

  exports._liftEffect = Aff.Sync;

  exports._parAffMap = function (f) {
    return function (aff) {
      return Aff.ParMap(f, aff);
    };
  };

  exports._parAffApply = function (aff1) {
    return function (aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  };

  exports.makeAff = Aff.Async;

  exports.generalBracket = function (acquire) {
    return function (options) {
      return function (k) {
        return Aff.Bracket(acquire, options, k);
      };
    };
  };

  exports._makeFiber = function (util, aff) {
    return function () {
      return Aff.Fiber(util, null, aff);
    };
  };

  exports._delay = function () {
    function setDelay(n, k) {
      if (n === 0 && typeof setImmediate !== "undefined") {
        return setImmediate(k);
      } else {
        return setTimeout(k, n);
      }
    }

    function clearDelay(n, t) {
      if (n === 0 && typeof clearImmediate !== "undefined") {
        return clearImmediate(t);
      } else {
        return clearTimeout(t);
      }
    }

    return function (right, ms) {
      return Aff.Async(function (cb) {
        return function () {
          var timer = setDelay(ms, cb(right()));
          return function () {
            return Aff.Sync(function () {
              return right(clearDelay(ms, timer));
            });
          };
        };
      });
    };
  }();

  exports._sequential = Aff.Seq;
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Parallel.Class"] = $PS["Control.Parallel.Class"] || {};
  var exports = $PS["Control.Parallel.Class"];
  var Parallel = function (Applicative1, Monad0, parallel, sequential) {
      this.Applicative1 = Applicative1;
      this.Monad0 = Monad0;
      this.parallel = parallel;
      this.sequential = sequential;
  };
  var sequential = function (dict) {
      return dict.sequential;
  };
  var parallel = function (dict) {
      return dict.parallel;
  };
  exports["parallel"] = parallel;
  exports["sequential"] = sequential;
  exports["Parallel"] = Parallel;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Class"] = $PS["Effect.Class"] || {};
  var exports = $PS["Effect.Class"];
  var Control_Category = $PS["Control.Category"];
  var Effect = $PS["Effect"];                
  var MonadEffect = function (Monad0, liftEffect) {
      this.Monad0 = Monad0;
      this.liftEffect = liftEffect;
  };
  var monadEffectEffect = new MonadEffect(function () {
      return Effect.monadEffect;
  }, Control_Category.identity(Control_Category.categoryFn));
  var liftEffect = function (dict) {
      return dict.liftEffect;
  };
  exports["liftEffect"] = liftEffect;
  exports["MonadEffect"] = MonadEffect;
  exports["monadEffectEffect"] = monadEffectEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafePerformEffect = function (f) {
    return f();
  };
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Unsafe"] = $PS["Effect.Unsafe"] || {};
  var exports = $PS["Effect.Unsafe"];
  var $foreign = $PS["Effect.Unsafe"];
  exports["unsafePerformEffect"] = $foreign.unsafePerformEffect;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Aff"] = $PS["Effect.Aff"] || {};
  var exports = $PS["Effect.Aff"];
  var $foreign = $PS["Effect.Aff"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Canceler = function (x) {
      return x;
  };
  var suspendAff = $foreign["_fork"](false);
  var functorParAff = new Data_Functor.Functor($foreign["_parAffMap"]);
  var functorAff = new Data_Functor.Functor($foreign["_map"]);
  var forkAff = $foreign["_fork"](true);
  var ffiUtil = (function () {
      var unsafeFromRight = function (v) {
          if (v instanceof Data_Either.Right) {
              return v.value0;
          };
          if (v instanceof Data_Either.Left) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
          };
          throw new Error("Failed pattern match at Effect.Aff (line 400, column 21 - line 402, column 54): " + [ v.constructor.name ]);
      };
      var unsafeFromLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return v.value0;
          };
          if (v instanceof Data_Either.Right) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
          };
          throw new Error("Failed pattern match at Effect.Aff (line 395, column 20 - line 397, column 54): " + [ v.constructor.name ]);
      };
      var isLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return true;
          };
          if (v instanceof Data_Either.Right) {
              return false;
          };
          throw new Error("Failed pattern match at Effect.Aff (line 390, column 12 - line 392, column 20): " + [ v.constructor.name ]);
      };
      return {
          isLeft: isLeft,
          fromLeft: unsafeFromLeft,
          fromRight: unsafeFromRight,
          left: Data_Either.Left.create,
          right: Data_Either.Right.create
      };
  })();
  var makeFiber = function (aff) {
      return $foreign["_makeFiber"](ffiUtil, aff);
  };
  var launchAff = function (aff) {
      return function __do() {
          var fiber = makeFiber(aff)();
          fiber.run();
          return fiber;
      };
  };
  var launchAff_ = (function () {
      var $43 = Data_Functor["void"](Effect.functorEffect);
      return function ($44) {
          return $43(launchAff($44));
      };
  })();                              
  var delay = function (v) {
      return $foreign["_delay"](Data_Either.Right.create, v);
  };
  var bracket = function (acquire) {
      return function (completed) {
          return $foreign.generalBracket(acquire)({
              killed: Data_Function["const"](completed),
              failed: Data_Function["const"](completed),
              completed: Data_Function["const"](completed)
          });
      };
  };
  var applyParAff = new Control_Apply.Apply(function () {
      return functorParAff;
  }, $foreign["_parAffApply"]);
  var monadAff = new Control_Monad.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var bindAff = new Control_Bind.Bind(function () {
      return applyAff;
  }, $foreign["_bind"]);
  var applyAff = new Control_Apply.Apply(function () {
      return functorAff;
  }, Control_Monad.ap(monadAff));
  var applicativeAff = new Control_Applicative.Applicative(function () {
      return applyAff;
  }, $foreign["_pure"]);
  var $$finally = function (fin) {
      return function (a) {
          return bracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(Data_Function["const"](fin))(Data_Function["const"](a));
      };
  };
  var monadEffectAff = new Effect_Class.MonadEffect(function () {
      return monadAff;
  }, $foreign["_liftEffect"]);
  var effectCanceler = (function () {
      var $45 = Effect_Class.liftEffect(monadEffectAff);
      return function ($46) {
          return Canceler(Data_Function["const"]($45($46)));
      };
  })();
  var joinFiber = function (v) {
      return $foreign.makeAff(function (k) {
          return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.join(k));
      });
  };
  var functorFiber = new Data_Functor.Functor(function (f) {
      return function (t) {
          return Effect_Unsafe.unsafePerformEffect(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))));
      };
  });
  var killFiber = function (e) {
      return function (v) {
          return Control_Bind.bind(bindAff)(Effect_Class.liftEffect(monadEffectAff)(v.isSuspended))(function (v1) {
              if (v1) {
                  return Effect_Class.liftEffect(monadEffectAff)(Data_Functor["void"](Effect.functorEffect)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))));
              };
              return $foreign.makeAff(function (k) {
                  return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.kill(e, k));
              });
          });
      };
  };   
  var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
      return monadAff;
  }, $foreign["_throwError"]);
  var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
      return monadThrowAff;
  }, $foreign["_catchError"]);
  var attempt = Control_Monad_Error_Class["try"](monadErrorAff);
  var runAff = function (k) {
      return function (aff) {
          return launchAff(Control_Bind.bindFlipped(bindAff)((function () {
              var $49 = Effect_Class.liftEffect(monadEffectAff);
              return function ($50) {
                  return $49(k($50));
              };
          })())(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
      };
  };
  var runAff_ = function (k) {
      return function (aff) {
          return Data_Functor["void"](Effect.functorEffect)(runAff(k)(aff));
      };
  };
  var parallelAff = new Control_Parallel_Class.Parallel(function () {
      return applicativeParAff;
  }, function () {
      return monadAff;
  }, Unsafe_Coerce.unsafeCoerce, $foreign["_sequential"]);
  var applicativeParAff = new Control_Applicative.Applicative(function () {
      return applyParAff;
  }, (function () {
      var $53 = Control_Parallel_Class.parallel(parallelAff);
      var $54 = Control_Applicative.pure(applicativeAff);
      return function ($55) {
          return $53($54($55));
      };
  })());
  var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
      return monadAff;
  }, function (k) {
      var go = function (a) {
          return Control_Bind.bind(bindAff)(k(a))(function (res) {
              if (res instanceof Control_Monad_Rec_Class.Done) {
                  return Control_Applicative.pure(applicativeAff)(res.value0);
              };
              if (res instanceof Control_Monad_Rec_Class.Loop) {
                  return go(res.value0);
              };
              throw new Error("Failed pattern match at Effect.Aff (line 100, column 7 - line 102, column 22): " + [ res.constructor.name ]);
          });
      };
      return go;
  });
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
  exports["launchAff_"] = launchAff_;
  exports["runAff_"] = runAff_;
  exports["forkAff"] = forkAff;
  exports["suspendAff"] = suspendAff;
  exports["attempt"] = attempt;
  exports["delay"] = delay;
  exports["finally"] = $$finally;
  exports["killFiber"] = killFiber;
  exports["joinFiber"] = joinFiber;
  exports["nonCanceler"] = nonCanceler;
  exports["effectCanceler"] = effectCanceler;
  exports["functorAff"] = functorAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadRecAff"] = monadRecAff;
  exports["monadThrowAff"] = monadThrowAff;
  exports["monadErrorAff"] = monadErrorAff;
  exports["monadEffectAff"] = monadEffectAff;
  exports["applicativeParAff"] = applicativeParAff;
  exports["parallelAff"] = parallelAff;
  exports["functorFiber"] = functorFiber;
  exports["makeAff"] = $foreign.makeAff;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Aff.Compat"] = $PS["Effect.Aff.Compat"] || {};
  var exports = $PS["Effect.Aff.Compat"];
  var Data_Either = $PS["Data.Either"];
  var Effect_Aff = $PS["Effect.Aff"];
  var fromEffectFnAff = function (v) {
      return Effect_Aff.makeAff(function (k) {
          return function __do() {
              var v1 = v(function ($4) {
                  return k(Data_Either.Left.create($4))();
              }, function ($5) {
                  return k(Data_Either.Right.create($5))();
              });
              return function (e) {
                  return Effect_Aff.makeAff(function (k2) {
                      return function __do() {
                          v1(e, function ($6) {
                              return k2(Data_Either.Left.create($6))();
                          }, function ($7) {
                              return k2(Data_Either.Right.create($7))();
                          });
                          return Effect_Aff.nonCanceler;
                      };
                  });
              };
          };
      });
  };
  exports["fromEffectFnAff"] = fromEffectFnAff;
})(PS);
(function(exports) {
  "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.message = function (e) {
    return e.message;
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Exception"] = $PS["Effect.Exception"] || {};
  var exports = $PS["Effect.Exception"];
  var $foreign = $PS["Effect.Exception"];
  var $$throw = function ($2) {
      return $foreign.throwException($foreign.error($2));
  };
  exports["throw"] = $$throw;
  exports["error"] = $foreign.error;
  exports["message"] = $foreign.message;
  exports["throwException"] = $foreign.throwException;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeToForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
})(PS["Foreign"] = PS["Foreign"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Foreign"] = $PS["Foreign"] || {};
  var exports = $PS["Foreign"];
  var $foreign = $PS["Foreign"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_Show = $PS["Data.Show"];                                        
  var ForeignError = (function () {
      function ForeignError(value0) {
          this.value0 = value0;
      };
      ForeignError.create = function (value0) {
          return new ForeignError(value0);
      };
      return ForeignError;
  })();
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtIndex = (function () {
      function ErrorAtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtIndex.create = function (value0) {
          return function (value1) {
              return new ErrorAtIndex(value0, value1);
          };
      };
      return ErrorAtIndex;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var renderForeignError = function (v) {
      if (v instanceof ForeignError) {
          return v.value0;
      };
      if (v instanceof ErrorAtIndex) {
          return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + renderForeignError(v.value1)));
      };
      if (v instanceof ErrorAtProperty) {
          return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + renderForeignError(v.value1)));
      };
      if (v instanceof TypeMismatch) {
          return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
      };
      throw new Error("Failed pattern match at Foreign (line 72, column 1 - line 72, column 45): " + [ v.constructor.name ]);
  };
  var fail = (function () {
      var $107 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity));
      return function ($108) {
          return $107(Data_List_NonEmpty.singleton($108));
      };
  })();
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
          };
          if (Data_Boolean.otherwise) {
              return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
          };
          throw new Error("Failed pattern match at Foreign (line 106, column 1 - line 106, column 55): " + [ tag.constructor.name, value.constructor.name ]);
      };
  };
  var readString = unsafeReadTagged("String");
  exports["ForeignError"] = ForeignError;
  exports["TypeMismatch"] = TypeMismatch;
  exports["renderForeignError"] = renderForeignError;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["readString"] = readString;
  exports["fail"] = fail;
  exports["unsafeToForeign"] = $foreign.unsafeToForeign;
  exports["typeOf"] = $foreign.typeOf;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Affjax"] = $PS["Affjax"] || {};
  var exports = $PS["Affjax"];
  var $foreign = $PS["Affjax"];
  var Affjax_RequestBody = $PS["Affjax.RequestBody"];
  var Affjax_RequestHeader = $PS["Affjax.RequestHeader"];
  var Affjax_ResponseFormat = $PS["Affjax.ResponseFormat"];
  var Affjax_ResponseHeader = $PS["Affjax.ResponseHeader"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Argonaut_Parser = $PS["Data.Argonaut.Parser"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FormURLEncoded = $PS["Data.FormURLEncoded"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HTTP_Method = $PS["Data.HTTP.Method"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Compat = $PS["Effect.Aff.Compat"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Foreign = $PS["Foreign"];                
  var RequestContentError = (function () {
      function RequestContentError(value0) {
          this.value0 = value0;
      };
      RequestContentError.create = function (value0) {
          return new RequestContentError(value0);
      };
      return RequestContentError;
  })();
  var ResponseBodyError = (function () {
      function ResponseBodyError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ResponseBodyError.create = function (value0) {
          return function (value1) {
              return new ResponseBodyError(value0, value1);
          };
      };
      return ResponseBodyError;
  })();
  var XHRError = (function () {
      function XHRError(value0) {
          this.value0 = value0;
      };
      XHRError.create = function (value0) {
          return new XHRError(value0);
      };
      return XHRError;
  })();
  var request = function (req) {
      var parseJSON = function (v) {
          if (v === "") {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Argonaut_Core.jsonEmptyObject);
          };
          return Data_Either.either(function ($47) {
              return Foreign.fail(Foreign.ForeignError.create($47));
          })(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)))(Data_Argonaut_Parser.jsonParser(v));
      };
      var fromResponse = (function () {
          if (req.responseFormat instanceof Affjax_ResponseFormat["ArrayBuffer"]) {
              return Foreign.unsafeReadTagged("ArrayBuffer");
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat.Blob) {
              return Foreign.unsafeReadTagged("Blob");
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat.Document) {
              return Foreign.unsafeReadTagged("Document");
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat.Json) {
              return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(function ($48) {
                  return req.responseFormat.value0(parseJSON($48));
              })(Foreign.unsafeReadTagged("String"));
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat["String"]) {
              return Foreign.unsafeReadTagged("String");
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat.Ignore) {
              return Data_Function["const"](req.responseFormat.value0(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Unit.unit)));
          };
          throw new Error("Failed pattern match at Affjax (line 237, column 18 - line 243, column 57): " + [ req.responseFormat.constructor.name ]);
      })();
      var extractContent = function (v) {
          if (v instanceof Affjax_RequestBody.ArrayView) {
              return Data_Either.Right.create(v.value0(Foreign.unsafeToForeign));
          };
          if (v instanceof Affjax_RequestBody.Blob) {
              return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
          };
          if (v instanceof Affjax_RequestBody.Document) {
              return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
          };
          if (v instanceof Affjax_RequestBody["String"]) {
              return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
          };
          if (v instanceof Affjax_RequestBody.FormData) {
              return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
          };
          if (v instanceof Affjax_RequestBody.FormURLEncoded) {
              return Data_Either.note("Body contains values that cannot be encoded as application/x-www-form-urlencoded")(Data_Functor.map(Data_Maybe.functorMaybe)(Foreign.unsafeToForeign)(Data_FormURLEncoded.encode(v.value0)));
          };
          if (v instanceof Affjax_RequestBody.Json) {
              return Data_Either.Right.create(Foreign.unsafeToForeign(Data_Argonaut_Core.stringify(v.value0)));
          };
          throw new Error("Failed pattern match at Affjax (line 203, column 20 - line 218, column 69): " + [ v.constructor.name ]);
      };
      var addHeader = function (mh) {
          return function (hs) {
              if (mh instanceof Data_Maybe.Just && !Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(Affjax_RequestHeader.name)(mh.value0))(hs)) {
                  return Data_Array.snoc(hs)(mh.value0);
              };
              return hs;
          };
      };
      var headers = function (reqContent) {
          return addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestHeader.ContentType.create)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Affjax_RequestBody.toMediaType)(reqContent)))(addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestHeader.Accept.create)(Affjax_ResponseFormat.toMediaType(req.responseFormat)))(req.headers));
      };
      var ajaxRequest = function (v) {
          return {
              method: Data_HTTP_Method.print(req.method),
              url: req.url,
              headers: Data_Functor.map(Data_Functor.functorArray)(function (h) {
                  return {
                      field: Affjax_RequestHeader.name(h),
                      value: Affjax_RequestHeader.value(h)
                  };
              })(headers(req.content)),
              content: v,
              responseType: Affjax_ResponseFormat.toResponseType(req.responseFormat),
              username: Data_Nullable.toNullable(req.username),
              password: Data_Nullable.toNullable(req.password),
              withCredentials: req.withCredentials
          };
      };
      var send = function (content) {
          return Data_Functor.mapFlipped(Effect_Aff.functorAff)(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(Effect_Aff_Compat.fromEffectFnAff($foreign["_ajax"](Affjax_ResponseHeader.ResponseHeader.create, ajaxRequest(content)))))(function (v) {
              if (v instanceof Data_Either.Right) {
                  var v1 = Control_Monad_Except.runExcept(fromResponse(v.value0.body));
                  if (v1 instanceof Data_Either.Left) {
                      return new Data_Either.Left(new ResponseBodyError(Data_List_NonEmpty.head(v1.value0), v.value0));
                  };
                  if (v1 instanceof Data_Either.Right) {
                      return new Data_Either.Right({
                          body: v1.value0,
                          headers: v.value0.headers,
                          status: v.value0.status,
                          statusText: v.value0.statusText
                      });
                  };
                  throw new Error("Failed pattern match at Affjax (line 184, column 9 - line 186, column 52): " + [ v1.constructor.name ]);
              };
              if (v instanceof Data_Either.Left) {
                  return new Data_Either.Left(new XHRError(v.value0));
              };
              throw new Error("Failed pattern match at Affjax (line 182, column 86 - line 188, column 28): " + [ v.constructor.name ]);
          });
      };
      if (req.content instanceof Data_Maybe.Nothing) {
          return send(Data_Nullable.toNullable(Data_Maybe.Nothing.value));
      };
      if (req.content instanceof Data_Maybe.Just) {
          var v = extractContent(req.content.value0);
          if (v instanceof Data_Either.Right) {
              return send(Data_Nullable.toNullable(new Data_Maybe.Just(v.value0)));
          };
          if (v instanceof Data_Either.Left) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Data_Either.Left(new RequestContentError(v.value0)));
          };
          throw new Error("Failed pattern match at Affjax (line 173, column 7 - line 177, column 48): " + [ v.constructor.name ]);
      };
      throw new Error("Failed pattern match at Affjax (line 169, column 3 - line 177, column 48): " + [ req.content.constructor.name ]);
  };
  var printError = function (v) {
      if (v instanceof RequestContentError) {
          return "There was a problem with the request content: " + v.value0;
      };
      if (v instanceof ResponseBodyError) {
          return "There was a problem with the response body: " + Foreign.renderForeignError(v.value0);
      };
      if (v instanceof XHRError) {
          return "There was a problem making the request: " + Effect_Exception.message(v.value0);
      };
      throw new Error("Failed pattern match at Affjax (line 91, column 14 - line 97, column 66): " + [ v.constructor.name ]);
  };
  var defaultRequest = {
      method: new Data_Either.Left(Data_HTTP_Method.GET.value),
      url: "/",
      headers: [  ],
      content: Data_Maybe.Nothing.value,
      username: Data_Maybe.Nothing.value,
      password: Data_Maybe.Nothing.value,
      withCredentials: false,
      responseFormat: Affjax_ResponseFormat.ignore
  };   
  var get = function (rf) {
      return function (u) {
          return request({
              method: defaultRequest.method,
              url: u,
              headers: defaultRequest.headers,
              content: defaultRequest.content,
              username: defaultRequest.username,
              password: defaultRequest.password,
              withCredentials: defaultRequest.withCredentials,
              responseFormat: rf
          });
      };
  };
  exports["printError"] = printError;
  exports["get"] = get;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Alternative"] = $PS["Control.Alternative"] || {};
  var exports = $PS["Control.Alternative"];              
  var Alternative = function (Applicative0, Plus1) {
      this.Applicative0 = Applicative0;
      this.Plus1 = Plus1;
  };
  exports["Alternative"] = Alternative;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Applicative.Free"] = $PS["Control.Applicative.Free"] || {};
  var exports = $PS["Control.Applicative.Free"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Pure = (function () {
      function Pure(value0) {
          this.value0 = value0;
      };
      Pure.create = function (value0) {
          return new Pure(value0);
      };
      return Pure;
  })();
  var Lift = (function () {
      function Lift(value0) {
          this.value0 = value0;
      };
      Lift.create = function (value0) {
          return new Lift(value0);
      };
      return Lift;
  })();
  var Ap = (function () {
      function Ap(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Ap.create = function (value0) {
          return function (value1) {
              return new Ap(value0, value1);
          };
      };
      return Ap;
  })();
  var mkAp = function (fba) {
      return function (fb) {
          return new Ap(fba, fb);
      };
  };
  var liftFreeAp = Lift.create;
  var goLeft = function ($copy_dictApplicative) {
      return function ($copy_fStack) {
          return function ($copy_valStack) {
              return function ($copy_nat) {
                  return function ($copy_func) {
                      return function ($copy_count) {
                          var $tco_var_dictApplicative = $copy_dictApplicative;
                          var $tco_var_fStack = $copy_fStack;
                          var $tco_var_valStack = $copy_valStack;
                          var $tco_var_nat = $copy_nat;
                          var $tco_var_func = $copy_func;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(dictApplicative, fStack, valStack, nat, func, count) {
                              if (func instanceof Pure) {
                                  $tco_done = true;
                                  return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                      func: Control_Applicative.pure(dictApplicative)(func.value0),
                                      count: count
                                  }, fStack), valStack);
                              };
                              if (func instanceof Lift) {
                                  $tco_done = true;
                                  return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                      func: nat(func.value0),
                                      count: count
                                  }, fStack), valStack);
                              };
                              if (func instanceof Ap) {
                                  $tco_var_dictApplicative = dictApplicative;
                                  $tco_var_fStack = fStack;
                                  $tco_var_valStack = Data_List_NonEmpty.cons(func.value1)(valStack);
                                  $tco_var_nat = nat;
                                  $tco_var_func = func.value0;
                                  $copy_count = count + 1 | 0;
                                  return;
                              };
                              throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [ func.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_valStack, $tco_var_nat, $tco_var_func, $copy_count);
                          };
                          return $tco_result;
                      };
                  };
              };
          };
      };
  };
  var goApply = function ($copy_dictApplicative) {
      return function ($copy_fStack) {
          return function ($copy_vals) {
              return function ($copy_gVal) {
                  var $tco_var_dictApplicative = $copy_dictApplicative;
                  var $tco_var_fStack = $copy_fStack;
                  var $tco_var_vals = $copy_vals;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(dictApplicative, fStack, vals, gVal) {
                      if (fStack instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return new Data_Either.Left(gVal);
                      };
                      if (fStack instanceof Data_List_Types.Cons) {
                          var gRes = Control_Apply.apply(dictApplicative.Apply0())(fStack.value0.func)(gVal);
                          var $14 = fStack.value0.count === 1;
                          if ($14) {
                              if (fStack.value1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return new Data_Either.Left(gRes);
                              };
                              $tco_var_dictApplicative = dictApplicative;
                              $tco_var_fStack = fStack.value1;
                              $tco_var_vals = vals;
                              $copy_gVal = gRes;
                              return;
                          };
                          if (vals instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Data_Either.Left(gRes);
                          };
                          if (vals instanceof Data_List_Types.Cons) {
                              $tco_done = true;
                              return Data_Either.Right.create(new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                  func: gRes,
                                  count: fStack.value0.count - 1 | 0
                              }, fStack.value1), new Data_NonEmpty.NonEmpty(vals.value0, vals.value1)));
                          };
                          throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [ vals.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [ fStack.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_vals, $copy_gVal);
                  };
                  return $tco_result;
              };
          };
      };
  };
  var functorFreeAp = new Data_Functor.Functor(function (f) {
      return function (x) {
          return mkAp(new Pure(f))(x);
      };
  });
  var foldFreeAp = function (dictApplicative) {
      return function (nat) {
          return function (z) {
              var go = function ($copy_v) {
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(v) {
                      if (v.value1.value0 instanceof Pure) {
                          var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(Control_Applicative.pure(dictApplicative)(v.value1.value0.value0));
                          if (v1 instanceof Data_Either.Left) {
                              $tco_done = true;
                              return v1.value0;
                          };
                          if (v1 instanceof Data_Either.Right) {
                              $copy_v = v1.value0;
                              return;
                          };
                          throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [ v1.constructor.name ]);
                      };
                      if (v.value1.value0 instanceof Lift) {
                          var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));
                          if (v1 instanceof Data_Either.Left) {
                              $tco_done = true;
                              return v1.value0;
                          };
                          if (v1 instanceof Data_Either.Right) {
                              $copy_v = v1.value0;
                              return;
                          };
                          throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [ v1.constructor.name ]);
                      };
                      if (v.value1.value0 instanceof Ap) {
                          var nextVals = new Data_NonEmpty.NonEmpty(v.value1.value0.value1, v.value1.value1);
                          $copy_v = goLeft(dictApplicative)(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);
                          return;
                      };
                      throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 62, column 47): " + [ v.value1.value0.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($copy_v);
                  };
                  return $tco_result;
              };
              return go(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_NonEmpty.singleton(z)));
          };
      };
  };
  var retractFreeAp = function (dictApplicative) {
      return foldFreeAp(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  };
  var applyFreeAp = new Control_Apply.Apply(function () {
      return functorFreeAp;
  }, function (fba) {
      return function (fb) {
          return mkAp(fba)(fb);
      };
  });
  var applicativeFreeAp = new Control_Applicative.Applicative(function () {
      return applyFreeAp;
  }, Pure.create);
  var hoistFreeAp = function (f) {
      return foldFreeAp(applicativeFreeAp)(function ($37) {
          return liftFreeAp(f($37));
      });
  };
  exports["liftFreeAp"] = liftFreeAp;
  exports["retractFreeAp"] = retractFreeAp;
  exports["hoistFreeAp"] = hoistFreeAp;
  exports["applicativeFreeAp"] = applicativeFreeAp;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Comonad.Store.Trans"] = $PS["Control.Comonad.Store.Trans"] || {};
  var exports = $PS["Control.Comonad.Store.Trans"];
  var Control_Comonad = $PS["Control.Comonad"];
  var Control_Extend = $PS["Control.Extend"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var StoreT = function (x) {
      return x;
  };         
  var functorStoreT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return StoreT(new Data_Tuple.Tuple(Data_Functor.map(dictFunctor)(function (h) {
                  return function ($28) {
                      return f(h($28));
                  };
              })(v.value0), v.value1));
          };
      });
  };
  var extendStoreT = function (dictExtend) {
      return new Control_Extend.Extend(function () {
          return functorStoreT(dictExtend.Functor0());
      }, function (f) {
          return function (v) {
              return StoreT(new Data_Tuple.Tuple(Control_Extend.extend(dictExtend)(function (w$prime) {
                  return function (s$prime) {
                      return f(StoreT(new Data_Tuple.Tuple(w$prime, s$prime)));
                  };
              })(v.value0), v.value1));
          };
      });
  }; 
  var comonadStoreT = function (dictComonad) {
      return new Control_Comonad.Comonad(function () {
          return extendStoreT(dictComonad.Extend0());
      }, function (v) {
          return Control_Comonad.extract(dictComonad)(v.value0)(v.value1);
      });
  };
  exports["StoreT"] = StoreT;
  exports["comonadStoreT"] = comonadStoreT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Comonad.Store"] = $PS["Control.Comonad.Store"] || {};
  var exports = $PS["Control.Comonad.Store"];
  var Control_Comonad_Store_Trans = $PS["Control.Comonad.Store.Trans"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var store = function (f) {
      return function (x) {
          return Control_Comonad_Store_Trans.StoreT(new Data_Tuple.Tuple(f, x));
      };
  };
  var runStore = function (v) {
      return Data_Tuple.swap(Data_Functor.map(Data_Tuple.functorTuple)(Data_Newtype.unwrap(Data_Identity.newtypeIdentity))(Data_Tuple.swap(v)));
  };
  exports["runStore"] = runStore;
  exports["store"] = store;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Comonad.Store.Class"] = $PS["Control.Comonad.Store.Class"] || {};
  var exports = $PS["Control.Comonad.Store.Class"];
  var Control_Comonad = $PS["Control.Comonad"];
  var Control_Comonad_Store_Trans = $PS["Control.Comonad.Store.Trans"];
  var Control_Extend = $PS["Control.Extend"];            
  var ComonadStore = function (Comonad0, peek, pos) {
      this.Comonad0 = Comonad0;
      this.peek = peek;
      this.pos = pos;
  };
  var pos = function (dict) {
      return dict.pos;
  };
  var peek = function (dict) {
      return dict.peek;
  };
  var peeks = function (dictComonadStore) {
      return function (f) {
          return function (x) {
              return peek(dictComonadStore)(f(pos(dictComonadStore)(x)))(x);
          };
      };
  };
  var seeks = function (dictComonadStore) {
      return function (f) {
          var $18 = peeks(dictComonadStore)(f);
          var $19 = Control_Extend.duplicate((dictComonadStore.Comonad0()).Extend0());
          return function ($20) {
              return $18($19($20));
          };
      };
  };
  var comonadStoreStoreT = function (dictComonad) {
      return new ComonadStore(function () {
          return Control_Comonad_Store_Trans.comonadStoreT(dictComonad);
      }, function (s) {
          return function (v) {
              return Control_Comonad.extract(dictComonad)(v.value0)(s);
          };
      }, function (v) {
          return v.value1;
      });
  };
  exports["seeks"] = seeks;
  exports["comonadStoreStoreT"] = comonadStoreStoreT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Exists"] = $PS["Data.Exists"] || {};
  var exports = $PS["Data.Exists"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var runExists = Unsafe_Coerce.unsafeCoerce;
  var mkExists = Unsafe_Coerce.unsafeCoerce;
  exports["mkExists"] = mkExists;
  exports["runExists"] = runExists;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Free.Trans"] = $PS["Control.Monad.Free.Trans"] || {};
  var exports = $PS["Control.Monad.Free.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Exists = $PS["Data.Exists"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];                      
  var Bound = (function () {
      function Bound(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bound.create = function (value0) {
          return function (value1) {
              return new Bound(value0, value1);
          };
      };
      return Bound;
  })();
  var FreeT = (function () {
      function FreeT(value0) {
          this.value0 = value0;
      };
      FreeT.create = function (value0) {
          return new FreeT(value0);
      };
      return FreeT;
  })();
  var Bind = (function () {
      function Bind(value0) {
          this.value0 = value0;
      };
      Bind.create = function (value0) {
          return new Bind(value0);
      };
      return Bind;
  })();
  var monadTransFreeT = function (dictFunctor) {
      return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
          return function (ma) {
              return new FreeT(function (v) {
                  return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Either.Left.create)(ma);
              });
          };
      });
  };
  var freeT = FreeT.create;
  var bound = function (m) {
      return function (f) {
          return new Bind(Data_Exists.mkExists(new Bound(m, f)));
      };
  };
  var functorFreeT = function (dictFunctor) {
      return function (dictFunctor1) {
          return new Data_Functor.Functor(function (f) {
              return function (v) {
                  if (v instanceof FreeT) {
                      return new FreeT(function (v1) {
                          return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
                      });
                  };
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)((function () {
                              var $123 = Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f);
                              return function ($124) {
                                  return $123(v1.value1($124));
                              };
                          })());
                      })(v.value0);
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 59, column 1 - line 61, column 71): " + [ f.constructor.name, v.constructor.name ]);
              };
          });
      };
  };
  var monadFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad.Monad(function () {
              return applicativeFreeT(dictFunctor)(dictMonad);
          }, function () {
              return bindFreeT(dictFunctor)(dictMonad);
          });
      };
  };
  var bindFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Bind.Bind(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (v) {
              return function (f) {
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)(function (x) {
                              return bound(function (v2) {
                                  return v1.value1(x);
                              })(f);
                          });
                      })(v.value0);
                  };
                  return bound(function (v1) {
                      return v;
                  })(f);
              };
          });
      };
  };
  var applyFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Apply.Apply(function () {
              return functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0());
          }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
      };
  };
  var applicativeFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Applicative.Applicative(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (a) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(a));
              });
          });
      };
  };
  var liftFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return function (fa) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));
              });
          };
      };
  };
  var resume = function (dictFunctor) {
      return function (dictMonadRec) {
          var go = function (v) {
              if (v instanceof FreeT) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(v.value0(Data_Unit.unit));
              };
              if (v instanceof Bind) {
                  return Data_Exists.runExists(function (v1) {
                      var v2 = v1.value0(Data_Unit.unit);
                      if (v2 instanceof FreeT) {
                          return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(v2.value0(Data_Unit.unit))(function (v3) {
                              if (v3 instanceof Data_Either.Left) {
                                  return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(v1.value1(v3.value0)));
                              };
                              if (v3 instanceof Data_Either.Right) {
                                  return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
                                      return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(h)(v1.value1);
                                  })(v3.value0))));
                              };
                              throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 54, column 20 - line 56, column 67): " + [ v3.constructor.name ]);
                          });
                      };
                      if (v2 instanceof Bind) {
                          return Data_Exists.runExists(function (v3) {
                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value0(Data_Unit.unit))(function (z) {
                                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value1(z))(v1.value1);
                              })));
                          })(v2.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 52, column 5 - line 57, column 98): " + [ v2.constructor.name ]);
                  })(v.value0);
              };
              throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 49, column 3 - line 49, column 75): " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  var runFreeT = function (dictFunctor) {
      return function (dictMonadRec) {
          return function (interp) {
              var go = function (v) {
                  if (v instanceof Data_Either.Left) {
                      return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(v.value0));
                  };
                  if (v instanceof Data_Either.Right) {
                      return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(interp(v.value0));
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 141, column 3 - line 141, column 63): " + [ v.constructor.name ]);
              };
              return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped((dictMonadRec.Monad0()).Bind1())(go)(resume(dictFunctor)(dictMonadRec)));
          };
      };
  };
  var monadRecFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad_Rec_Class.MonadRec(function () {
              return monadFreeT(dictFunctor)(dictMonad);
          }, function (f) {
              var go = function (s) {
                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {
                      if (v instanceof Control_Monad_Rec_Class.Loop) {
                          return go(v.value0);
                      };
                      if (v instanceof Control_Monad_Rec_Class.Done) {
                          return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 82, column 15 - line 84, column 25): " + [ v.constructor.name ]);
                  });
              };
              return go;
          });
      };
  };
  exports["freeT"] = freeT;
  exports["liftFreeT"] = liftFreeT;
  exports["resume"] = resume;
  exports["runFreeT"] = runFreeT;
  exports["functorFreeT"] = functorFreeT;
  exports["applicativeFreeT"] = applicativeFreeT;
  exports["bindFreeT"] = bindFreeT;
  exports["monadTransFreeT"] = monadTransFreeT;
  exports["monadRecFreeT"] = monadRecFreeT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Profunctor"] = $PS["Data.Profunctor"] || {};
  var exports = $PS["Data.Profunctor"];
  var Control_Category = $PS["Control.Category"];        
  var Profunctor = function (dimap) {
      this.dimap = dimap;
  };
  var profunctorFn = new Profunctor(function (a2b) {
      return function (c2d) {
          return function (b2c) {
              return function ($9) {
                  return c2d(b2c(a2b($9)));
              };
          };
      };
  });
  var dimap = function (dict) {
      return dict.dimap;
  };
  var rmap = function (dictProfunctor) {
      return function (b2c) {
          return dimap(dictProfunctor)(Control_Category.identity(Control_Category.categoryFn))(b2c);
      };
  };
  exports["dimap"] = dimap;
  exports["Profunctor"] = Profunctor;
  exports["rmap"] = rmap;
  exports["profunctorFn"] = profunctorFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Coroutine"] = $PS["Control.Coroutine"] || {};
  var exports = $PS["Control.Coroutine"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_Free_Trans = $PS["Control.Monad.Free.Trans"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Emit = (function () {
      function Emit(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Emit.create = function (value0) {
          return function (value1) {
              return new Emit(value0, value1);
          };
      };
      return Emit;
  })();
  var runProcess = function (dictMonadRec) {
      return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec)((function () {
          var $176 = Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0());
          var $177 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
          return function ($178) {
              return $176($177($178));
          };
      })());
  };
  var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
      return function (g) {
          return function (v) {
              return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(v);
          };
      };
  });
  var loop = function (dictFunctor) {
      return function (dictMonad) {
          return function (me) {
              return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(dictFunctor)(dictMonad))(function (v) {
                  return Data_Functor.map(Control_Monad_Free_Trans.functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0()))(Data_Maybe.maybe(new Control_Monad_Rec_Class.Loop(Data_Unit.unit))(Control_Monad_Rec_Class.Done.create))(me);
              })(Data_Unit.unit);
          };
      };
  };
  var fuseWithL = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictFunctor2) {
              return function (dictMonadRec) {
                  return function (zap) {
                      return function (fs) {
                          return function (gs) {
                              var go = function (v) {
                                  return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0)))(function (l) {
                                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))(function (r) {
                                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonadRec.Monad0()))(Data_Functor.map(dictFunctor2)(function (t) {
                                              return Control_Monad_Free_Trans.freeT(function (v1) {
                                                  return go(t);
                                              });
                                          })(zap(Data_Tuple.Tuple.create)(l)(r)));
                                      });
                                  }));
                              };
                              return Control_Monad_Free_Trans.freeT(function (v) {
                                  return go(new Data_Tuple.Tuple(fs, gs));
                              });
                          };
                      };
                  };
              };
          };
      };
  };
  var fuseWith = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictFunctor2) {
              return function (dictMonadRec) {
                  return function (dictParallel) {
                      return function (zap) {
                          return function (fs) {
                              return function (gs) {
                                  var go = function (v) {
                                      return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictParallel.Applicative1()).Apply0())(Data_Functor.map(((dictParallel.Applicative1()).Apply0()).Functor0())(Control_Apply.lift2(Data_Either.applyEither)(zap(Data_Tuple.Tuple.create)))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))))(function (next) {
                                          if (next instanceof Data_Either.Left) {
                                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Left(next.value0));
                                          };
                                          if (next instanceof Data_Either.Right) {
                                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function (t) {
                                                  return Control_Monad_Free_Trans.freeT(function (v1) {
                                                      return go(t);
                                                  });
                                              })(next.value0)));
                                          };
                                          throw new Error("Failed pattern match at Control.Coroutine (line 79, column 5 - line 81, column 63): " + [ next.constructor.name ]);
                                      });
                                  };
                                  return Control_Monad_Free_Trans.freeT(function (v) {
                                      return go(new Data_Tuple.Tuple(fs, gs));
                                  });
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var functorAwait = new Data_Functor.Functor(Data_Profunctor.rmap(profunctorAwait));
  var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return new Emit(f(v.value0), g(v.value1));
          };
      };
  });
  var functorEmit = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorEmit));
  var connect = function (dictMonadRec) {
      return function (dictParallel) {
          return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
              return function (v) {
                  return function (v1) {
                      return f(v.value1)(v1(v.value0));
                  };
              };
          });
      };
  };
  var emit = function (dictMonad) {
      return function (o) {
          return Control_Monad_Free_Trans.liftFreeT(functorEmit)(dictMonad)(new Emit(o, Data_Unit.unit));
      };
  };
  var producer = function (dictMonad) {
      return function (recv) {
          return loop(functorEmit)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonad)(recv))(function (e) {
              if (e instanceof Data_Either.Left) {
                  return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorEmit)(((dictMonad.Bind1()).Apply0()).Functor0()))(emit(dictMonad)(e.value0))(Data_Maybe.Nothing.value);
              };
              if (e instanceof Data_Either.Right) {
                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonad))(new Data_Maybe.Just(e.value0));
              };
              throw new Error("Failed pattern match at Control.Coroutine (line 125, column 3 - line 127, column 29): " + [ e.constructor.name ]);
          }));
      };
  };
  var pullFrom = function (dictMonadRec) {
      return fuseWithL(functorAwait)(functorEmit)(Data_Identity.functorIdentity)(dictMonadRec)(function (f) {
          return function (v) {
              return function (v1) {
                  return Control_Applicative.pure(Data_Identity.applicativeIdentity)(f(v(v1.value0))(v1.value1));
              };
          };
      });
  };
  var $$await = function (dictMonad) {
      return Control_Monad_Free_Trans.liftFreeT(functorAwait)(dictMonad)(Control_Category.identity(Control_Category.categoryFn));
  };
  exports["runProcess"] = runProcess;
  exports["producer"] = producer;
  exports["await"] = $$await;
  exports["connect"] = connect;
  exports["pullFrom"] = pullFrom;
  exports["functorEmit"] = functorEmit;
  exports["functorAwait"] = functorAwait;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Fork.Class"] = $PS["Control.Monad.Fork.Class"] || {};
  var exports = $PS["Control.Monad.Fork.Class"];
  var Effect_Aff = $PS["Effect.Aff"];
  var MonadFork = function (Functor1, Monad0, fork, join, suspend) {
      this.Functor1 = Functor1;
      this.Monad0 = Monad0;
      this.fork = fork;
      this.join = join;
      this.suspend = suspend;
  };
  var monadForkAff = new MonadFork(function () {
      return Effect_Aff.functorFiber;
  }, function () {
      return Effect_Aff.monadAff;
  }, Effect_Aff.forkAff, Effect_Aff.joinFiber, Effect_Aff.suspendAff);
  var fork = function (dict) {
      return dict.fork;
  };
  exports["fork"] = fork;
  exports["monadForkAff"] = monadForkAff;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.CatQueue"] = $PS["Data.CatQueue"] || {};
  var exports = $PS["Data.CatQueue"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                            
  var CatQueue = (function () {
      function CatQueue(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatQueue.create = function (value0) {
          return function (value1) {
              return new CatQueue(value0, value1);
          };
      };
      return CatQueue;
  })();
  var uncons = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
          };
          if (v.value0 instanceof Data_List_Types.Nil) {
              $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
              return;
          };
          if (v.value0 instanceof Data_List_Types.Cons) {
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
          };
          throw new Error("Failed pattern match at Data.CatQueue (line 83, column 1 - line 83, column 63): " + [ v.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var snoc = function (v) {
      return function (a) {
          return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
      };
  };
  var $$null = function (v) {
      if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };                                                                                                
  var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
  exports["empty"] = empty;
  exports["null"] = $$null;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.CatList"] = $PS["Data.CatList"] || {};
  var exports = $PS["Data.CatList"];
  var Data_CatQueue = $PS["Data.CatQueue"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];                            
  var CatNil = (function () {
      function CatNil() {

      };
      CatNil.value = new CatNil();
      return CatNil;
  })();
  var CatCons = (function () {
      function CatCons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatCons.create = function (value0) {
          return function (value1) {
              return new CatCons(value0, value1);
          };
      };
      return CatCons;
  })();
  var link = function (v) {
      return function (v1) {
          if (v instanceof CatNil) {
              return v1;
          };
          if (v1 instanceof CatNil) {
              return v;
          };
          if (v instanceof CatCons) {
              return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.CatList (line 109, column 1 - line 109, column 54): " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var foldr = function (k) {
      return function (b) {
          return function (q) {
              var foldl = function ($copy_v) {
                  return function ($copy_c) {
                      return function ($copy_v1) {
                          var $tco_var_v = $copy_v;
                          var $tco_var_c = $copy_c;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v, c, v1) {
                              if (v1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return c;
                              };
                              if (v1 instanceof Data_List_Types.Cons) {
                                  $tco_var_v = v;
                                  $tco_var_c = v(c)(v1.value0);
                                  $copy_v1 = v1.value1;
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.CatList (line 125, column 3 - line 125, column 59): " + [ v.constructor.name, c.constructor.name, v1.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
                          };
                          return $tco_result;
                      };
                  };
              };
              var go = function ($copy_xs) {
                  return function ($copy_ys) {
                      var $tco_var_xs = $copy_xs;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(xs, ys) {
                          var v = Data_CatQueue.uncons(xs);
                          if (v instanceof Data_Maybe.Nothing) {
                              $tco_done = true;
                              return foldl(function (x) {
                                  return function (i) {
                                      return i(x);
                                  };
                              })(b)(ys);
                          };
                          if (v instanceof Data_Maybe.Just) {
                              $tco_var_xs = v.value0.value1;
                              $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
                              return;
                          };
                          throw new Error("Failed pattern match at Data.CatList (line 121, column 14 - line 123, column 67): " + [ v.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_xs, $copy_ys);
                      };
                      return $tco_result;
                  };
              };
              return go(q)(Data_List_Types.Nil.value);
          };
      };
  };
  var uncons = function (v) {
      if (v instanceof CatNil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof CatCons) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {
              var $44 = Data_CatQueue["null"](v.value1);
              if ($44) {
                  return CatNil.value;
              };
              return foldr(link)(CatNil.value)(v.value1);
          })()));
      };
      throw new Error("Failed pattern match at Data.CatList (line 100, column 1 - line 100, column 61): " + [ v.constructor.name ]);
  };
  var empty = CatNil.value;
  var append = link;
  var semigroupCatList = new Data_Semigroup.Semigroup(append);
  var snoc = function (cat) {
      return function (a) {
          return append(cat)(new CatCons(a, Data_CatQueue.empty));
      };
  };
  exports["empty"] = empty;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
  exports["semigroupCatList"] = semigroupCatList;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Free"] = $PS["Control.Monad.Free"] || {};
  var exports = $PS["Control.Monad.Free"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_CatList = $PS["Data.CatList"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Free = (function () {
      function Free(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Free.create = function (value0) {
          return function (value1) {
              return new Free(value0, value1);
          };
      };
      return Free;
  })();
  var Return = (function () {
      function Return(value0) {
          this.value0 = value0;
      };
      Return.create = function (value0) {
          return new Return(value0);
      };
      return Return;
  })();
  var Bind = (function () {
      function Bind(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bind.create = function (value0) {
          return function (value1) {
              return new Bind(value0, value1);
          };
      };
      return Bind;
  })();
  var toView = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          var runExpF = function (v2) {
              return v2;
          };
          var concatF = function (v2) {
              return function (r) {
                  return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
              };
          };
          if (v.value0 instanceof Return) {
              var v2 = Data_CatList.uncons(v.value1);
              if (v2 instanceof Data_Maybe.Nothing) {
                  $tco_done = true;
                  return new Return(v.value0.value0);
              };
              if (v2 instanceof Data_Maybe.Just) {
                  $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
                  return;
              };
              throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [ v2.constructor.name ]);
          };
          if (v.value0 instanceof Bind) {
              $tco_done = true;
              return new Bind(v.value0.value0, function (a) {
                  return concatF(v.value0.value1(a))(v.value1);
              });
          };
          throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [ v.value0.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var fromView = function (f) {
      return new Free(f, Data_CatList.empty);
  };
  var freeMonad = new Control_Monad.Monad(function () {
      return freeApplicative;
  }, function () {
      return freeBind;
  });
  var freeFunctor = new Data_Functor.Functor(function (k) {
      return function (f) {
          return Control_Bind.bindFlipped(freeBind)((function () {
              var $120 = Control_Applicative.pure(freeApplicative);
              return function ($121) {
                  return $120(k($121));
              };
          })())(f);
      };
  });
  var freeBind = new Control_Bind.Bind(function () {
      return freeApply;
  }, function (v) {
      return function (k) {
          return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
      };
  });
  var freeApply = new Control_Apply.Apply(function () {
      return freeFunctor;
  }, Control_Monad.ap(freeMonad));
  var freeApplicative = new Control_Applicative.Applicative(function () {
      return freeApply;
  }, function ($122) {
      return fromView(Return.create($122));
  });
  var liftF = function (f) {
      return fromView(new Bind(f, (function () {
          var $123 = Control_Applicative.pure(freeApplicative);
          return function ($124) {
              return $123($124);
          };
      })()));
  };
  var foldFree = function (dictMonadRec) {
      return function (k) {
          var go = function (f) {
              var v = toView(f);
              if (v instanceof Return) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(v.value0));
              };
              if (v instanceof Bind) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(function ($136) {
                      return Control_Monad_Rec_Class.Loop.create(v.value1($136));
                  })(k(v.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  exports["liftF"] = liftF;
  exports["foldFree"] = foldFree;
  exports["freeFunctor"] = freeFunctor;
  exports["freeBind"] = freeBind;
  exports["freeApplicative"] = freeApplicative;
  exports["freeApply"] = freeApply;
  exports["freeMonad"] = freeMonad;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Reader.Class"] = $PS["Control.Monad.Reader.Class"] || {};
  var exports = $PS["Control.Monad.Reader.Class"];       
  var MonadAsk = function (Monad0, ask) {
      this.Monad0 = Monad0;
      this.ask = ask;
  };
  var ask = function (dict) {
      return dict.ask;
  };
  exports["ask"] = ask;
  exports["MonadAsk"] = MonadAsk;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Reader.Trans"] = $PS["Control.Monad.Reader.Trans"] || {};
  var exports = $PS["Control.Monad.Reader.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];            
  var ReaderT = function (x) {
      return x;
  };
  var runReaderT = function (v) {
      return v;
  };          
  var monadTransReaderT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function ($67) {
          return ReaderT(Data_Function["const"]($67));
      };
  });
  var mapReaderT = function (f) {
      return function (v) {
          return function ($68) {
              return f(v($68));
          };
      };
  };
  var functorReaderT = function (dictFunctor) {
      return new Data_Functor.Functor((function () {
          var $69 = Data_Functor.map(dictFunctor);
          return function ($70) {
              return mapReaderT($69($70));
          };
      })());
  };
  var applyReaderT = function (dictApply) {
      return new Control_Apply.Apply(function () {
          return functorReaderT(dictApply.Functor0());
      }, function (v) {
          return function (v1) {
              return function (r) {
                  return Control_Apply.apply(dictApply)(v(r))(v1(r));
              };
          };
      });
  };
  var bindReaderT = function (dictBind) {
      return new Control_Bind.Bind(function () {
          return applyReaderT(dictBind.Apply0());
      }, function (v) {
          return function (k) {
              return function (r) {
                  return Control_Bind.bind(dictBind)(v(r))(function (a) {
                      var v1 = k(a);
                      return v1(r);
                  });
              };
          };
      });
  };
  var semigroupReaderT = function (dictApply) {
      return function (dictSemigroup) {
          return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyReaderT(dictApply))(Data_Semigroup.append(dictSemigroup)));
      };
  };
  var applicativeReaderT = function (dictApplicative) {
      return new Control_Applicative.Applicative(function () {
          return applyReaderT(dictApplicative.Apply0());
      }, (function () {
          var $74 = Control_Applicative.pure(dictApplicative);
          return function ($75) {
              return ReaderT(Data_Function["const"]($74($75)));
          };
      })());
  };
  var monadReaderT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeReaderT(dictMonad.Applicative0());
      }, function () {
          return bindReaderT(dictMonad.Bind1());
      });
  };
  var monadAskReaderT = function (dictMonad) {
      return new Control_Monad_Reader_Class.MonadAsk(function () {
          return monadReaderT(dictMonad);
      }, Control_Applicative.pure(dictMonad.Applicative0()));
  };
  exports["runReaderT"] = runReaderT;
  exports["bindReaderT"] = bindReaderT;
  exports["semigroupReaderT"] = semigroupReaderT;
  exports["monadTransReaderT"] = monadTransReaderT;
  exports["monadAskReaderT"] = monadAskReaderT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.State"] = $PS["Control.Monad.State"] || {};
  var exports = $PS["Control.Monad.State"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];              
  var runState = function (v) {
      var $16 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
      return function ($17) {
          return $16(v($17));
      };
  };
  exports["runState"] = runState;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.State.Trans"] = $PS["Control.Monad.State.Trans"] || {};
  var exports = $PS["Control.Monad.State.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];                      
  var StateT = function (x) {
      return x;
  };
  var runStateT = function (v) {
      return v;
  };         
  var monadTransStateT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function (m) {
          return function (s) {
              return Control_Bind.bind(dictMonad.Bind1())(m)(function (x) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(x, s));
              });
          };
      };
  });
  var mapStateT = function (f) {
      return function (v) {
          return function ($106) {
              return f(v($106));
          };
      };
  };
  var lazyStateT = new Control_Lazy.Lazy(function (f) {
      return function (s) {
          var v = f(Data_Unit.unit);
          return v(s);
      };
  });
  var functorStateT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return function (s) {
                  return Data_Functor.map(dictFunctor)(function (v1) {
                      return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                  })(v(s));
              };
          };
      });
  };
  var evalStateT = function (dictFunctor) {
      return function (v) {
          return function (s) {
              return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
          };
      };
  };
  var monadStateT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeStateT(dictMonad);
      }, function () {
          return bindStateT(dictMonad);
      });
  };
  var bindStateT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyStateT(dictMonad);
      }, function (v) {
          return function (f) {
              return function (s) {
                  return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
                      var v3 = f(v1.value0);
                      return v3(v1.value1);
                  });
              };
          };
      });
  };
  var applyStateT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorStateT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadStateT(dictMonad)));
  };
  var applicativeStateT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyStateT(dictMonad);
      }, function (a) {
          return function (s) {
              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
          };
      });
  };
  var monadStateStateT = function (dictMonad) {
      return new Control_Monad_State_Class.MonadState(function () {
          return monadStateT(dictMonad);
      }, function (f) {
          return StateT((function () {
              var $112 = Control_Applicative.pure(dictMonad.Applicative0());
              return function ($113) {
                  return $112(f($113));
              };
          })());
      });
  };
  exports["StateT"] = StateT;
  exports["runStateT"] = runStateT;
  exports["evalStateT"] = evalStateT;
  exports["mapStateT"] = mapStateT;
  exports["functorStateT"] = functorStateT;
  exports["monadStateT"] = monadStateT;
  exports["monadTransStateT"] = monadTransStateT;
  exports["lazyStateT"] = lazyStateT;
  exports["monadStateStateT"] = monadStateStateT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Parallel"] = $PS["Control.Parallel"] || {};
  var exports = $PS["Control.Parallel"];
  var Control_Category = $PS["Control.Category"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Foldable = $PS["Data.Foldable"];                      
  var parTraverse_ = function (dictParallel) {
      return function (dictFoldable) {
          return function (f) {
              var $17 = Control_Parallel_Class.sequential(dictParallel);
              var $18 = Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)((function () {
                  var $20 = Control_Parallel_Class.parallel(dictParallel);
                  return function ($21) {
                      return $20(f($21));
                  };
              })());
              return function ($19) {
                  return $17($18($19));
              };
          };
      };
  };
  var parSequence_ = function (dictParallel) {
      return function (dictFoldable) {
          return parTraverse_(dictParallel)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["parSequence_"] = parSequence_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["DOM.HTML.Indexed.ButtonType"] = $PS["DOM.HTML.Indexed.ButtonType"] || {};
  var exports = $PS["DOM.HTML.Indexed.ButtonType"];
  var ButtonButton = (function () {
      function ButtonButton() {

      };
      ButtonButton.value = new ButtonButton();
      return ButtonButton;
  })();
  var ButtonSubmit = (function () {
      function ButtonSubmit() {

      };
      ButtonSubmit.value = new ButtonSubmit();
      return ButtonSubmit;
  })();
  var ButtonReset = (function () {
      function ButtonReset() {

      };
      ButtonReset.value = new ButtonReset();
      return ButtonReset;
  })();
  var renderButtonType = function (v) {
      if (v instanceof ButtonButton) {
          return "button";
      };
      if (v instanceof ButtonSubmit) {
          return "submit";
      };
      if (v instanceof ButtonReset) {
          return "reset";
      };
      throw new Error("Failed pattern match at DOM.HTML.Indexed.ButtonType (line 9, column 20 - line 12, column 25): " + [ v.constructor.name ]);
  };
  exports["ButtonButton"] = ButtonButton;
  exports["renderButtonType"] = renderButtonType;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["DOM.HTML.Indexed.InputType"] = $PS["DOM.HTML.Indexed.InputType"] || {};
  var exports = $PS["DOM.HTML.Indexed.InputType"];
  var InputButton = (function () {
      function InputButton() {

      };
      InputButton.value = new InputButton();
      return InputButton;
  })();
  var InputCheckbox = (function () {
      function InputCheckbox() {

      };
      InputCheckbox.value = new InputCheckbox();
      return InputCheckbox;
  })();
  var InputColor = (function () {
      function InputColor() {

      };
      InputColor.value = new InputColor();
      return InputColor;
  })();
  var InputDate = (function () {
      function InputDate() {

      };
      InputDate.value = new InputDate();
      return InputDate;
  })();
  var InputDatetimeLocal = (function () {
      function InputDatetimeLocal() {

      };
      InputDatetimeLocal.value = new InputDatetimeLocal();
      return InputDatetimeLocal;
  })();
  var InputEmail = (function () {
      function InputEmail() {

      };
      InputEmail.value = new InputEmail();
      return InputEmail;
  })();
  var InputFile = (function () {
      function InputFile() {

      };
      InputFile.value = new InputFile();
      return InputFile;
  })();
  var InputHidden = (function () {
      function InputHidden() {

      };
      InputHidden.value = new InputHidden();
      return InputHidden;
  })();
  var InputImage = (function () {
      function InputImage() {

      };
      InputImage.value = new InputImage();
      return InputImage;
  })();
  var InputMonth = (function () {
      function InputMonth() {

      };
      InputMonth.value = new InputMonth();
      return InputMonth;
  })();
  var InputNumber = (function () {
      function InputNumber() {

      };
      InputNumber.value = new InputNumber();
      return InputNumber;
  })();
  var InputPassword = (function () {
      function InputPassword() {

      };
      InputPassword.value = new InputPassword();
      return InputPassword;
  })();
  var InputRadio = (function () {
      function InputRadio() {

      };
      InputRadio.value = new InputRadio();
      return InputRadio;
  })();
  var InputRange = (function () {
      function InputRange() {

      };
      InputRange.value = new InputRange();
      return InputRange;
  })();
  var InputReset = (function () {
      function InputReset() {

      };
      InputReset.value = new InputReset();
      return InputReset;
  })();
  var InputSearch = (function () {
      function InputSearch() {

      };
      InputSearch.value = new InputSearch();
      return InputSearch;
  })();
  var InputSubmit = (function () {
      function InputSubmit() {

      };
      InputSubmit.value = new InputSubmit();
      return InputSubmit;
  })();
  var InputTel = (function () {
      function InputTel() {

      };
      InputTel.value = new InputTel();
      return InputTel;
  })();
  var InputText = (function () {
      function InputText() {

      };
      InputText.value = new InputText();
      return InputText;
  })();
  var InputTime = (function () {
      function InputTime() {

      };
      InputTime.value = new InputTime();
      return InputTime;
  })();
  var InputUrl = (function () {
      function InputUrl() {

      };
      InputUrl.value = new InputUrl();
      return InputUrl;
  })();
  var InputWeek = (function () {
      function InputWeek() {

      };
      InputWeek.value = new InputWeek();
      return InputWeek;
  })();
  var renderInputType = function (v) {
      if (v instanceof InputButton) {
          return "button";
      };
      if (v instanceof InputCheckbox) {
          return "checkbox";
      };
      if (v instanceof InputColor) {
          return "color";
      };
      if (v instanceof InputDate) {
          return "date";
      };
      if (v instanceof InputDatetimeLocal) {
          return "datetime-local";
      };
      if (v instanceof InputEmail) {
          return "email";
      };
      if (v instanceof InputFile) {
          return "file";
      };
      if (v instanceof InputHidden) {
          return "hidden";
      };
      if (v instanceof InputImage) {
          return "image";
      };
      if (v instanceof InputMonth) {
          return "month";
      };
      if (v instanceof InputNumber) {
          return "number";
      };
      if (v instanceof InputPassword) {
          return "password";
      };
      if (v instanceof InputRadio) {
          return "radio";
      };
      if (v instanceof InputRange) {
          return "range";
      };
      if (v instanceof InputReset) {
          return "reset";
      };
      if (v instanceof InputSearch) {
          return "search";
      };
      if (v instanceof InputSubmit) {
          return "submit";
      };
      if (v instanceof InputTel) {
          return "tel";
      };
      if (v instanceof InputText) {
          return "text";
      };
      if (v instanceof InputTime) {
          return "time";
      };
      if (v instanceof InputUrl) {
          return "url";
      };
      if (v instanceof InputWeek) {
          return "week";
      };
      throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType (line 28, column 19 - line 50, column 22): " + [ v.constructor.name ]);
  };
  exports["InputCheckbox"] = InputCheckbox;
  exports["InputRadio"] = InputRadio;
  exports["renderInputType"] = renderInputType;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["DOM.HTML.Indexed.OnOff"] = $PS["DOM.HTML.Indexed.OnOff"] || {};
  var exports = $PS["DOM.HTML.Indexed.OnOff"];
  var On = (function () {
      function On() {

      };
      On.value = new On();
      return On;
  })();
  var Off = (function () {
      function Off() {

      };
      Off.value = new Off();
      return Off;
  })();
  var renderOnOff = function (v) {
      if (v instanceof On) {
          return "on";
      };
      if (v instanceof Off) {
          return "off";
      };
      throw new Error("Failed pattern match at DOM.HTML.Indexed.OnOff (line 8, column 15 - line 10, column 15): " + [ v.constructor.name ]);
  };
  exports["On"] = On;
  exports["Off"] = Off;
  exports["renderOnOff"] = renderOnOff;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Argonaut.Decode.Class"] = $PS["Data.Argonaut.Decode.Class"] || {};
  var exports = $PS["Data.Argonaut.Decode.Class"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_TraversableWithIndex = $PS["Data.TraversableWithIndex"];
  var Foreign_Object = $PS["Foreign.Object"];
  var DecodeJson = function (decodeJson) {
      this.decodeJson = decodeJson;
  };
  var decodeJsonString = new DecodeJson(Data_Argonaut_Core.caseJsonString(new Data_Either.Left("Value is not a String"))(Data_Either.Right.create));                               
  var decodeJsonJson = new DecodeJson(Data_Either.Right.create);                                                                                       
  var decodeJson = function (dict) {
      return dict.decodeJson;
  };
  var decodeJObject = (function () {
      var $56 = Data_Maybe.maybe(new Data_Either.Left("Value is not an Object"))(Data_Either.Right.create);
      return function ($57) {
          return $56(Data_Argonaut_Core.toObject($57));
      };
  })();
  var decodeJArray = (function () {
      var $58 = Data_Maybe.maybe(new Data_Either.Left("Value is not an Array"))(Data_Either.Right.create);
      return function ($59) {
          return $58(Data_Argonaut_Core.toArray($59));
      };
  })();
  var decodeForeignObject = function (dictDecodeJson) {
      return new DecodeJson((function () {
          var $83 = Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
              return "Couldn't decode ForeignObject: " + v;
          });
          var $84 = Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Foreign_Object.traversableObject)(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(decodeJObject);
          return function ($85) {
              return $83($84($85));
          };
      })());
  };
  var decodeArray = function (dictDecodeJson) {
      return new DecodeJson((function () {
          var msg = function (i) {
              return function (m) {
                  return "Failed at index " + (Data_Show.show(Data_Show.showInt)(i) + ("): " + m));
              };
          };
          var f = function (i) {
              var $86 = Data_Bifunctor.lmap(Data_Either.bifunctorEither)(msg(i));
              var $87 = decodeJson(dictDecodeJson);
              return function ($88) {
                  return $86($87($88));
              };
          };
          var $89 = Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
              return "Couldn't decode Array (" + v;
          });
          var $90 = Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_TraversableWithIndex.traverseWithIndex(Data_TraversableWithIndex.traversableWithIndexArray)(Data_Either.applicativeEither)(f))(decodeJArray);
          return function ($91) {
              return $89($90($91));
          };
      })());
  };
  exports["decodeJson"] = decodeJson;
  exports["decodeJsonString"] = decodeJsonString;
  exports["decodeJsonJson"] = decodeJsonJson;
  exports["decodeForeignObject"] = decodeForeignObject;
  exports["decodeArray"] = decodeArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Argonaut.Decode.Combinators"] = $PS["Data.Argonaut.Decode.Combinators"] || {};
  var exports = $PS["Data.Argonaut.Decode.Combinators"];
  var Data_Argonaut_Decode_Class = $PS["Data.Argonaut.Decode.Class"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Foreign_Object = $PS["Foreign.Object"];                
  var elaborateFailure = function (s) {
      return function (e) {
          var msg = function (m) {
              return "Failed to decode key '" + (s + ("': " + m));
          };
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(msg)(e);
      };
  };
  var getField = function (dictDecodeJson) {
      return function (o) {
          return function (s) {
              return Data_Maybe.maybe(Data_Either.Left.create("Expected field " + Data_Show.show(Data_Show.showString)(s)))((function () {
                  var $9 = elaborateFailure(s);
                  var $10 = Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson);
                  return function ($11) {
                      return $9($10($11));
                  };
              })())(Foreign_Object.lookup(s)(o));
          };
      };
  };
  exports["getField"] = getField;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Array.NonEmpty"] = $PS["Data.Array.NonEmpty"] || {};
  var exports = $PS["Data.Array.NonEmpty"];
  var Data_Array = $PS["Data.Array"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];        
  var toArray = Unsafe_Coerce.unsafeCoerce;
  var adaptMaybe = function (f) {
      var $64 = Data_Maybe.fromJust();
      return function ($65) {
          return $64(f(toArray($65)));
      };
  };
  var head = adaptMaybe(Data_Array.head);    
  var adaptAny = function (f) {
      return function ($67) {
          return f(toArray($67));
      };
  };
  var catMaybes = adaptAny(Data_Array.catMaybes);
  exports["head"] = head;
  exports["catMaybes"] = catMaybes;
})(PS);
(function(exports) {
  "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;

  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Bounded"] = $PS["Data.Bounded"] || {};
  var exports = $PS["Data.Bounded"];
  var $foreign = $PS["Data.Bounded"];
  var Data_Ord = $PS["Data.Ord"];                  
  var Bounded = function (Ord0, bottom, top) {
      this.Ord0 = Ord0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                            
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var boundedChar = new Bounded(function () {
      return Data_Ord.ordChar;
  }, $foreign.bottomChar, $foreign.topChar);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.CommutativeRing"] = $PS["Data.CommutativeRing"] || {};
  var exports = $PS["Data.CommutativeRing"];
  var Data_Ring = $PS["Data.Ring"];
  var CommutativeRing = function (Ring0) {
      this.Ring0 = Ring0;
  };
  var commutativeRingNumber = new CommutativeRing(function () {
      return Data_Ring.ringNumber;
  });
  var commutativeRingInt = new CommutativeRing(function () {
      return Data_Ring.ringInt;
  });
  exports["commutativeRingInt"] = commutativeRingInt;
  exports["commutativeRingNumber"] = commutativeRingNumber;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Coyoneda"] = $PS["Data.Coyoneda"] || {};
  var exports = $PS["Data.Coyoneda"];
  var Control_Category = $PS["Control.Category"];
  var Data_Exists = $PS["Data.Exists"];
  var Data_Functor = $PS["Data.Functor"];                        
  var CoyonedaF = (function () {
      function CoyonedaF(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CoyonedaF.create = function (value0) {
          return function (value1) {
              return new CoyonedaF(value0, value1);
          };
      };
      return CoyonedaF;
  })();
  var Coyoneda = function (x) {
      return x;
  };
  var unCoyoneda = function (f) {
      return function (v) {
          return Data_Exists.runExists(function (v1) {
              return f(v1.value0)(v1.value1);
          })(v);
      };
  };
  var coyoneda = function (k) {
      return function (fi) {
          return Coyoneda(Data_Exists.mkExists(new CoyonedaF(k, fi)));
      };
  };
  var functorCoyoneda = new Data_Functor.Functor(function (f) {
      return function (v) {
          return Data_Exists.runExists(function (v1) {
              return coyoneda(function ($85) {
                  return f(v1.value0($85));
              })(v1.value1);
          })(v);
      };
  });
  var liftCoyoneda = coyoneda(Control_Category.identity(Control_Category.categoryFn));
  exports["unCoyoneda"] = unCoyoneda;
  exports["liftCoyoneda"] = liftCoyoneda;
  exports["functorCoyoneda"] = functorCoyoneda;
})(PS);
(function(exports) {
  "use strict";

  var createDate = function (y, m, d) {
    var date = new Date(Date.UTC(y, m, d));
    if (y >= 0 && y < 100) {
      date.setUTCFullYear(y);
    }
    return date;
  };

  exports.canonicalDateImpl = function (ctor, y, m, d) {
    var date = createDate(y, m - 1, d);
    return ctor(date.getUTCFullYear())(date.getUTCMonth() + 1)(date.getUTCDate());
  };

  exports.calcWeekday = function (y, m, d) {
    return createDate(y, m - 1, d).getUTCDay();
  };
})(PS["Data.Date"] = PS["Data.Date"] || {});
(function(exports) {
  "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Enum"] = $PS["Data.Enum"] || {};
  var exports = $PS["Data.Enum"];
  var $foreign = $PS["Data.Enum"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Enum = function (Ord0, pred, succ) {
      this.Ord0 = Ord0;
      this.pred = pred;
      this.succ = succ;
  };
  var BoundedEnum = function (Bounded0, Enum1, cardinality, fromEnum, toEnum) {
      this.Bounded0 = Bounded0;
      this.Enum1 = Enum1;
      this.cardinality = cardinality;
      this.fromEnum = fromEnum;
      this.toEnum = toEnum;
  };
  var toEnum = function (dict) {
      return dict.toEnum;
  };
  var succ = function (dict) {
      return dict.succ;
  }; 
  var pred = function (dict) {
      return dict.pred;
  };              
  var fromEnum = function (dict) {
      return dict.fromEnum;
  };
  var toEnumWithDefaults = function (dictBoundedEnum) {
      return function (low) {
          return function (high) {
              return function (x) {
                  var v = toEnum(dictBoundedEnum)(x);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                      if ($54) {
                          return low;
                      };
                      return high;
                  };
                  throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var defaultSucc = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) + 1 | 0);
          };
      };
  };
  var defaultPred = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) - 1 | 0);
          };
      };
  };
  var charToEnum = function (v) {
      if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
          return new Data_Maybe.Just($foreign.fromCharCode(v));
      };
      return Data_Maybe.Nothing.value;
  };
  var enumChar = new Enum(function () {
      return Data_Ord.ordChar;
  }, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));
  var boundedEnumChar = new BoundedEnum(function () {
      return Data_Bounded.boundedChar;
  }, function () {
      return enumChar;
  }, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
  exports["Enum"] = Enum;
  exports["succ"] = succ;
  exports["pred"] = pred;
  exports["BoundedEnum"] = BoundedEnum;
  exports["toEnum"] = toEnum;
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["boundedEnumChar"] = boundedEnumChar;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Date.Component"] = $PS["Data.Date.Component"] || {};
  var exports = $PS["Data.Date.Component"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Show = $PS["Data.Show"];
  var Monday = (function () {
      function Monday() {

      };
      Monday.value = new Monday();
      return Monday;
  })();
  var Tuesday = (function () {
      function Tuesday() {

      };
      Tuesday.value = new Tuesday();
      return Tuesday;
  })();
  var Wednesday = (function () {
      function Wednesday() {

      };
      Wednesday.value = new Wednesday();
      return Wednesday;
  })();
  var Thursday = (function () {
      function Thursday() {

      };
      Thursday.value = new Thursday();
      return Thursday;
  })();
  var Friday = (function () {
      function Friday() {

      };
      Friday.value = new Friday();
      return Friday;
  })();
  var Saturday = (function () {
      function Saturday() {

      };
      Saturday.value = new Saturday();
      return Saturday;
  })();
  var Sunday = (function () {
      function Sunday() {

      };
      Sunday.value = new Sunday();
      return Sunday;
  })();
  var January = (function () {
      function January() {

      };
      January.value = new January();
      return January;
  })();
  var February = (function () {
      function February() {

      };
      February.value = new February();
      return February;
  })();
  var March = (function () {
      function March() {

      };
      March.value = new March();
      return March;
  })();
  var April = (function () {
      function April() {

      };
      April.value = new April();
      return April;
  })();
  var May = (function () {
      function May() {

      };
      May.value = new May();
      return May;
  })();
  var June = (function () {
      function June() {

      };
      June.value = new June();
      return June;
  })();
  var July = (function () {
      function July() {

      };
      July.value = new July();
      return July;
  })();
  var August = (function () {
      function August() {

      };
      August.value = new August();
      return August;
  })();
  var September = (function () {
      function September() {

      };
      September.value = new September();
      return September;
  })();
  var October = (function () {
      function October() {

      };
      October.value = new October();
      return October;
  })();
  var November = (function () {
      function November() {

      };
      November.value = new November();
      return November;
  })();
  var December = (function () {
      function December() {

      };
      December.value = new December();
      return December;
  })();
  var showWeekday = new Data_Show.Show(function (v) {
      if (v instanceof Monday) {
          return "Monday";
      };
      if (v instanceof Tuesday) {
          return "Tuesday";
      };
      if (v instanceof Wednesday) {
          return "Wednesday";
      };
      if (v instanceof Thursday) {
          return "Thursday";
      };
      if (v instanceof Friday) {
          return "Friday";
      };
      if (v instanceof Saturday) {
          return "Saturday";
      };
      if (v instanceof Sunday) {
          return "Sunday";
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 184, column 1 - line 191, column 25): " + [ v.constructor.name ]);
  });
  var showMonth = new Data_Show.Show(function (v) {
      if (v instanceof January) {
          return "January";
      };
      if (v instanceof February) {
          return "February";
      };
      if (v instanceof March) {
          return "March";
      };
      if (v instanceof April) {
          return "April";
      };
      if (v instanceof May) {
          return "May";
      };
      if (v instanceof June) {
          return "June";
      };
      if (v instanceof July) {
          return "July";
      };
      if (v instanceof August) {
          return "August";
      };
      if (v instanceof September) {
          return "September";
      };
      if (v instanceof October) {
          return "October";
      };
      if (v instanceof November) {
          return "November";
      };
      if (v instanceof December) {
          return "December";
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 101, column 1 - line 113, column 29): " + [ v.constructor.name ]);
  });
  var ordYear = Data_Ord.ordInt;
  var ordDay = Data_Ord.ordInt;
  var eqYear = Data_Eq.eqInt;
  var eqWeekday = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Monday && y instanceof Monday) {
              return true;
          };
          if (x instanceof Tuesday && y instanceof Tuesday) {
              return true;
          };
          if (x instanceof Wednesday && y instanceof Wednesday) {
              return true;
          };
          if (x instanceof Thursday && y instanceof Thursday) {
              return true;
          };
          if (x instanceof Friday && y instanceof Friday) {
              return true;
          };
          if (x instanceof Saturday && y instanceof Saturday) {
              return true;
          };
          if (x instanceof Sunday && y instanceof Sunday) {
              return true;
          };
          return false;
      };
  });
  var ordWeekday = new Data_Ord.Ord(function () {
      return eqWeekday;
  }, function (x) {
      return function (y) {
          if (x instanceof Monday && y instanceof Monday) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Monday) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Monday) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Tuesday && y instanceof Tuesday) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Tuesday) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Tuesday) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Wednesday && y instanceof Wednesday) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Wednesday) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Wednesday) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Thursday && y instanceof Thursday) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Thursday) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Thursday) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Friday && y instanceof Friday) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Friday) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Friday) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Saturday && y instanceof Saturday) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Saturday) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Saturday) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Sunday && y instanceof Sunday) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Data.Date.Component (line 154, column 1 - line 154, column 42): " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var eqMonth = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof January && y instanceof January) {
              return true;
          };
          if (x instanceof February && y instanceof February) {
              return true;
          };
          if (x instanceof March && y instanceof March) {
              return true;
          };
          if (x instanceof April && y instanceof April) {
              return true;
          };
          if (x instanceof May && y instanceof May) {
              return true;
          };
          if (x instanceof June && y instanceof June) {
              return true;
          };
          if (x instanceof July && y instanceof July) {
              return true;
          };
          if (x instanceof August && y instanceof August) {
              return true;
          };
          if (x instanceof September && y instanceof September) {
              return true;
          };
          if (x instanceof October && y instanceof October) {
              return true;
          };
          if (x instanceof November && y instanceof November) {
              return true;
          };
          if (x instanceof December && y instanceof December) {
              return true;
          };
          return false;
      };
  });
  var ordMonth = new Data_Ord.Ord(function () {
      return eqMonth;
  }, function (x) {
      return function (y) {
          if (x instanceof January && y instanceof January) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof January) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof January) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof February && y instanceof February) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof February) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof February) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof March && y instanceof March) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof March) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof March) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof April && y instanceof April) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof April) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof April) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof May && y instanceof May) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof May) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof May) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof June && y instanceof June) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof June) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof June) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof July && y instanceof July) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof July) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof July) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof August && y instanceof August) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof August) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof August) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof September && y instanceof September) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof September) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof September) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof October && y instanceof October) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof October) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof October) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof November && y instanceof November) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof November) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof November) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof December && y instanceof December) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Data.Date.Component (line 61, column 1 - line 61, column 38): " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var eqDay = Data_Eq.eqInt;
  var boundedYear = new Data_Bounded.Bounded(function () {
      return ordYear;
  }, -271820 | 0, 275759);
  var boundedWeekday = new Data_Bounded.Bounded(function () {
      return ordWeekday;
  }, Monday.value, Sunday.value);
  var boundedMonth = new Data_Bounded.Bounded(function () {
      return ordMonth;
  }, January.value, December.value);
  var boundedEnumYear = new Data_Enum.BoundedEnum(function () {
      return boundedYear;
  }, function () {
      return enumYear;
  }, 547580, function (v) {
      return v;
  }, function (n) {
      if (n >= (-271820 | 0) && n <= 275759) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 35, column 1 - line 40, column 24): " + [ n.constructor.name ]);
  });
  var enumYear = new Data_Enum.Enum(function () {
      return ordYear;
  }, (function () {
      var $46 = Data_Enum.toEnum(boundedEnumYear);
      var $47 = Data_Enum.fromEnum(boundedEnumYear);
      return function ($48) {
          return $46((function (v) {
              return v - 1 | 0;
          })($47($48)));
      };
  })(), (function () {
      var $49 = Data_Enum.toEnum(boundedEnumYear);
      var $50 = Data_Enum.fromEnum(boundedEnumYear);
      return function ($51) {
          return $49((function (v) {
              return v + 1 | 0;
          })($50($51)));
      };
  })());
  var boundedEnumWeekday = new Data_Enum.BoundedEnum(function () {
      return boundedWeekday;
  }, function () {
      return enumWeekday;
  }, 7, function (v) {
      if (v instanceof Monday) {
          return 1;
      };
      if (v instanceof Tuesday) {
          return 2;
      };
      if (v instanceof Wednesday) {
          return 3;
      };
      if (v instanceof Thursday) {
          return 4;
      };
      if (v instanceof Friday) {
          return 5;
      };
      if (v instanceof Saturday) {
          return 6;
      };
      if (v instanceof Sunday) {
          return 7;
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 175, column 14 - line 182, column 16): " + [ v.constructor.name ]);
  }, function (v) {
      if (v === 1) {
          return new Data_Maybe.Just(Monday.value);
      };
      if (v === 2) {
          return new Data_Maybe.Just(Tuesday.value);
      };
      if (v === 3) {
          return new Data_Maybe.Just(Wednesday.value);
      };
      if (v === 4) {
          return new Data_Maybe.Just(Thursday.value);
      };
      if (v === 5) {
          return new Data_Maybe.Just(Friday.value);
      };
      if (v === 6) {
          return new Data_Maybe.Just(Saturday.value);
      };
      if (v === 7) {
          return new Data_Maybe.Just(Sunday.value);
      };
      return Data_Maybe.Nothing.value;
  });
  var enumWeekday = new Data_Enum.Enum(function () {
      return ordWeekday;
  }, (function () {
      var $52 = Data_Enum.toEnum(boundedEnumWeekday);
      var $53 = Data_Enum.fromEnum(boundedEnumWeekday);
      return function ($54) {
          return $52((function (v) {
              return v - 1 | 0;
          })($53($54)));
      };
  })(), (function () {
      var $55 = Data_Enum.toEnum(boundedEnumWeekday);
      var $56 = Data_Enum.fromEnum(boundedEnumWeekday);
      return function ($57) {
          return $55((function (v) {
              return v + 1 | 0;
          })($56($57)));
      };
  })());
  var boundedEnumMonth = new Data_Enum.BoundedEnum(function () {
      return boundedMonth;
  }, function () {
      return enumMonth;
  }, 12, function (v) {
      if (v instanceof January) {
          return 1;
      };
      if (v instanceof February) {
          return 2;
      };
      if (v instanceof March) {
          return 3;
      };
      if (v instanceof April) {
          return 4;
      };
      if (v instanceof May) {
          return 5;
      };
      if (v instanceof June) {
          return 6;
      };
      if (v instanceof July) {
          return 7;
      };
      if (v instanceof August) {
          return 8;
      };
      if (v instanceof September) {
          return 9;
      };
      if (v instanceof October) {
          return 10;
      };
      if (v instanceof November) {
          return 11;
      };
      if (v instanceof December) {
          return 12;
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 87, column 14 - line 99, column 19): " + [ v.constructor.name ]);
  }, function (v) {
      if (v === 1) {
          return new Data_Maybe.Just(January.value);
      };
      if (v === 2) {
          return new Data_Maybe.Just(February.value);
      };
      if (v === 3) {
          return new Data_Maybe.Just(March.value);
      };
      if (v === 4) {
          return new Data_Maybe.Just(April.value);
      };
      if (v === 5) {
          return new Data_Maybe.Just(May.value);
      };
      if (v === 6) {
          return new Data_Maybe.Just(June.value);
      };
      if (v === 7) {
          return new Data_Maybe.Just(July.value);
      };
      if (v === 8) {
          return new Data_Maybe.Just(August.value);
      };
      if (v === 9) {
          return new Data_Maybe.Just(September.value);
      };
      if (v === 10) {
          return new Data_Maybe.Just(October.value);
      };
      if (v === 11) {
          return new Data_Maybe.Just(November.value);
      };
      if (v === 12) {
          return new Data_Maybe.Just(December.value);
      };
      return Data_Maybe.Nothing.value;
  });
  var enumMonth = new Data_Enum.Enum(function () {
      return ordMonth;
  }, (function () {
      var $58 = Data_Enum.toEnum(boundedEnumMonth);
      var $59 = Data_Enum.fromEnum(boundedEnumMonth);
      return function ($60) {
          return $58((function (v) {
              return v - 1 | 0;
          })($59($60)));
      };
  })(), (function () {
      var $61 = Data_Enum.toEnum(boundedEnumMonth);
      var $62 = Data_Enum.fromEnum(boundedEnumMonth);
      return function ($63) {
          return $61((function (v) {
              return v + 1 | 0;
          })($62($63)));
      };
  })());
  var boundedDay = new Data_Bounded.Bounded(function () {
      return ordDay;
  }, 1, 31);
  var boundedEnumDay = new Data_Enum.BoundedEnum(function () {
      return boundedDay;
  }, function () {
      return enumDay;
  }, 31, function (v) {
      return v;
  }, function (n) {
      if (n >= 1 && n <= 31) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 133, column 1 - line 138, column 23): " + [ n.constructor.name ]);
  });
  var enumDay = new Data_Enum.Enum(function () {
      return ordDay;
  }, (function () {
      var $64 = Data_Enum.toEnum(boundedEnumDay);
      var $65 = Data_Enum.fromEnum(boundedEnumDay);
      return function ($66) {
          return $64((function (v) {
              return v - 1 | 0;
          })($65($66)));
      };
  })(), (function () {
      var $67 = Data_Enum.toEnum(boundedEnumDay);
      var $68 = Data_Enum.fromEnum(boundedEnumDay);
      return function ($69) {
          return $67((function (v) {
              return v + 1 | 0;
          })($68($69)));
      };
  })());
  exports["January"] = January;
  exports["February"] = February;
  exports["March"] = March;
  exports["April"] = April;
  exports["May"] = May;
  exports["June"] = June;
  exports["July"] = July;
  exports["August"] = August;
  exports["September"] = September;
  exports["October"] = October;
  exports["November"] = November;
  exports["December"] = December;
  exports["Monday"] = Monday;
  exports["Tuesday"] = Tuesday;
  exports["Wednesday"] = Wednesday;
  exports["Thursday"] = Thursday;
  exports["Friday"] = Friday;
  exports["Saturday"] = Saturday;
  exports["Sunday"] = Sunday;
  exports["eqYear"] = eqYear;
  exports["ordYear"] = ordYear;
  exports["enumYear"] = enumYear;
  exports["boundedEnumYear"] = boundedEnumYear;
  exports["eqMonth"] = eqMonth;
  exports["ordMonth"] = ordMonth;
  exports["enumMonth"] = enumMonth;
  exports["boundedEnumMonth"] = boundedEnumMonth;
  exports["showMonth"] = showMonth;
  exports["eqDay"] = eqDay;
  exports["ordDay"] = ordDay;
  exports["boundedDay"] = boundedDay;
  exports["boundedEnumDay"] = boundedEnumDay;
  exports["boundedEnumWeekday"] = boundedEnumWeekday;
  exports["showWeekday"] = showWeekday;
})(PS);
(function(exports) {
  "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.
  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return ((x % yy) + yy) % yy;
    };
  };

  exports.numDiv = function (n1) {
    return function (n2) {
      return n1 / n2;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.EuclideanRing"] = $PS["Data.EuclideanRing"] || {};
  var exports = $PS["Data.EuclideanRing"];
  var $foreign = $PS["Data.EuclideanRing"];
  var Data_CommutativeRing = $PS["Data.CommutativeRing"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Semiring = $PS["Data.Semiring"];                
  var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
      this.CommutativeRing0 = CommutativeRing0;
      this.degree = degree;
      this.div = div;
      this.mod = mod;
  };
  var mod = function (dict) {
      return dict.mod;
  };
  var gcd = function ($copy_dictEq) {
      return function ($copy_dictEuclideanRing) {
          return function ($copy_a) {
              return function ($copy_b) {
                  var $tco_var_dictEq = $copy_dictEq;
                  var $tco_var_dictEuclideanRing = $copy_dictEuclideanRing;
                  var $tco_var_a = $copy_a;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(dictEq, dictEuclideanRing, a, b) {
                      var $7 = Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                      if ($7) {
                          $tco_done = true;
                          return a;
                      };
                      $tco_var_dictEq = dictEq;
                      $tco_var_dictEuclideanRing = dictEuclideanRing;
                      $tco_var_a = b;
                      $copy_b = mod(dictEuclideanRing)(a)(b);
                      return;
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_dictEq, $tco_var_dictEuclideanRing, $tco_var_a, $copy_b);
                  };
                  return $tco_result;
              };
          };
      };
  };
  var euclideanRingNumber = new EuclideanRing(function () {
      return Data_CommutativeRing.commutativeRingNumber;
  }, function (v) {
      return 1;
  }, $foreign.numDiv, function (v) {
      return function (v1) {
          return 0.0;
      };
  });
  var euclideanRingInt = new EuclideanRing(function () {
      return Data_CommutativeRing.commutativeRingInt;
  }, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
  var div = function (dict) {
      return dict.div;
  };
  exports["div"] = div;
  exports["mod"] = mod;
  exports["gcd"] = gcd;
  exports["euclideanRingInt"] = euclideanRingInt;
  exports["euclideanRingNumber"] = euclideanRingNumber;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Date"] = $PS["Data.Date"] || {};
  var exports = $PS["Data.Date"];
  var $foreign = $PS["Data.Date"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];                          
  var $$Date = (function () {
      function $$Date(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      $$Date.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new $$Date(value0, value1, value2);
              };
          };
      };
      return $$Date;
  })();
  var year = function (v) {
      return v.value0;
  };
  var weekday = function (v) {
      var n = $foreign.calcWeekday(v.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v.value1), v.value2);
      var $41 = n === 0;
      if ($41) {
          return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(7));
      };
      return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(n));
  }; 
  var month = function (v) {
      return v.value1;
  };
  var isLeapYear = function (y) {
      var y$prime = Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(y);
      return Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(y$prime)(4) === 0 && (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(y$prime)(400) === 0 || !(Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(y$prime)(100) === 0));
  };
  var lastDayOfMonth = function (y) {
      return function (m) {
          var unsafeDay = (function () {
              var $108 = Data_Maybe.fromJust();
              var $109 = Data_Enum.toEnum(Data_Date_Component.boundedEnumDay);
              return function ($110) {
                  return $108($109($110));
              };
          })();
          if (m instanceof Data_Date_Component.January) {
              return unsafeDay(31);
          };
          if (m instanceof Data_Date_Component.February) {
              if (isLeapYear(y)) {
                  return unsafeDay(29);
              };
              if (Data_Boolean.otherwise) {
                  return unsafeDay(28);
              };
          };
          if (m instanceof Data_Date_Component.March) {
              return unsafeDay(31);
          };
          if (m instanceof Data_Date_Component.April) {
              return unsafeDay(30);
          };
          if (m instanceof Data_Date_Component.May) {
              return unsafeDay(31);
          };
          if (m instanceof Data_Date_Component.June) {
              return unsafeDay(30);
          };
          if (m instanceof Data_Date_Component.July) {
              return unsafeDay(31);
          };
          if (m instanceof Data_Date_Component.August) {
              return unsafeDay(31);
          };
          if (m instanceof Data_Date_Component.September) {
              return unsafeDay(30);
          };
          if (m instanceof Data_Date_Component.October) {
              return unsafeDay(31);
          };
          if (m instanceof Data_Date_Component.November) {
              return unsafeDay(30);
          };
          if (m instanceof Data_Date_Component.December) {
              return unsafeDay(31);
          };
          throw new Error("Failed pattern match at Data.Date (line 127, column 22 - line 141, column 27): " + [ m.constructor.name ]);
      };
  };
  var eqDate = new Data_Eq.Eq(function (x) {
      return function (y) {
          return Data_Eq.eq(Data_Date_Component.eqYear)(x.value0)(y.value0) && Data_Eq.eq(Data_Date_Component.eqMonth)(x.value1)(y.value1) && Data_Eq.eq(Data_Date_Component.eqDay)(x.value2)(y.value2);
      };
  });
  var ordDate = new Data_Ord.Ord(function () {
      return eqDate;
  }, function (x) {
      return function (y) {
          var v = Data_Ord.compare(Data_Date_Component.ordYear)(x.value0)(y.value0);
          if (v instanceof Data_Ordering.LT) {
              return Data_Ordering.LT.value;
          };
          if (v instanceof Data_Ordering.GT) {
              return Data_Ordering.GT.value;
          };
          var v1 = Data_Ord.compare(Data_Date_Component.ordMonth)(x.value1)(y.value1);
          if (v1 instanceof Data_Ordering.LT) {
              return Data_Ordering.LT.value;
          };
          if (v1 instanceof Data_Ordering.GT) {
              return Data_Ordering.GT.value;
          };
          return Data_Ord.compare(Data_Date_Component.ordDay)(x.value2)(y.value2);
      };
  });
  var day = function (v) {
      return v.value2;
  };
  var canonicalDate = function (y) {
      return function (m) {
          return function (d) {
              var mkDate = function (y$prime) {
                  return function (m$prime) {
                      return function (d$prime) {
                          return new $$Date(y$prime, Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(m$prime)), d$prime);
                      };
                  };
              };
              return $foreign.canonicalDateImpl(mkDate, y, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(m), d);
          };
      };
  };
  var exactDate = function (y) {
      return function (m) {
          return function (d) {
              var dt = new $$Date(y, m, d);
              var $99 = Data_Eq.eq(eqDate)(canonicalDate(y)(m)(d))(dt);
              if ($99) {
                  return new Data_Maybe.Just(dt);
              };
              return Data_Maybe.Nothing.value;
          };
      };
  };
  exports["canonicalDate"] = canonicalDate;
  exports["exactDate"] = exactDate;
  exports["year"] = year;
  exports["month"] = month;
  exports["day"] = day;
  exports["weekday"] = weekday;
  exports["lastDayOfMonth"] = lastDayOfMonth;
  exports["eqDate"] = eqDate;
  exports["ordDate"] = ordDate;
})(PS);
(function(exports) {
  "use strict";

  var createUTC = function (y, mo, d, h, m, s, ms) {
    var date = new Date(Date.UTC(y, mo, d, h, m, s, ms));
    if (y >= 0 && y < 100) {
      date.setUTCFullYear(y);
    }
    return date.getTime();
  };

  exports.adjustImpl = function (just) {
    return function (nothing) {
      return function (offset) {
        return function (rec) {
          var msUTC = createUTC(rec.year, rec.month - 1, rec.day, rec.hour, rec.minute, rec.second, rec.millisecond);
          var dt = new Date(msUTC + offset);
          return isNaN(dt.getTime()) ? nothing : just({
            year: dt.getUTCFullYear(),
            month: dt.getUTCMonth() + 1,
            day: dt.getUTCDate(),
            hour: dt.getUTCHours(),
            minute: dt.getUTCMinutes(),
            second: dt.getUTCSeconds(),
            millisecond: dt.getUTCMilliseconds()
          });
        };
      };
    };
  };
})(PS["Data.DateTime"] = PS["Data.DateTime"] || {});
(function(exports) {
  "use strict";

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  "use strict";          

  exports.floor = Math.floor;
})(PS["Math"] = PS["Math"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Math"] = $PS["Math"] || {};
  var exports = $PS["Math"];
  var $foreign = $PS["Math"];
  exports["floor"] = $foreign.floor;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Int"] = $PS["Data.Int"] || {};
  var exports = $PS["Data.Int"];
  var $foreign = $PS["Data.Int"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Global = $PS["Global"];
  var $$Math = $PS["Math"];         
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x === Global.infinity) {
          return 0;
      };
      if (x === -Global.infinity) {
          return 0;
      };
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.fromMaybe(0)(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [ x.constructor.name ]);
  };
  var floor = function ($24) {
      return unsafeClamp($$Math.floor($24));
  };
  exports["floor"] = floor;
  exports["toNumber"] = $foreign.toNumber;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Time.Component"] = $PS["Data.Time.Component"] || {};
  var exports = $PS["Data.Time.Component"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var ordSecond = Data_Ord.ordInt;
  var ordMinute = Data_Ord.ordInt;
  var ordMillisecond = Data_Ord.ordInt;
  var ordHour = Data_Ord.ordInt;
  var eqSecond = Data_Eq.eqInt;
  var eqMinute = Data_Eq.eqInt;
  var eqMillisecond = Data_Eq.eqInt;
  var eqHour = Data_Eq.eqInt;
  var boundedSecond = new Data_Bounded.Bounded(function () {
      return ordSecond;
  }, 0, 59);
  var boundedMinute = new Data_Bounded.Bounded(function () {
      return ordMinute;
  }, 0, 59);
  var boundedMillisecond = new Data_Bounded.Bounded(function () {
      return ordMillisecond;
  }, 0, 999);
  var boundedHour = new Data_Bounded.Bounded(function () {
      return ordHour;
  }, 0, 23);
  var boundedEnumSecond = new Data_Enum.BoundedEnum(function () {
      return boundedSecond;
  }, function () {
      return enumSecond;
  }, 60, function (v) {
      return v;
  }, function (n) {
      if (n >= 0 && n <= 59) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Time.Component (line 90, column 1 - line 95, column 26): " + [ n.constructor.name ]);
  });
  var enumSecond = new Data_Enum.Enum(function () {
      return ordSecond;
  }, (function () {
      var $28 = Data_Enum.toEnum(boundedEnumSecond);
      var $29 = Data_Enum.fromEnum(boundedEnumSecond);
      return function ($30) {
          return $28((function (v) {
              return v - 1 | 0;
          })($29($30)));
      };
  })(), (function () {
      var $31 = Data_Enum.toEnum(boundedEnumSecond);
      var $32 = Data_Enum.fromEnum(boundedEnumSecond);
      return function ($33) {
          return $31((function (v) {
              return v + 1 | 0;
          })($32($33)));
      };
  })());
  var boundedEnumMinute = new Data_Enum.BoundedEnum(function () {
      return boundedMinute;
  }, function () {
      return enumMinute;
  }, 60, function (v) {
      return v;
  }, function (n) {
      if (n >= 0 && n <= 59) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Time.Component (line 61, column 1 - line 66, column 26): " + [ n.constructor.name ]);
  });
  var enumMinute = new Data_Enum.Enum(function () {
      return ordMinute;
  }, (function () {
      var $34 = Data_Enum.toEnum(boundedEnumMinute);
      var $35 = Data_Enum.fromEnum(boundedEnumMinute);
      return function ($36) {
          return $34((function (v) {
              return v - 1 | 0;
          })($35($36)));
      };
  })(), (function () {
      var $37 = Data_Enum.toEnum(boundedEnumMinute);
      var $38 = Data_Enum.fromEnum(boundedEnumMinute);
      return function ($39) {
          return $37((function (v) {
              return v + 1 | 0;
          })($38($39)));
      };
  })());
  var boundedEnumMillisecond = new Data_Enum.BoundedEnum(function () {
      return boundedMillisecond;
  }, function () {
      return enumMillisecond;
  }, 1000, function (v) {
      return v;
  }, function (n) {
      if (n >= 0 && n <= 999) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Time.Component (line 120, column 1 - line 125, column 31): " + [ n.constructor.name ]);
  });
  var enumMillisecond = new Data_Enum.Enum(function () {
      return ordMillisecond;
  }, (function () {
      var $40 = Data_Enum.toEnum(boundedEnumMillisecond);
      var $41 = Data_Enum.fromEnum(boundedEnumMillisecond);
      return function ($42) {
          return $40((function (v) {
              return v - 1 | 0;
          })($41($42)));
      };
  })(), (function () {
      var $43 = Data_Enum.toEnum(boundedEnumMillisecond);
      var $44 = Data_Enum.fromEnum(boundedEnumMillisecond);
      return function ($45) {
          return $43((function (v) {
              return v + 1 | 0;
          })($44($45)));
      };
  })());
  var boundedEnumHour = new Data_Enum.BoundedEnum(function () {
      return boundedHour;
  }, function () {
      return enumHour;
  }, 24, function (v) {
      return v;
  }, function (n) {
      if (n >= 0 && n <= 23) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Time.Component (line 32, column 1 - line 37, column 24): " + [ n.constructor.name ]);
  });
  var enumHour = new Data_Enum.Enum(function () {
      return ordHour;
  }, (function () {
      var $46 = Data_Enum.toEnum(boundedEnumHour);
      var $47 = Data_Enum.fromEnum(boundedEnumHour);
      return function ($48) {
          return $46((function (v) {
              return v - 1 | 0;
          })($47($48)));
      };
  })(), (function () {
      var $49 = Data_Enum.toEnum(boundedEnumHour);
      var $50 = Data_Enum.fromEnum(boundedEnumHour);
      return function ($51) {
          return $49((function (v) {
              return v + 1 | 0;
          })($50($51)));
      };
  })());
  exports["eqHour"] = eqHour;
  exports["ordHour"] = ordHour;
  exports["boundedHour"] = boundedHour;
  exports["boundedEnumHour"] = boundedEnumHour;
  exports["eqMinute"] = eqMinute;
  exports["ordMinute"] = ordMinute;
  exports["boundedMinute"] = boundedMinute;
  exports["boundedEnumMinute"] = boundedEnumMinute;
  exports["eqSecond"] = eqSecond;
  exports["ordSecond"] = ordSecond;
  exports["boundedSecond"] = boundedSecond;
  exports["boundedEnumSecond"] = boundedEnumSecond;
  exports["eqMillisecond"] = eqMillisecond;
  exports["ordMillisecond"] = ordMillisecond;
  exports["boundedMillisecond"] = boundedMillisecond;
  exports["boundedEnumMillisecond"] = boundedEnumMillisecond;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Time.Duration"] = $PS["Data.Time.Duration"] || {};
  var exports = $PS["Data.Time.Duration"];
  var Control_Category = $PS["Control.Category"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Minutes = function (x) {
      return x;
  };
  var Milliseconds = function (x) {
      return x;
  };
  var Hours = function (x) {
      return x;
  };
  var Days = function (x) {
      return x;
  };
  var Duration = function (fromDuration, toDuration) {
      this.fromDuration = fromDuration;
      this.toDuration = toDuration;
  };
  var toDuration = function (dict) {
      return dict.toDuration;
  }; 
  var semigroupMilliseconds = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return v + v1;
      };
  });
  var semigroupDays = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return v + v1;
      };
  });                                 
  var ordMilliseconds = Data_Ord.ordNumber;
  var newtypeMinutes = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Minutes);
  var newtypeMilliseconds = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Milliseconds);
  var newtypeHours = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Hours);
  var newtypeDays = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Days);
  var monoidMilliseconds = new Data_Monoid.Monoid(function () {
      return semigroupMilliseconds;
  }, 0.0);
  var fromDuration = function (dict) {
      return dict.fromDuration;
  };
  var negateDuration = function (dictDuration) {
      var $56 = toDuration(dictDuration);
      var $57 = Data_Newtype.over(newtypeMilliseconds)(newtypeMilliseconds)(Milliseconds)(Data_Ring.negate(Data_Ring.ringNumber));
      var $58 = fromDuration(dictDuration);
      return function ($59) {
          return $56($57($58($59)));
      };
  };  
  var durationMinutes = new Duration(Data_Newtype.over(newtypeMinutes)(newtypeMilliseconds)(Minutes)(function (v) {
      return v * 60000.0;
  }), Data_Newtype.over(newtypeMilliseconds)(newtypeMinutes)(Milliseconds)(function (v) {
      return v / 60000.0;
  }));
  var durationMilliseconds = new Duration(Control_Category.identity(Control_Category.categoryFn), Control_Category.identity(Control_Category.categoryFn));
  var durationHours = new Duration(Data_Newtype.over(newtypeHours)(newtypeMilliseconds)(Hours)(function (v) {
      return v * 3600000.0;
  }), Data_Newtype.over(newtypeMilliseconds)(newtypeHours)(Milliseconds)(function (v) {
      return v / 3600000.0;
  }));
  var durationDays = new Duration(Data_Newtype.over(newtypeDays)(newtypeMilliseconds)(Days)(function (v) {
      return v * 8.64e7;
  }), Data_Newtype.over(newtypeMilliseconds)(newtypeDays)(Milliseconds)(function (v) {
      return v / 8.64e7;
  }));
  exports["fromDuration"] = fromDuration;
  exports["Milliseconds"] = Milliseconds;
  exports["Days"] = Days;
  exports["negateDuration"] = negateDuration;
  exports["newtypeMilliseconds"] = newtypeMilliseconds;
  exports["ordMilliseconds"] = ordMilliseconds;
  exports["semigroupMilliseconds"] = semigroupMilliseconds;
  exports["monoidMilliseconds"] = monoidMilliseconds;
  exports["semigroupDays"] = semigroupDays;
  exports["durationMilliseconds"] = durationMilliseconds;
  exports["durationMinutes"] = durationMinutes;
  exports["durationHours"] = durationHours;
  exports["durationDays"] = durationDays;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Time"] = $PS["Data.Time"] || {};
  var exports = $PS["Data.Time"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Time_Component = $PS["Data.Time.Component"];
  var Data_Time_Duration = $PS["Data.Time.Duration"];
  var Data_Tuple = $PS["Data.Tuple"];
  var $$Math = $PS["Math"];                
  var Time = (function () {
      function Time(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Time.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Time(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Time;
  })();
  var second = function (v) {
      return v.value2;
  };
  var minute = function (v) {
      return v.value1;
  };
  var millisecond = function (v) {
      return v.value3;
  };
  var millisToTime = function (v) {
      var hours = $$Math.floor(v / 3600000.0);
      var minutes = $$Math.floor((v - hours * 3600000.0) / 60000.0);
      var seconds = $$Math.floor((v - (hours * 3600000.0 + minutes * 60000.0)) / 1000.0);
      var milliseconds = v - (hours * 3600000.0 + minutes * 60000.0 + seconds * 1000.0);
      return Data_Maybe.fromJust()(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Time.create)(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(Data_Int.floor(hours))))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(Data_Int.floor(minutes))))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(Data_Int.floor(seconds))))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Int.floor(milliseconds))));
  };
  var hour = function (v) {
      return v.value0;
  };
  var timeToMillis = function (t) {
      return Data_Time_Duration.Milliseconds(3600000.0 * Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(hour(t))) + 60000.0 * Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(minute(t))) + 1000.0 * Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(second(t))) + Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(millisecond(t))));
  };
  var eqTime = new Data_Eq.Eq(function (x) {
      return function (y) {
          return Data_Eq.eq(Data_Time_Component.eqHour)(x.value0)(y.value0) && Data_Eq.eq(Data_Time_Component.eqMinute)(x.value1)(y.value1) && Data_Eq.eq(Data_Time_Component.eqSecond)(x.value2)(y.value2) && Data_Eq.eq(Data_Time_Component.eqMillisecond)(x.value3)(y.value3);
      };
  });
  var ordTime = new Data_Ord.Ord(function () {
      return eqTime;
  }, function (x) {
      return function (y) {
          var v = Data_Ord.compare(Data_Time_Component.ordHour)(x.value0)(y.value0);
          if (v instanceof Data_Ordering.LT) {
              return Data_Ordering.LT.value;
          };
          if (v instanceof Data_Ordering.GT) {
              return Data_Ordering.GT.value;
          };
          var v1 = Data_Ord.compare(Data_Time_Component.ordMinute)(x.value1)(y.value1);
          if (v1 instanceof Data_Ordering.LT) {
              return Data_Ordering.LT.value;
          };
          if (v1 instanceof Data_Ordering.GT) {
              return Data_Ordering.GT.value;
          };
          var v2 = Data_Ord.compare(Data_Time_Component.ordSecond)(x.value2)(y.value2);
          if (v2 instanceof Data_Ordering.LT) {
              return Data_Ordering.LT.value;
          };
          if (v2 instanceof Data_Ordering.GT) {
              return Data_Ordering.GT.value;
          };
          return Data_Ord.compare(Data_Time_Component.ordMillisecond)(x.value3)(y.value3);
      };
  });
  var boundedTime = new Data_Bounded.Bounded(function () {
      return ordTime;
  }, new Time(Data_Bounded.bottom(Data_Time_Component.boundedHour), Data_Bounded.bottom(Data_Time_Component.boundedMinute), Data_Bounded.bottom(Data_Time_Component.boundedSecond), Data_Bounded.bottom(Data_Time_Component.boundedMillisecond)), new Time(Data_Bounded.top(Data_Time_Component.boundedHour), Data_Bounded.top(Data_Time_Component.boundedMinute), Data_Bounded.top(Data_Time_Component.boundedSecond), Data_Bounded.top(Data_Time_Component.boundedMillisecond)));
  var maxTime = timeToMillis(Data_Bounded.top(boundedTime));
  var minTime = timeToMillis(Data_Bounded.bottom(boundedTime));
  var adjust = function (dictDuration) {
      return function (d) {
          return function (t) {
              var tLength = timeToMillis(t);
              var d$prime = Data_Time_Duration.fromDuration(dictDuration)(d);
              var wholeDays = Data_Time_Duration.Days($$Math.floor(Data_Newtype.unwrap(Data_Time_Duration.newtypeMilliseconds)(d$prime) / 8.64e7));
              var msAdjust = Data_Semigroup.append(Data_Time_Duration.semigroupMilliseconds)(d$prime)(Data_Time_Duration.negateDuration(Data_Time_Duration.durationMilliseconds)(Data_Time_Duration.fromDuration(Data_Time_Duration.durationDays)(wholeDays)));
              var msAdjusted = Data_Semigroup.append(Data_Time_Duration.semigroupMilliseconds)(tLength)(msAdjust);
              var wrap = (function () {
                  var $112 = Data_Ord.greaterThan(Data_Time_Duration.ordMilliseconds)(msAdjusted)(maxTime);
                  if ($112) {
                      return 1.0;
                  };
                  var $113 = Data_Ord.lessThan(Data_Time_Duration.ordMilliseconds)(msAdjusted)(minTime);
                  if ($113) {
                      return -1.0;
                  };
                  return 0.0;
              })();
              return new Data_Tuple.Tuple(Data_Semigroup.append(Data_Time_Duration.semigroupDays)(wholeDays)(wrap), millisToTime(Data_Semigroup.append(Data_Time_Duration.semigroupMilliseconds)(msAdjusted)(8.64e7 * -wrap)));
          };
      };
  };
  exports["Time"] = Time;
  exports["hour"] = hour;
  exports["minute"] = minute;
  exports["second"] = second;
  exports["millisecond"] = millisecond;
  exports["adjust"] = adjust;
  exports["eqTime"] = eqTime;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.DateTime"] = $PS["Data.DateTime"] || {};
  var exports = $PS["Data.DateTime"];
  var $foreign = $PS["Data.DateTime"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Date = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Time = $PS["Data.Time"];
  var Data_Time_Component = $PS["Data.Time.Component"];
  var Data_Time_Duration = $PS["Data.Time.Duration"];                
  var DateTime = (function () {
      function DateTime(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      DateTime.create = function (value0) {
          return function (value1) {
              return new DateTime(value0, value1);
          };
      };
      return DateTime;
  })();
  var toRecord = function (v) {
      return {
          year: Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)),
          month: Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)),
          day: Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0)),
          hour: Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1)),
          minute: Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1)),
          second: Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1)),
          millisecond: Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1))
      };
  };
  var time = function (v) {
      return v.value1;
  };
  var date = function (v) {
      return v.value0;
  };                                                                                                                                                                                                       
  var adjust = function (dictDuration) {
      return function (d) {
          return function (dt) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)($foreign.adjustImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value)(Data_Time_Duration.fromDuration(dictDuration)(d))(toRecord(dt)))(function (rec) {
                  return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(DateTime.create)(Control_Bind.join(Data_Maybe.bindMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Date.exactDate)(Data_Enum.toEnum(Data_Date_Component.boundedEnumYear)(rec.year)))(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(rec.month)))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(rec.day)))))(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Time.Time.create)(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(rec.hour)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(rec.minute)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(rec.second)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(rec.millisecond)));
              });
          };
      };
  };
  exports["DateTime"] = DateTime;
  exports["date"] = date;
  exports["time"] = time;
  exports["adjust"] = adjust;
})(PS);
(function(exports) {
  "use strict";

  var createDateTime = function (y, m, d, h, mi, s, ms) {
    var dateTime = new Date(Date.UTC(y, m, d, h, mi, s, ms));
    if (y >= 0 && y < 100) {
      dateTime.setUTCFullYear(y);
    }
    return dateTime;
  };

  exports.fromDateTimeImpl = function (y, mo, d, h, mi, s, ms) {
    return createDateTime(y, mo - 1, d, h, mi, s, ms).getTime();
  };

  exports.toDateTimeImpl = function (ctor) {
    return function (instant) {
      var dt = new Date(instant);
      return ctor (dt.getUTCFullYear())(dt.getUTCMonth() + 1)(dt.getUTCDate())(dt.getUTCHours())(dt.getUTCMinutes())(dt.getUTCSeconds())(dt.getUTCMilliseconds());
    };
  };
})(PS["Data.DateTime.Instant"] = PS["Data.DateTime.Instant"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.DateTime.Instant"] = $PS["Data.DateTime.Instant"] || {};
  var exports = $PS["Data.DateTime.Instant"];
  var $foreign = $PS["Data.DateTime.Instant"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Date = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_DateTime = $PS["Data.DateTime"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Time = $PS["Data.Time"];
  var Data_Time_Component = $PS["Data.Time.Component"];
  var unInstant = function (v) {
      return v;
  };
  var toDateTime = (function () {
      var mkDateTime = function (y) {
          return function (mo) {
              return function (d) {
                  return function (h) {
                      return function (mi) {
                          return function (s) {
                              return function (ms) {
                                  return new Data_DateTime.DateTime(Data_Date.canonicalDate(y)(Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(mo)))(d), new Data_Time.Time(h, mi, s, ms));
                              };
                          };
                      };
                  };
              };
          };
      };
      return $foreign.toDateTimeImpl(mkDateTime);
  })();                                                
  var instant = function (v) {
      if (v >= -8.6399778816e15 && v <= 8.639977881599999e15) {
          return new Data_Maybe.Just(v);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.DateTime.Instant (line 44, column 1 - line 44, column 41): " + [ v.constructor.name ]);
  };
  var fromDateTime = function (v) {
      return $foreign.fromDateTimeImpl(Data_Date.year(v.value0), Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)), Data_Date.day(v.value0), Data_Time.hour(v.value1), Data_Time.minute(v.value1), Data_Time.second(v.value1), Data_Time.millisecond(v.value1));
  };
  var fromDate = function (d) {
      return $foreign.fromDateTimeImpl(Data_Date.year(d), Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(d)), Data_Date.day(d), Data_Bounded.bottom(Data_Time_Component.boundedHour), Data_Bounded.bottom(Data_Time_Component.boundedMinute), Data_Bounded.bottom(Data_Time_Component.boundedSecond), Data_Bounded.bottom(Data_Time_Component.boundedMillisecond));
  };
  exports["instant"] = instant;
  exports["unInstant"] = unInstant;
  exports["fromDateTime"] = fromDateTime;
  exports["fromDate"] = fromDate;
  exports["toDateTime"] = toDateTime;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Formatter.Internal"] = $PS["Data.Formatter.Internal"] || {};
  var exports = $PS["Data.Formatter.Internal"];
  var Data_Foldable = $PS["Data.Foldable"];
  var foldDigits = function (dictFoldable) {
      return Data_Foldable.foldl(dictFoldable)(function (acc) {
          return function (d) {
              return (acc * 10 | 0) + d | 0;
          };
      })(0);
  };
  exports["foldDigits"] = foldDigits;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.Pattern"] = $PS["Data.String.Pattern"] || {};
  var exports = $PS["Data.String.Pattern"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Pattern = function (x) {
      return x;
  };              
  var newtypePattern = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Pattern);
  exports["Pattern"] = Pattern;
  exports["newtypePattern"] = newtypePattern;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Text.Parsing.Parser.Pos"] = $PS["Text.Parsing.Parser.Pos"] || {};
  var exports = $PS["Text.Parsing.Parser.Pos"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_String_Pattern = $PS["Data.String.Pattern"];
  var updatePosString = function (pos$prime) {
      return function (str) {
          var updatePosChar = function (v) {
              return function (c) {
                  if (c === "\x0a") {
                      return {
                          line: v.line + 1 | 0,
                          column: 1
                      };
                  };
                  if (c === "\x0d") {
                      return {
                          line: v.line + 1 | 0,
                          column: 1
                      };
                  };
                  if (c === "\x09") {
                      return {
                          line: v.line,
                          column: (v.column + 8 | 0) - Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v.column - 1 | 0)(8) | 0
                      };
                  };
                  return {
                      line: v.line,
                      column: v.column + 1 | 0
                  };
              };
          };
          return Data_Foldable.foldl(Data_Foldable.foldableArray)(updatePosChar)(pos$prime)(Data_String_Common.split(Data_Newtype.wrap(Data_String_Pattern.newtypePattern)(""))(str));
      };
  }; 
  var initialPos = {
      line: 1,
      column: 1
  };
  exports["initialPos"] = initialPos;
  exports["updatePosString"] = updatePosString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Text.Parsing.Parser"] = $PS["Text.Parsing.Parser"] || {};
  var exports = $PS["Text.Parsing.Parser"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Alternative = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Either = $PS["Data.Either"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Text_Parsing_Parser_Pos = $PS["Text.Parsing.Parser.Pos"];                
  var ParseState = (function () {
      function ParseState(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      ParseState.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new ParseState(value0, value1, value2);
              };
          };
      };
      return ParseState;
  })();
  var ParseError = (function () {
      function ParseError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ParseError.create = function (value0) {
          return function (value1) {
              return new ParseError(value0, value1);
          };
      };
      return ParseError;
  })();
  var ParserT = function (x) {
      return x;
  }; 
  var parseErrorPosition = function (v) {
      return v.value1;
  };
  var parseErrorMessage = function (v) {
      return v.value0;
  };
  var newtypeParserT = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ParserT);
  var runParserT = function (dictMonad) {
      return function (s) {
          return function (p) {
              var initialState = new ParseState(s, Text_Parsing_Parser_Pos.initialPos, false);
              return Control_Monad_State_Trans.evalStateT(((dictMonad.Bind1()).Apply0()).Functor0())(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p)))(initialState);
          };
      };
  };
  var runParser = function (s) {
      var $90 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
      var $91 = runParserT(Data_Identity.monadIdentity)(s);
      return function ($92) {
          return $90($91($92));
      };
  };
  var monadTransParserT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      var $93 = Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(dictMonad));
      var $94 = Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonad);
      return function ($95) {
          return ParserT($93($94($95)));
      };
  });
  var monadThrowParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var monadStateParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(dictMonad));
  };
  var position = function (dictMonad) {
      return Control_Monad_State_Class.gets(monadStateParserT(dictMonad))(function (v) {
          return v.value1;
      });
  };
  var mapParserT = (function () {
      var $96 = Data_Newtype.over(newtypeParserT)(newtypeParserT)(ParserT);
      return function ($97) {
          return $96(Control_Monad_Except_Trans.mapExceptT(Control_Monad_State_Trans.mapStateT($97)));
      };
  })();
  var lazyParserT = new Control_Lazy.Lazy(function (f) {
      return Control_Lazy.defer(Control_Monad_State_Trans.lazyStateT)((function () {
          var $98 = Data_Newtype.unwrap(newtypeParserT);
          return function ($99) {
              return Control_Monad_Except_Trans.runExceptT($98(f($99)));
          };
      })());
  });                           
  var functorParserT = function (dictFunctor) {
      return Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(dictFunctor));
  };
  var failWithPosition = function (dictMonad) {
      return function (message) {
          return function (pos) {
              return Control_Monad_Error_Class.throwError(monadThrowParserT(dictMonad))(new ParseError(message, pos));
          };
      };
  };
  var bindParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var fail = function (dictMonad) {
      return function (message) {
          return Control_Bind.bindFlipped(bindParserT(dictMonad))(failWithPosition(dictMonad)(message))(position(dictMonad));
      };
  };
  var applyParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.applyExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var semigroupParserT = function (dictMonad) {
      return function (dictSemigroup) {
          return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyParserT(dictMonad))(Data_Semigroup.append(dictSemigroup)));
      };
  };
  var applicativeParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var monoidParserT = function (dictMonad) {
      return function (dictMonoid) {
          return new Data_Monoid.Monoid(function () {
              return semigroupParserT(dictMonad)(dictMonoid.Semigroup0());
          }, Control_Applicative.pure(applicativeParserT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
      };
  };
  var altParserT = function (dictMonad) {
      return new Control_Alt.Alt(function () {
          return functorParserT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, function (p1) {
          return function (p2) {
              return ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p1)))(new ParseState(v.value0, v.value1, false)))(function (v1) {
                      if (v1.value0 instanceof Data_Either.Left && !v1.value1.value2) {
                          return Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p2)))(v);
                      };
                      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value1));
                  });
              })));
          };
      });
  };
  var plusParserT = function (dictMonad) {
      return new Control_Plus.Plus(function () {
          return altParserT(dictMonad);
      }, fail(dictMonad)("No alternative"));
  };
  var alternativeParserT = function (dictMonad) {
      return new Control_Alternative.Alternative(function () {
          return applicativeParserT(dictMonad);
      }, function () {
          return plusParserT(dictMonad);
      });
  };
  exports["ParseError"] = ParseError;
  exports["parseErrorMessage"] = parseErrorMessage;
  exports["parseErrorPosition"] = parseErrorPosition;
  exports["ParseState"] = ParseState;
  exports["ParserT"] = ParserT;
  exports["runParser"] = runParser;
  exports["mapParserT"] = mapParserT;
  exports["fail"] = fail;
  exports["newtypeParserT"] = newtypeParserT;
  exports["lazyParserT"] = lazyParserT;
  exports["monoidParserT"] = monoidParserT;
  exports["functorParserT"] = functorParserT;
  exports["applyParserT"] = applyParserT;
  exports["applicativeParserT"] = applicativeParserT;
  exports["bindParserT"] = bindParserT;
  exports["monadStateParserT"] = monadStateParserT;
  exports["altParserT"] = altParserT;
  exports["plusParserT"] = plusParserT;
  exports["alternativeParserT"] = alternativeParserT;
  exports["monadTransParserT"] = monadTransParserT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Text.Parsing.Parser.Combinators"] = $PS["Text.Parsing.Parser.Combinators"] || {};
  var exports = $PS["Text.Parsing.Parser.Combinators"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];                
  var withErrorMessage = function (dictMonad) {
      return function (p) {
          return function (msg) {
              return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(p)(Text_Parsing_Parser.fail(dictMonad)("Expected " + msg));
          };
      };
  };
  var tryRethrow = function (dictMonad) {
      return function (p) {
          return Text_Parsing_Parser.ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
              return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(Text_Parsing_Parser.newtypeParserT)(p)))(v))(function (v1) {
                  if (v1.value0 instanceof Data_Either.Left) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(new Data_Either.Left(new Text_Parsing_Parser.ParseError(v1.value0.value0.value0, v.value1)), new Text_Parsing_Parser.ParseState(v1.value1.value0, v1.value1.value1, v.value2)));
                  };
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value1));
              });
          })));
      };
  };
  var $$try = function (dictMonad) {
      return function (p) {
          return Text_Parsing_Parser.ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
              return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(Text_Parsing_Parser.newtypeParserT)(p)))(v))(function (v1) {
                  if (v1.value0 instanceof Data_Either.Left) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, new Text_Parsing_Parser.ParseState(v1.value1.value0, v1.value1.value1, v.value2)));
                  };
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value1));
              });
          })));
      };
  };
  var option = function (dictMonad) {
      return function (a) {
          return function (p) {
              return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(p)(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(a));
          };
      };
  };
  var optionMaybe = function (dictMonad) {
      return function (p) {
          return option(dictMonad)(Data_Maybe.Nothing.value)(Data_Functor.map(Text_Parsing_Parser.functorParserT(((dictMonad.Bind1()).Apply0()).Functor0()))(Data_Maybe.Just.create)(p));
      };
  };
  var choice = function (dictFoldable) {
      return function (dictMonad) {
          return Data_Foldable.foldl(dictFoldable)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad)))(Control_Plus.empty(Text_Parsing_Parser.plusParserT(dictMonad)));
      };
  };
  exports["withErrorMessage"] = withErrorMessage;
  exports["option"] = option;
  exports["optionMaybe"] = optionMaybe;
  exports["try"] = $$try;
  exports["tryRethrow"] = tryRethrow;
  exports["choice"] = choice;
})(PS);
(function(exports) {
  "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator =
    typeof Symbol !== "undefined" &&
    Symbol != null &&
    typeof Symbol.iterator !== "undefined" &&
    typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt
      ? function (str) { return str.codePointAt(0); }
      : fallback;
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }
      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
  "use strict";

  exports.fromCharArray = function (a) {
    return a.join("");
  };

  exports.toCharArray = function (s) {
    return s.split("");
  };

  exports.singleton = function (c) {
    return c;
  };

  exports._charAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
        };
      };
    };
  };

  exports.length = function (s) {
    return s.length;
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports["_indexOf'"] = function (just) {
    return function (nothing) {
      return function (x) {
        return function (startAt) {
          return function (s) {
            if (startAt < 0 || startAt > s.length) return nothing;
            var i = s.indexOf(x, startAt);
            return i === -1 ? nothing : just(i);
          };
        };
      };
    };
  };

  exports._lastIndexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.lastIndexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function(exports) {
  "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.Unsafe"] = $PS["Data.String.Unsafe"] || {};
  var exports = $PS["Data.String.Unsafe"];
  var $foreign = $PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.CodeUnits"] = $PS["Data.String.CodeUnits"] || {};
  var exports = $PS["Data.String.CodeUnits"];
  var $foreign = $PS["Data.String.CodeUnits"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];                
  var uncons = function (v) {
      if (v === "") {
          return Data_Maybe.Nothing.value;
      };
      return new Data_Maybe.Just({
          head: Data_String_Unsafe.charAt(0)(v),
          tail: $foreign.drop(1)(v)
      });
  };                                                                                                  
  var lastIndexOf = $foreign["_lastIndexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var stripPrefix = function (v) {
      return function (str) {
          var v1 = indexOf(v)(str);
          if (v1 instanceof Data_Maybe.Just && v1.value0 === 0) {
              return Data_Maybe.Just.create($foreign.drop($foreign.length(v))(str));
          };
          return Data_Maybe.Nothing.value;
      };
  };
  var contains = function (pat) {
      var $16 = indexOf(pat);
      return function ($17) {
          return Data_Maybe.isJust($16($17));
      };
  };
  var charAt = $foreign["_charAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["stripPrefix"] = stripPrefix;
  exports["contains"] = contains;
  exports["charAt"] = charAt;
  exports["uncons"] = uncons;
  exports["indexOf"] = indexOf;
  exports["indexOf'"] = indexOf$prime;
  exports["lastIndexOf"] = lastIndexOf;
  exports["singleton"] = $foreign.singleton;
  exports["fromCharArray"] = $foreign.fromCharArray;
  exports["toCharArray"] = $foreign.toCharArray;
  exports["length"] = $foreign.length;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.CodePoints"] = $PS["Data.String.CodePoints"] || {};
  var exports = $PS["Data.String.CodePoints"];
  var $foreign = $PS["Data.String.CodePoints"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var unsurrogate = function (lead) {
      return function (trail) {
          return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
      };
  }; 
  var isTrail = function (cu) {
      return 56320 <= cu && cu <= 57343;
  };
  var isLead = function (cu) {
      return 55296 <= cu && cu <= 56319;
  };
  var uncons = function (s) {
      var v = Data_String_CodeUnits.length(s);
      if (v === 0) {
          return Data_Maybe.Nothing.value;
      };
      if (v === 1) {
          return new Data_Maybe.Just({
              head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
              tail: ""
          });
      };
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $21 = isLead(cu0) && isTrail(cu1);
      if ($21) {
          return new Data_Maybe.Just({
              head: unsurrogate(cu0)(cu1),
              tail: Data_String_CodeUnits.drop(2)(s)
          });
      };
      return new Data_Maybe.Just({
          head: cu0,
          tail: Data_String_CodeUnits.drop(1)(s)
      });
  };
  var unconsButWithTuple = function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return new Data_Tuple.Tuple(v.head, v.tail);
      })(uncons(s));
  };
  var toCodePointArrayFallback = function (s) {
      return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function (s) {
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;
      if ($25) {
          var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
          var $26 = isTrail(cu1);
          if ($26) {
              return unsurrogate(cu0)(cu1);
          };
          return cu0;
      };
      return cu0;
  };
  var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);
  var length = function ($52) {
      return Data_Array.length(toCodePointArray($52));
  };
  var lastIndexOf = function (p) {
      return function (s) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
              return length(Data_String_CodeUnits.take(i)(s));
          })(Data_String_CodeUnits.lastIndexOf(p)(s));
      };
  };
  var indexOf = function (p) {
      return function (s) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
              return length(Data_String_CodeUnits.take(i)(s));
          })(Data_String_CodeUnits.indexOf(p)(s));
      };
  };
  var fromCharCode = (function () {
      var $53 = Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar));
      return function ($54) {
          return Data_String_CodeUnits.singleton($53($54));
      };
  })();
  var singletonFallback = function (v) {
      if (v <= 65535) {
          return fromCharCode(v);
      };
      var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
      var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
      return fromCharCode(lead) + fromCharCode(trail);
  };                                                                          
  var singleton = $foreign["_singleton"](singletonFallback);
  var takeFallback = function (n) {
      return function (v) {
          if (n < 1) {
              return "";
          };
          var v1 = uncons(v);
          if (v1 instanceof Data_Maybe.Just) {
              return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
          };
          return v;
      };
  };
  var take = $foreign["_take"](takeFallback);
  var drop = function (n) {
      return function (s) {
          return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
      };
  };
  exports["singleton"] = singleton;
  exports["toCodePointArray"] = toCodePointArray;
  exports["length"] = length;
  exports["indexOf"] = indexOf;
  exports["lastIndexOf"] = lastIndexOf;
  exports["take"] = take;
  exports["drop"] = drop;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Text.Parsing.Parser.String"] = $PS["Text.Parsing.Parser.String"] || {};
  var exports = $PS["Text.Parsing.Parser.String"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_String_Pattern = $PS["Data.String.Pattern"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_Pos = $PS["Text.Parsing.Parser.Pos"];                
  var StringLike = function (drop, indexOf, $$null, uncons) {
      this.drop = drop;
      this.indexOf = indexOf;
      this["null"] = $$null;
      this.uncons = uncons;
  };
  var uncons = function (dict) {
      return dict.uncons;
  };
  var stringLikeString = new StringLike(Data_String_CodePoints.drop, Data_String_CodePoints.indexOf, Data_String_Common["null"], Data_String_CodeUnits.uncons);
  var $$null = function (dict) {
      return dict["null"];
  };
  var indexOf = function (dict) {
      return dict.indexOf;
  };
  var eof = function (dictStringLike) {
      return function (dictMonad) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
              return v.value0;
          }))(function (input) {
              return Control_Applicative.unless(Text_Parsing_Parser.applicativeParserT(dictMonad))($$null(dictStringLike)(input))(Text_Parsing_Parser.fail(dictMonad)("Expected EOF"));
          });
      };
  };
  var drop = function (dict) {
      return dict.drop;
  };
  var string = function (dictStringLike) {
      return function (dictMonad) {
          return function (str) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
                  return v.value0;
              }))(function (input) {
                  var v = indexOf(dictStringLike)(Data_Newtype.wrap(Data_String_Pattern.newtypePattern)(str))(input);
                  if (v instanceof Data_Maybe.Just && v.value0 === 0) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.modify_(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v1) {
                          return new Text_Parsing_Parser.ParseState(drop(dictStringLike)(Data_String_CodePoints.length(str))(input), Text_Parsing_Parser_Pos.updatePosString(v1.value1)(str), true);
                      }))(function () {
                          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(str);
                      });
                  };
                  return Text_Parsing_Parser.fail(dictMonad)("Expected " + Data_Show.show(Data_Show.showString)(str));
              });
          };
      };
  };
  var anyChar = function (dictStringLike) {
      return function (dictMonad) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
              return v.value0;
          }))(function (input) {
              var v = uncons(dictStringLike)(input);
              if (v instanceof Data_Maybe.Nothing) {
                  return Text_Parsing_Parser.fail(dictMonad)("Unexpected EOF");
              };
              if (v instanceof Data_Maybe.Just) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.modify_(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v1) {
                      return new Text_Parsing_Parser.ParseState(v.value0.tail, Text_Parsing_Parser_Pos.updatePosString(v1.value1)(Data_String_CodeUnits.singleton(v.value0.head)), true);
                  }))(function () {
                      return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v.value0.head);
                  });
              };
              throw new Error("Failed pattern match at Text.Parsing.Parser.String (line 56, column 3 - line 63, column 16): " + [ v.constructor.name ]);
          });
      };
  };
  var satisfy = function (dictStringLike) {
      return function (dictMonad) {
          return function (f) {
              return Text_Parsing_Parser_Combinators.tryRethrow(dictMonad)(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(anyChar(dictStringLike)(dictMonad))(function (c) {
                  var $52 = f(c);
                  if ($52) {
                      return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(c);
                  };
                  return Text_Parsing_Parser.fail(dictMonad)("Character '" + (Data_String_CodeUnits.singleton(c) + "' did not satisfy predicate"));
              }));
          };
      };
  };
  var $$char = function (dictStringLike) {
      return function (dictMonad) {
          return function (c) {
              return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(satisfy(dictStringLike)(dictMonad)(function (v) {
                  return v === c;
              }))(Data_Show.show(Data_Show.showChar)(c));
          };
      };
  };
  var noneOf = function (dictStringLike) {
      return function (dictMonad) {
          return function (ss) {
              return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(satisfy(dictStringLike)(dictMonad)(Data_Function.flip(Data_Foldable.notElem(Data_Foldable.foldableArray)(Data_Eq.eqChar))(ss)))("none of " + Data_Show.show(Data_Show.showArray(Data_Show.showChar))(ss));
          };
      };
  };
  exports["eof"] = eof;
  exports["string"] = string;
  exports["char"] = $$char;
  exports["noneOf"] = noneOf;
  exports["stringLikeString"] = stringLikeString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Formatter.Parser.Utils"] = $PS["Data.Formatter.Parser.Utils"] || {};
  var exports = $PS["Data.Formatter.Parser.Utils"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Show = $PS["Data.Show"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];                
  var printPosition = function (v) {
      return "(line " + (Data_Show.show(Data_Show.showInt)(v.line) + (", col " + (Data_Show.show(Data_Show.showInt)(v.column) + ")")));
  };
  var printError = function (err) {
      return Text_Parsing_Parser.parseErrorMessage(err) + (" " + printPosition(Text_Parsing_Parser.parseErrorPosition(err)));
  };
  var runP = function (dictStringLike) {
      return function (p) {
          return function (s) {
              return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(printError)(Text_Parsing_Parser.runParser(s)(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(p)(Text_Parsing_Parser_String.eof(dictStringLike)(Data_Identity.monadIdentity))));
          };
      };
  };
  var oneOfAs = function (dictFunctor) {
      return function (dictFoldable) {
          return function (dictMonad) {
              return function (p) {
                  return function (xs) {
                      return Text_Parsing_Parser_Combinators.choice(dictFoldable)(dictMonad)(Data_Functor.map(dictFunctor)(function (v) {
                          return Data_Functor.voidLeft(Text_Parsing_Parser.functorParserT(((dictMonad.Bind1()).Apply0()).Functor0()))(p(v.value0))(v.value1);
                      })(xs));
                  };
              };
          };
      };
  };
  exports["oneOfAs"] = oneOfAs;
  exports["runP"] = runP;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Formatter.Parser.Number"] = $PS["Data.Formatter.Parser.Number"] || {};
  var exports = $PS["Data.Formatter.Parser.Number"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Formatter_Parser_Utils = $PS["Data.Formatter.Parser.Utils"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];                
  var parseDigit = function (dictMonad) {
      return function (dictStringLike) {
          return Text_Parsing_Parser_Combinators["try"](dictMonad)(Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)(Text_Parsing_Parser_String["char"](dictStringLike)(dictMonad))([ new Data_Tuple.Tuple("0", 0), new Data_Tuple.Tuple("1", 1), new Data_Tuple.Tuple("2", 2), new Data_Tuple.Tuple("3", 3), new Data_Tuple.Tuple("4", 4), new Data_Tuple.Tuple("5", 5), new Data_Tuple.Tuple("6", 6), new Data_Tuple.Tuple("7", 7), new Data_Tuple.Tuple("8", 8), new Data_Tuple.Tuple("9", 9) ]));
      };
  };
  exports["parseDigit"] = parseDigit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Formatter.DateTime"] = $PS["Data.Formatter.DateTime"] || {};
  var exports = $PS["Data.Formatter.DateTime"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Control_Monad_State = $PS["Control.Monad.State"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Date = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_DateTime = $PS["Data.DateTime"];
  var Data_DateTime_Instant = $PS["Data.DateTime.Instant"];
  var Data_Either = $PS["Data.Either"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Formatter_Internal = $PS["Data.Formatter.Internal"];
  var Data_Formatter_Parser_Number = $PS["Data.Formatter.Parser.Number"];
  var Data_Formatter_Parser_Utils = $PS["Data.Formatter.Parser.Utils"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Int = $PS["Data.Int"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_Time = $PS["Data.Time"];
  var Data_Time_Component = $PS["Data.Time.Component"];
  var Data_Time_Duration = $PS["Data.Time.Duration"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];                
  var AM = (function () {
      function AM() {

      };
      AM.value = new AM();
      return AM;
  })();
  var PM = (function () {
      function PM() {

      };
      PM.value = new PM();
      return PM;
  })();
  var YearFull = (function () {
      function YearFull() {

      };
      YearFull.value = new YearFull();
      return YearFull;
  })();
  var YearTwoDigits = (function () {
      function YearTwoDigits() {

      };
      YearTwoDigits.value = new YearTwoDigits();
      return YearTwoDigits;
  })();
  var YearAbsolute = (function () {
      function YearAbsolute() {

      };
      YearAbsolute.value = new YearAbsolute();
      return YearAbsolute;
  })();
  var MonthFull = (function () {
      function MonthFull() {

      };
      MonthFull.value = new MonthFull();
      return MonthFull;
  })();
  var MonthShort = (function () {
      function MonthShort() {

      };
      MonthShort.value = new MonthShort();
      return MonthShort;
  })();
  var MonthTwoDigits = (function () {
      function MonthTwoDigits() {

      };
      MonthTwoDigits.value = new MonthTwoDigits();
      return MonthTwoDigits;
  })();
  var DayOfMonthTwoDigits = (function () {
      function DayOfMonthTwoDigits() {

      };
      DayOfMonthTwoDigits.value = new DayOfMonthTwoDigits();
      return DayOfMonthTwoDigits;
  })();
  var DayOfMonth = (function () {
      function DayOfMonth() {

      };
      DayOfMonth.value = new DayOfMonth();
      return DayOfMonth;
  })();
  var UnixTimestamp = (function () {
      function UnixTimestamp() {

      };
      UnixTimestamp.value = new UnixTimestamp();
      return UnixTimestamp;
  })();
  var DayOfWeek = (function () {
      function DayOfWeek() {

      };
      DayOfWeek.value = new DayOfWeek();
      return DayOfWeek;
  })();
  var DayOfWeekName = (function () {
      function DayOfWeekName() {

      };
      DayOfWeekName.value = new DayOfWeekName();
      return DayOfWeekName;
  })();
  var DayOfWeekNameShort = (function () {
      function DayOfWeekNameShort() {

      };
      DayOfWeekNameShort.value = new DayOfWeekNameShort();
      return DayOfWeekNameShort;
  })();
  var Hours24 = (function () {
      function Hours24() {

      };
      Hours24.value = new Hours24();
      return Hours24;
  })();
  var Hours12 = (function () {
      function Hours12() {

      };
      Hours12.value = new Hours12();
      return Hours12;
  })();
  var Meridiem = (function () {
      function Meridiem() {

      };
      Meridiem.value = new Meridiem();
      return Meridiem;
  })();
  var Minutes = (function () {
      function Minutes() {

      };
      Minutes.value = new Minutes();
      return Minutes;
  })();
  var MinutesTwoDigits = (function () {
      function MinutesTwoDigits() {

      };
      MinutesTwoDigits.value = new MinutesTwoDigits();
      return MinutesTwoDigits;
  })();
  var Seconds = (function () {
      function Seconds() {

      };
      Seconds.value = new Seconds();
      return Seconds;
  })();
  var SecondsTwoDigits = (function () {
      function SecondsTwoDigits() {

      };
      SecondsTwoDigits.value = new SecondsTwoDigits();
      return SecondsTwoDigits;
  })();
  var Milliseconds = (function () {
      function Milliseconds() {

      };
      Milliseconds.value = new Milliseconds();
      return Milliseconds;
  })();
  var MillisecondsShort = (function () {
      function MillisecondsShort() {

      };
      MillisecondsShort.value = new MillisecondsShort();
      return MillisecondsShort;
  })();
  var MillisecondsTwoDigits = (function () {
      function MillisecondsTwoDigits() {

      };
      MillisecondsTwoDigits.value = new MillisecondsTwoDigits();
      return MillisecondsTwoDigits;
  })();
  var Placeholder = (function () {
      function Placeholder(value0) {
          this.value0 = value0;
      };
      Placeholder.create = function (value0) {
          return new Placeholder(value0);
      };
      return Placeholder;
  })();
  var validateRange = function (min) {
      return function (max) {
          return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Either.bindEither))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Either.monadEither)))(function (v) {
              return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Data_Either.monadEither)((function () {
                  var $92 = v.num < min || v.num > max;
                  if ($92) {
                      return Data_Either.Left.create("Number is out of range [ " + (Data_Show.show(Data_Show.showInt)(min) + (", " + (Data_Show.show(Data_Show.showInt)(max) + " ]"))));
                  };
                  return new Data_Either.Right(Data_Unit.unit);
              })());
          });
      };
  };
  var validAccum = function (v) {
      if (v.hour instanceof Data_Maybe.Just && v.hour.value0 === 24) {
          return Data_Foldable.for_(Data_Either.applicativeEither)(Data_Foldable.foldableArray)([ v.minute, v.second, v.millisecond ])(function (val) {
              return Control_Applicative.when(Data_Either.applicativeEither)(Data_Maybe.fromMaybe(0)(val) > 0)(new Data_Either.Left("When hour is 24, other time components must be 0"));
          });
      };
      return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Unit.unit);
  };
  var takeSome = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return function (v1) {
                  if (v === 0) {
                      return Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value);
                  };
                  return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v1))(Control_Lazy.defer(dictLazy)(function (v3) {
                      return takeMany(dictAlternative)(dictLazy)(v - 1 | 0)(v1);
                  }));
              };
          };
      };
  };
  var takeMany = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return function (v1) {
                  if (v === 0) {
                      return Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value);
                  };
                  return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(takeSome(dictAlternative)(dictLazy)(v)(v1))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
              };
          };
      };
  };
  var printShortMonth = function (v) {
      if (v instanceof Data_Date_Component.January) {
          return "Jan";
      };
      if (v instanceof Data_Date_Component.February) {
          return "Feb";
      };
      if (v instanceof Data_Date_Component.March) {
          return "Mar";
      };
      if (v instanceof Data_Date_Component.April) {
          return "Apr";
      };
      if (v instanceof Data_Date_Component.May) {
          return "May";
      };
      if (v instanceof Data_Date_Component.June) {
          return "Jun";
      };
      if (v instanceof Data_Date_Component.July) {
          return "Jul";
      };
      if (v instanceof Data_Date_Component.August) {
          return "Aug";
      };
      if (v instanceof Data_Date_Component.September) {
          return "Sep";
      };
      if (v instanceof Data_Date_Component.October) {
          return "Oct";
      };
      if (v instanceof Data_Date_Component.November) {
          return "Nov";
      };
      if (v instanceof Data_Date_Component.December) {
          return "Dec";
      };
      throw new Error("Failed pattern match at Data.Formatter.DateTime (line 482, column 19 - line 494, column 21): " + [ v.constructor.name ]);
  };                                                                                                                        
  var placeholderContent = Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Array.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Text_Parsing_Parser_String.noneOf(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)(Data_String_CodeUnits.toCharArray("YMDEHhamsS"))))(Data_String_CodeUnits.fromCharArray);
  var parseShortMonth = function (dictMonad) {
      return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)((function () {
          var $435 = Text_Parsing_Parser_Combinators["try"](dictMonad);
          var $436 = Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad);
          return function ($437) {
              return $435($436($437));
          };
      })())([ new Data_Tuple.Tuple("Jan", Data_Date_Component.January.value), new Data_Tuple.Tuple("Feb", Data_Date_Component.February.value), new Data_Tuple.Tuple("Mar", Data_Date_Component.March.value), new Data_Tuple.Tuple("Apr", Data_Date_Component.April.value), new Data_Tuple.Tuple("May", Data_Date_Component.May.value), new Data_Tuple.Tuple("Jun", Data_Date_Component.June.value), new Data_Tuple.Tuple("Jul", Data_Date_Component.July.value), new Data_Tuple.Tuple("Aug", Data_Date_Component.August.value), new Data_Tuple.Tuple("Sep", Data_Date_Component.September.value), new Data_Tuple.Tuple("Oct", Data_Date_Component.October.value), new Data_Tuple.Tuple("Nov", Data_Date_Component.November.value), new Data_Tuple.Tuple("Dec", Data_Date_Component.December.value) ]);
  };
  var parseMonth = function (dictMonad) {
      return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)((function () {
          var $438 = Text_Parsing_Parser_Combinators["try"](dictMonad);
          var $439 = Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad);
          return function ($440) {
              return $438($439($440));
          };
      })())([ new Data_Tuple.Tuple("January", Data_Date_Component.January.value), new Data_Tuple.Tuple("February", Data_Date_Component.February.value), new Data_Tuple.Tuple("March", Data_Date_Component.March.value), new Data_Tuple.Tuple("April", Data_Date_Component.April.value), new Data_Tuple.Tuple("May", Data_Date_Component.May.value), new Data_Tuple.Tuple("June", Data_Date_Component.June.value), new Data_Tuple.Tuple("July", Data_Date_Component.July.value), new Data_Tuple.Tuple("August", Data_Date_Component.August.value), new Data_Tuple.Tuple("September", Data_Date_Component.September.value), new Data_Tuple.Tuple("October", Data_Date_Component.October.value), new Data_Tuple.Tuple("November", Data_Date_Component.November.value), new Data_Tuple.Tuple("December", Data_Date_Component.December.value) ]);
  };
  var parseMeridiem = function (dictMonad) {
      return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)((function () {
          var $441 = Text_Parsing_Parser_Combinators["try"](dictMonad);
          var $442 = Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad);
          return function ($443) {
              return $441($442($443));
          };
      })())([ new Data_Tuple.Tuple("am", AM.value), new Data_Tuple.Tuple("AM", AM.value), new Data_Tuple.Tuple("pm", PM.value), new Data_Tuple.Tuple("PM", PM.value) ]);
  };
  var $$parseInt = function (dictMonad) {
      return function (maxLength) {
          return function (validators) {
              return function (errMsg) {
                  return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(takeSome(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(maxLength)(Data_Formatter_Parser_Number.parseDigit(dictMonad)(Text_Parsing_Parser_String.stringLikeString)))(function (ds) {
                      var num = Data_Formatter_Internal.foldDigits(Data_List_Types.foldableList)(ds);
                      var length = Data_List.length(ds);
                      var v = Control_Monad_Reader_Trans.runReaderT(validators)({
                          length: length,
                          num: num,
                          maxLength: maxLength
                      });
                      if (v instanceof Data_Either.Left) {
                          return Text_Parsing_Parser.fail(dictMonad)(errMsg + ("(" + (v.value0 + ")")));
                      };
                      if (v instanceof Data_Either.Right) {
                          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(num);
                      };
                      throw new Error("Failed pattern match at Data.Formatter.DateTime (line 336, column 3 - line 338, column 23): " + [ v.constructor.name ]);
                  });
              };
          };
      };
  };
  var parseSignedInt = function (dictMonad) {
      return function (maxLength) {
          return function (validators) {
              return function (errMsg) {
                  return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Data_Functor.map(Text_Parsing_Parser.functorParserT(((dictMonad.Bind1()).Apply0()).Functor0()))(Data_Maybe.isJust)(Text_Parsing_Parser_Combinators.optionMaybe(dictMonad)(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("-"))))(function (isNegative) {
                      return Data_Functor.map(Text_Parsing_Parser.functorParserT(((dictMonad.Bind1()).Apply0()).Functor0()))((function () {
                          if (isNegative) {
                              return Data_Ring.negate(Data_Ring.ringInt);
                          };
                          return Control_Category.identity(Control_Category.categoryFn);
                      })())($$parseInt(dictMonad)(maxLength)(validators)(errMsg));
                  });
              };
          };
      };
  };
  var parseDayOfWeekNameShort = function (dictMonad) {
      return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)((function () {
          var $444 = Text_Parsing_Parser_Combinators["try"](dictMonad);
          var $445 = Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad);
          return function ($446) {
              return $444($445($446));
          };
      })())([ new Data_Tuple.Tuple("Mon", Data_Date_Component.Monday.value), new Data_Tuple.Tuple("Tue", Data_Date_Component.Tuesday.value), new Data_Tuple.Tuple("Wed", Data_Date_Component.Wednesday.value), new Data_Tuple.Tuple("Thu", Data_Date_Component.Thursday.value), new Data_Tuple.Tuple("Fri", Data_Date_Component.Friday.value), new Data_Tuple.Tuple("Sat", Data_Date_Component.Saturday.value), new Data_Tuple.Tuple("Sun", Data_Date_Component.Sunday.value) ]);
  };
  var parseDayOfWeekName = function (dictMonad) {
      return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)((function () {
          var $447 = Text_Parsing_Parser_Combinators["try"](dictMonad);
          var $448 = Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad);
          return function ($449) {
              return $447($448($449));
          };
      })())([ new Data_Tuple.Tuple("Monday", Data_Date_Component.Monday.value), new Data_Tuple.Tuple("Tuesday", Data_Date_Component.Tuesday.value), new Data_Tuple.Tuple("Wednesday", Data_Date_Component.Wednesday.value), new Data_Tuple.Tuple("Thursday", Data_Date_Component.Thursday.value), new Data_Tuple.Tuple("Friday", Data_Date_Component.Friday.value), new Data_Tuple.Tuple("Saturday", Data_Date_Component.Saturday.value), new Data_Tuple.Tuple("Sunday", Data_Date_Component.Sunday.value) ]);
  };
  var padSingleDigit = function (i) {
      if (i < 0) {
          return "-" + padSingleDigit(-i | 0);
      };
      if (i < 10) {
          return "0" + Data_Show.show(Data_Show.showInt)(i);
      };
      if (Data_Boolean.otherwise) {
          return Data_Show.show(Data_Show.showInt)(i);
      };
      throw new Error("Failed pattern match at Data.Formatter.DateTime (line 192, column 1 - line 192, column 30): " + [ i.constructor.name ]);
  };
  var padQuadrupleDigit = function (i) {
      if (i < 0) {
          return "-" + padQuadrupleDigit(-i | 0);
      };
      if (i < 10) {
          return "000" + Data_Show.show(Data_Show.showInt)(i);
      };
      if (i < 100) {
          return "00" + Data_Show.show(Data_Show.showInt)(i);
      };
      if (i < 1000) {
          return "0" + Data_Show.show(Data_Show.showInt)(i);
      };
      if (Data_Boolean.otherwise) {
          return Data_Show.show(Data_Show.showInt)(i);
      };
      throw new Error("Failed pattern match at Data.Formatter.DateTime (line 205, column 1 - line 205, column 33): " + [ i.constructor.name ]);
  };
  var padDoubleDigit = function (i) {
      if (i < 0) {
          return "-" + padDoubleDigit(-i | 0);
      };
      if (i < 10) {
          return "00" + Data_Show.show(Data_Show.showInt)(i);
      };
      if (i < 100) {
          return "0" + Data_Show.show(Data_Show.showInt)(i);
      };
      if (Data_Boolean.otherwise) {
          return Data_Show.show(Data_Show.showInt)(i);
      };
      throw new Error("Failed pattern match at Data.Formatter.DateTime (line 198, column 1 - line 198, column 30): " + [ i.constructor.name ]);
  };
  var initialAccum = {
      year: Data_Maybe.Nothing.value,
      month: Data_Maybe.Nothing.value,
      day: Data_Maybe.Nothing.value,
      hour: Data_Maybe.Nothing.value,
      minute: Data_Maybe.Nothing.value,
      second: Data_Maybe.Nothing.value,
      millisecond: Data_Maybe.Nothing.value,
      meridiem: Data_Maybe.Nothing.value
  };                          
  var formatterCommandParser = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(Data_Identity.monadIdentity)((function () {
      var $450 = Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity);
      var $451 = Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity);
      return function ($452) {
          return $450($451($452));
      };
  })())([ new Data_Tuple.Tuple("YYYY", YearFull.value), new Data_Tuple.Tuple("YY", YearTwoDigits.value), new Data_Tuple.Tuple("Y", YearAbsolute.value), new Data_Tuple.Tuple("MMMM", MonthFull.value), new Data_Tuple.Tuple("MMM", MonthShort.value), new Data_Tuple.Tuple("MM", MonthTwoDigits.value), new Data_Tuple.Tuple("DD", DayOfMonthTwoDigits.value), new Data_Tuple.Tuple("D", DayOfMonth.value), new Data_Tuple.Tuple("E", DayOfWeek.value), new Data_Tuple.Tuple("X", UnixTimestamp.value), new Data_Tuple.Tuple("dddd", DayOfWeekName.value), new Data_Tuple.Tuple("ddd", DayOfWeekNameShort.value), new Data_Tuple.Tuple("HH", Hours24.value), new Data_Tuple.Tuple("hh", Hours12.value), new Data_Tuple.Tuple("a", Meridiem.value), new Data_Tuple.Tuple("mm", MinutesTwoDigits.value), new Data_Tuple.Tuple("m", Minutes.value), new Data_Tuple.Tuple("ss", SecondsTwoDigits.value), new Data_Tuple.Tuple("s", Seconds.value), new Data_Tuple.Tuple("SSS", Milliseconds.value), new Data_Tuple.Tuple("SS", MillisecondsTwoDigits.value), new Data_Tuple.Tuple("S", MillisecondsShort.value) ]))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Placeholder.create)(placeholderContent));
  var formatYearTwoDigits = function (i) {
      var dateString = Data_Show.show(Data_Show.showInt)(Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt)(i));
      var dateLength = Data_String_CodePoints.length(dateString);
      if (dateLength === 1) {
          return "0" + dateString;
      };
      if (dateLength === 2) {
          return dateString;
      };
      return Data_String_CodePoints.drop(dateLength - 2 | 0)(dateString);
  };
  var formatParser = Data_List.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(formatterCommandParser);
  var parseFormatString = Data_Formatter_Parser_Utils.runP(Text_Parsing_Parser_String.stringLikeString)(formatParser);
  var fix12 = function (h) {
      var $394 = h === 0;
      if ($394) {
          return 12;
      };
      return h;
  };
  var formatCommand = function (v) {
      return function (v1) {
          if (v1 instanceof YearFull) {
              return padQuadrupleDigit(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)));
          };
          if (v1 instanceof YearTwoDigits) {
              return formatYearTwoDigits(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)));
          };
          if (v1 instanceof YearAbsolute) {
              return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)));
          };
          if (v1 instanceof MonthFull) {
              return Data_Show.show(Data_Date_Component.showMonth)(Data_Date.month(v.value0));
          };
          if (v1 instanceof MonthShort) {
              return printShortMonth(Data_Date.month(v.value0));
          };
          if (v1 instanceof MonthTwoDigits) {
              return padSingleDigit(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)));
          };
          if (v1 instanceof DayOfMonthTwoDigits) {
              return padSingleDigit(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0)));
          };
          if (v1 instanceof DayOfMonth) {
              return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0)));
          };
          if (v1 instanceof UnixTimestamp) {
              return Data_Show.show(Data_Show.showInt)(Data_Int.floor((function (v2) {
                  return v2 / 1000.0;
              })(Data_Newtype.unwrap(Data_Time_Duration.newtypeMilliseconds)(Data_DateTime_Instant.unInstant(Data_DateTime_Instant.fromDateTime(v))))));
          };
          if (v1 instanceof DayOfWeek) {
              return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumWeekday)(Data_Date.weekday(v.value0)));
          };
          if (v1 instanceof DayOfWeekName) {
              return Data_Show.show(Data_Date_Component.showWeekday)(Data_Date.weekday(v.value0));
          };
          if (v1 instanceof DayOfWeekNameShort) {
              return Data_String_CodePoints.take(3)(Data_Show.show(Data_Date_Component.showWeekday)(Data_Date.weekday(v.value0)));
          };
          if (v1 instanceof Hours24) {
              return padSingleDigit(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1)));
          };
          if (v1 instanceof Hours12) {
              return padSingleDigit(fix12(Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1)))(12)));
          };
          if (v1 instanceof Meridiem) {
              var $397 = Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1)) >= 12;
              if ($397) {
                  return "PM";
              };
              return "AM";
          };
          if (v1 instanceof Minutes) {
              return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1)));
          };
          if (v1 instanceof MinutesTwoDigits) {
              return padSingleDigit(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1)));
          };
          if (v1 instanceof Seconds) {
              return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1)));
          };
          if (v1 instanceof SecondsTwoDigits) {
              return padSingleDigit(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1)));
          };
          if (v1 instanceof Milliseconds) {
              return padDoubleDigit(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1)));
          };
          if (v1 instanceof MillisecondsShort) {
              return Data_Show.show(Data_Show.showInt)((function (v2) {
                  return Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v2)(100);
              })(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1))));
          };
          if (v1 instanceof MillisecondsTwoDigits) {
              return padSingleDigit((function (v2) {
                  return Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v2)(10);
              })(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1))));
          };
          if (v1 instanceof Placeholder) {
              return v1.value0;
          };
          throw new Error("Failed pattern match at Data.Formatter.DateTime (line 167, column 38 - line 190, column 20): " + [ v1.constructor.name ]);
      };
  };
  var format = function (f) {
      return function (d) {
          return Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(formatCommand(d))(f);
      };
  };
  var formatDateTime = function (pattern) {
      return function (datetime) {
          return Data_Functor.mapFlipped(Data_Either.functorEither)(parseFormatString(pattern))(function (v) {
              return format(v)(datetime);
          });
      };
  };
  var exactLength = Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Either.bindEither))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Either.monadEither)))(function (v) {
      return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Data_Either.monadEither)((function () {
          var $402 = v.maxLength !== v.length;
          if ($402) {
              return Data_Either.Left.create("Expected " + (Data_Show.show(Data_Show.showInt)(v.maxLength) + (" digits but got " + Data_Show.show(Data_Show.showInt)(v.length))));
          };
          return new Data_Either.Right(Data_Unit.unit);
      })());
  });
  var unformatCommandParser = (function () {
      var modifyWithParser = function (f) {
          return function (p) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(p)(function (v) {
                  return Control_Monad_Trans_Class.lift(Text_Parsing_Parser.monadTransParserT)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(Data_Function.flip(f)(new Data_Maybe.Just(v))));
              });
          };
      };
      return function (v) {
          if (v instanceof YearFull) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          year: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second
                      };
                  };
              })(parseSignedInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(4)(exactLength)("Incorrect full year"));
          };
          if (v instanceof YearTwoDigits) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          year: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second
                      };
                  };
              })(parseSignedInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(exactLength)("Incorrect 2-digit year"));
          };
          if (v instanceof YearAbsolute) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          year: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second
                      };
                  };
              })(Control_Apply.lift2(Text_Parsing_Parser.applyParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Data_Semiring.mul(Data_Semiring.semiringInt))(Text_Parsing_Parser_Combinators.option(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(1)(Text_Parsing_Parser_Combinators["try"](Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))("-"))(Data_Function["const"](-1 | 0)))))(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_List.some(Text_Parsing_Parser.alternativeParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Text_Parsing_Parser.lazyParserT)(Data_Formatter_Parser_Number.parseDigit(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.stringLikeString)))(Data_Formatter_Internal.foldDigits(Data_List_Types.foldableList))));
          };
          if (v instanceof MonthFull) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          month: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth))(parseMonth(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));
          };
          if (v instanceof MonthShort) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          month: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth))(parseShortMonth(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));
          };
          if (v instanceof MonthTwoDigits) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          month: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(1)(12))(exactLength))("Incorrect 2-digit month"));
          };
          if (v instanceof DayOfMonthTwoDigits) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          day: v2,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(1)(31))(exactLength))("Incorrect day of month"));
          };
          if (v instanceof DayOfMonth) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          day: v2,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(validateRange(1)(31))("Incorrect day of month"));
          };
          if (v instanceof UnixTimestamp) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Formatter_Internal.foldDigits(Data_List_Types.foldableList))(Data_List.some(Text_Parsing_Parser.alternativeParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Text_Parsing_Parser.lazyParserT)(Data_Formatter_Parser_Number.parseDigit(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.stringLikeString))))(function (s) {
                  var v1 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime_Instant.toDateTime)(Data_DateTime_Instant.instant(Data_Time_Duration.Milliseconds(1000.0 * Data_Int.toNumber(s))));
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Text_Parsing_Parser.fail(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))("Incorrect timestamp");
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      return Control_Monad_Trans_Class.lift(Text_Parsing_Parser.monadTransParserT)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))({
                          year: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v1.value0.value0))),
                          month: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v1.value0.value0))),
                          day: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v1.value0.value0))),
                          hour: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v1.value0.value1))),
                          minute: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v1.value0.value1))),
                          second: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v1.value0.value1))),
                          millisecond: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v1.value0.value1))),
                          meridiem: Data_Maybe.Nothing.value
                      }));
                  };
                  throw new Error("Failed pattern match at Data.Formatter.DateTime (line 362, column 5 - line 373, column 10): " + [ v1.constructor.name ]);
              });
          };
          if (v instanceof DayOfWeek) {
              return Data_Functor["void"](Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(1)(validateRange(1)(7))("Incorrect day of week"));
          };
          if (v instanceof DayOfWeekName) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          day: v2,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumWeekday))(parseDayOfWeekName(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));
          };
          if (v instanceof DayOfWeekNameShort) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          day: v2,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumWeekday))(parseDayOfWeekNameShort(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));
          };
          if (v instanceof Hours24) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          hour: v2,
                          day: v1.day,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(24))(exactLength))("Incorrect 24 hour"));
          };
          if (v instanceof Hours12) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          hour: v2,
                          day: v1.day,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(12))(exactLength))("Incorrect 12 hour"));
          };
          if (v instanceof Meridiem) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          meridiem: v2,
                          day: v1.day,
                          hour: v1.hour,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(parseMeridiem(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)));
          };
          if (v instanceof MinutesTwoDigits) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          minute: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(59))(exactLength))("Incorrect 2-digit minute"));
          };
          if (v instanceof Minutes) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          minute: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(validateRange(0)(59))("Incorrect minute"));
          };
          if (v instanceof SecondsTwoDigits) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          second: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(59))(exactLength))("Incorrect 2-digit second"));
          };
          if (v instanceof Seconds) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          second: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(validateRange(0)(59))("Incorrect second"));
          };
          if (v instanceof Milliseconds) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          millisecond: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(3)(exactLength)("Incorrect millisecond"));
          };
          if (v instanceof Placeholder) {
              return Data_Functor["void"](Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(v.value0));
          };
          if (v instanceof MillisecondsShort) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          millisecond: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(1)(exactLength)("Incorrect 1-digit millisecond"))(function (v1) {
                  return v1 * 100 | 0;
              }));
          };
          if (v instanceof MillisecondsTwoDigits) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          millisecond: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(exactLength)("Incorrect 2-digit millisecond"))(function (v1) {
                  return v1 * 10 | 0;
              }));
          };
          throw new Error("Failed pattern match at Data.Formatter.DateTime (line 341, column 25 - line 399, column 74): " + [ v.constructor.name ]);
      };
  })();
  var adjustMeridiem = function (v) {
      return function (v1) {
          if (v instanceof Data_Maybe.Just && (v.value0 instanceof AM && v1 === 12)) {
              return 0;
          };
          if (v instanceof Data_Maybe.Just && (v.value0 instanceof PM && v1 === 12)) {
              return 12;
          };
          if (v instanceof Data_Maybe.Just && v.value0 instanceof PM) {
              return v1 + 12 | 0;
          };
          if (v instanceof Data_Maybe.Just && v.value0 instanceof AM) {
              return v1;
          };
          if (v instanceof Data_Maybe.Nothing && v1 === 24) {
              return 0;
          };
          if (v instanceof Data_Maybe.Nothing) {
              return v1;
          };
          throw new Error("Failed pattern match at Data.Formatter.DateTime (line 279, column 1 - line 279, column 44): " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var adjustDay = function (v) {
      return function (n) {
          if (v instanceof Data_Maybe.Just && v.value0 === 24) {
              return n + 1 | 0;
          };
          return n;
      };
  };
  var unformatAccumToDateTime = function (a) {
      return Control_Apply.applySecond(Data_Either.applyEither)(validAccum(a))(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_DateTime.DateTime.create)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_Date.canonicalDate)(Data_Maybe.maybe(new Data_Either.Left("Incorrect year"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Date_Component.boundedEnumYear)(Data_Maybe.fromMaybe(0)(a.year)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect month"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(Data_Maybe.fromMaybe(1)(a.month)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect day"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(adjustDay(a.hour)(Data_Maybe.fromMaybe(1)(a.day)))))))(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_Time.Time.create)(Data_Maybe.maybe(new Data_Either.Left("Incorrect hour"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(Data_Maybe.fromMaybe(0)(Data_Functor.map(Data_Maybe.functorMaybe)(adjustMeridiem(a.meridiem))(a.hour))))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect minute"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(Data_Maybe.fromMaybe(0)(a.minute)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect second"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(Data_Maybe.fromMaybe(0)(a.second)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect millisecond"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Maybe.fromMaybe(0)(a.millisecond))))));
  };
  var unformatParser = function (dictMonad) {
      return function (f) {
          var unState = function (dictMonad1) {
              return function (s) {
                  var v = Control_Monad_State.runState(s)(initialAccum);
                  return Control_Applicative.pure(dictMonad1.Applicative0())(new Data_Tuple.Tuple(Data_Functor.voidLeft(Data_Either.functorEither)(v.value0.value0)(v.value1), v.value0.value1));
              };
          };
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Text_Parsing_Parser.mapParserT(unState(dictMonad))(Data_Foldable.foldMap(Data_List_Types.foldableList)(Text_Parsing_Parser.monoidParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Data_Monoid.monoidUnit))(unformatCommandParser)(f)))(function (acc) {
              return Data_Either.either(Text_Parsing_Parser.fail(dictMonad))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad)))(unformatAccumToDateTime(acc));
          });
      };
  };
  var unformat = (function () {
      var $453 = Data_Formatter_Parser_Utils.runP(Text_Parsing_Parser_String.stringLikeString);
      var $454 = unformatParser(Data_Identity.monadIdentity);
      return function ($455) {
          return $453($454($455));
      };
  })();
  var unformatDateTime = function (pattern) {
      return function (str) {
          return Control_Bind.bind(Data_Either.bindEither)(parseFormatString(pattern))(function (v) {
              return unformat(v)(str);
          });
      };
  };
  exports["YearFull"] = YearFull;
  exports["MonthShort"] = MonthShort;
  exports["DayOfMonth"] = DayOfMonth;
  exports["DayOfWeekNameShort"] = DayOfWeekNameShort;
  exports["Placeholder"] = Placeholder;
  exports["format"] = format;
  exports["formatDateTime"] = formatDateTime;
  exports["unformatDateTime"] = unformatDateTime;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Generic.Rep"] = $PS["Data.Generic.Rep"] || {};
  var exports = $PS["Data.Generic.Rep"];             
  var Inl = (function () {
      function Inl(value0) {
          this.value0 = value0;
      };
      Inl.create = function (value0) {
          return new Inl(value0);
      };
      return Inl;
  })();
  var Inr = (function () {
      function Inr(value0) {
          this.value0 = value0;
      };
      Inr.create = function (value0) {
          return new Inr(value0);
      };
      return Inr;
  })();
  var Product = (function () {
      function Product(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Product.create = function (value0) {
          return function (value1) {
              return new Product(value0, value1);
          };
      };
      return Product;
  })();
  var NoArguments = (function () {
      function NoArguments() {

      };
      NoArguments.value = new NoArguments();
      return NoArguments;
  })();
  var Generic = function (from, to) {
      this.from = from;
      this.to = to;
  }; 
  var from = function (dict) {
      return dict.from;
  };
  exports["Generic"] = Generic;
  exports["from"] = from;
  exports["NoArguments"] = NoArguments;
  exports["Inl"] = Inl;
  exports["Inr"] = Inr;
  exports["Product"] = Product;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Generic.Rep.Eq"] = $PS["Data.Generic.Rep.Eq"] || {};
  var exports = $PS["Data.Generic.Rep.Eq"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];                
  var GenericEq = function (genericEq$prime) {
      this["genericEq'"] = genericEq$prime;
  }; 
  var genericEqNoArguments = new GenericEq(function (v) {
      return function (v1) {
          return true;
      };
  });
  var genericEqArgument = function (dictEq) {
      return new GenericEq(function (v) {
          return function (v1) {
              return Data_Eq.eq(dictEq)(v)(v1);
          };
      });
  };
  var genericEq$prime = function (dict) {
      return dict["genericEq'"];
  };
  var genericEqConstructor = function (dictGenericEq) {
      return new GenericEq(function (v) {
          return function (v1) {
              return genericEq$prime(dictGenericEq)(v)(v1);
          };
      });
  };
  var genericEqProduct = function (dictGenericEq) {
      return function (dictGenericEq1) {
          return new GenericEq(function (v) {
              return function (v1) {
                  return genericEq$prime(dictGenericEq)(v.value0)(v1.value0) && genericEq$prime(dictGenericEq1)(v.value1)(v1.value1);
              };
          });
      };
  };
  var genericEqSum = function (dictGenericEq) {
      return function (dictGenericEq1) {
          return new GenericEq(function (v) {
              return function (v1) {
                  if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inl) {
                      return genericEq$prime(dictGenericEq)(v.value0)(v1.value0);
                  };
                  if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inr) {
                      return genericEq$prime(dictGenericEq1)(v.value0)(v1.value0);
                  };
                  return false;
              };
          });
      };
  };
  var genericEq = function (dictGeneric) {
      return function (dictGenericEq) {
          return function (x) {
              return function (y) {
                  return genericEq$prime(dictGenericEq)(Data_Generic_Rep.from(dictGeneric)(x))(Data_Generic_Rep.from(dictGeneric)(y));
              };
          };
      };
  };
  exports["genericEq"] = genericEq;
  exports["genericEqNoArguments"] = genericEqNoArguments;
  exports["genericEqSum"] = genericEqSum;
  exports["genericEqProduct"] = genericEqProduct;
  exports["genericEqConstructor"] = genericEqConstructor;
  exports["genericEqArgument"] = genericEqArgument;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Generic.Rep.Ord"] = $PS["Data.Generic.Rep.Ord"] || {};
  var exports = $PS["Data.Generic.Rep.Ord"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];                
  var GenericOrd = function (genericCompare$prime) {
      this["genericCompare'"] = genericCompare$prime;
  }; 
  var genericOrdNoArguments = new GenericOrd(function (v) {
      return function (v1) {
          return Data_Ordering.EQ.value;
      };
  });
  var genericOrdArgument = function (dictOrd) {
      return new GenericOrd(function (v) {
          return function (v1) {
              return Data_Ord.compare(dictOrd)(v)(v1);
          };
      });
  };
  var genericCompare$prime = function (dict) {
      return dict["genericCompare'"];
  };
  var genericOrdConstructor = function (dictGenericOrd) {
      return new GenericOrd(function (v) {
          return function (v1) {
              return genericCompare$prime(dictGenericOrd)(v)(v1);
          };
      });
  };
  var genericOrdProduct = function (dictGenericOrd) {
      return function (dictGenericOrd1) {
          return new GenericOrd(function (v) {
              return function (v1) {
                  var v2 = genericCompare$prime(dictGenericOrd)(v.value0)(v1.value0);
                  if (v2 instanceof Data_Ordering.EQ) {
                      return genericCompare$prime(dictGenericOrd1)(v.value1)(v1.value1);
                  };
                  return v2;
              };
          });
      };
  };
  var genericOrdSum = function (dictGenericOrd) {
      return function (dictGenericOrd1) {
          return new GenericOrd(function (v) {
              return function (v1) {
                  if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inl) {
                      return genericCompare$prime(dictGenericOrd)(v.value0)(v1.value0);
                  };
                  if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inr) {
                      return genericCompare$prime(dictGenericOrd1)(v.value0)(v1.value0);
                  };
                  if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inr) {
                      return Data_Ordering.LT.value;
                  };
                  if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inl) {
                      return Data_Ordering.GT.value;
                  };
                  throw new Error("Failed pattern match at Data.Generic.Rep.Ord (line 19, column 1 - line 23, column 41): " + [ v.constructor.name, v1.constructor.name ]);
              };
          });
      };
  };
  var genericCompare = function (dictGeneric) {
      return function (dictGenericOrd) {
          return function (x) {
              return function (y) {
                  return genericCompare$prime(dictGenericOrd)(Data_Generic_Rep.from(dictGeneric)(x))(Data_Generic_Rep.from(dictGeneric)(y));
              };
          };
      };
  };
  exports["genericCompare"] = genericCompare;
  exports["genericOrdNoArguments"] = genericOrdNoArguments;
  exports["genericOrdSum"] = genericOrdSum;
  exports["genericOrdProduct"] = genericOrdProduct;
  exports["genericOrdConstructor"] = genericOrdConstructor;
  exports["genericOrdArgument"] = genericOrdArgument;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Ratio"] = $PS["Data.Ratio"] || {};
  var exports = $PS["Data.Ratio"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];        
  var Ratio = (function () {
      function Ratio(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Ratio.create = function (value0) {
          return function (value1) {
              return new Ratio(value0, value1);
          };
      };
      return Ratio;
  })();
  var reduce = function (dictOrd) {
      return function (dictEuclideanRing) {
          return function (n) {
              return function (d) {
                  var g = Data_EuclideanRing.gcd(dictOrd.Eq0())(dictEuclideanRing)(n)(d);
                  var d$prime = Data_EuclideanRing.div(dictEuclideanRing)(d)(g);
                  return new Ratio(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(Data_EuclideanRing.div(dictEuclideanRing)(n)(g))(Data_Ord.signum(dictOrd)((dictEuclideanRing.CommutativeRing0()).Ring0())(d$prime)), Data_Ord.abs(dictOrd)((dictEuclideanRing.CommutativeRing0()).Ring0())(d$prime));
              };
          };
      };
  };
  var semiringRatio = function (dictOrd) {
      return function (dictEuclideanRing) {
          return new Data_Semiring.Semiring(function (v) {
              return function (v1) {
                  return reduce(dictOrd)(dictEuclideanRing)(Data_Semiring.add(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value0)(v1.value1))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value0)))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value1));
              };
          }, function (v) {
              return function (v1) {
                  return reduce(dictOrd)(dictEuclideanRing)(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value0)(v1.value0))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value1));
              };
          }, new Ratio(Data_Semiring.one(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()), Data_Semiring.one(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())), new Ratio(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()), Data_Semiring.one(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())));
      };
  };
  var ringRatio = function (dictOrd) {
      return function (dictEuclideanRing) {
          return new Data_Ring.Ring(function () {
              return semiringRatio(dictOrd)(dictEuclideanRing);
          }, function (v) {
              return function (v1) {
                  return reduce(dictOrd)(dictEuclideanRing)(Data_Ring.sub((dictEuclideanRing.CommutativeRing0()).Ring0())(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value0)(v1.value1))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value0)))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value1));
              };
          });
      };
  };
  var numerator = function (v) {
      return v.value0;
  };
  var eqRatio = function (dictEq) {
      return new Data_Eq.Eq(function (v) {
          return function (v1) {
              return Data_Eq.eq(dictEq)(v.value0)(v1.value0) && Data_Eq.eq(dictEq)(v.value1)(v1.value1);
          };
      });
  };
  var ordRatio = function (dictOrd) {
      return function (dictEuclideanRing) {
          return new Data_Ord.Ord(function () {
              return eqRatio(dictOrd.Eq0());
          }, function (x) {
              return function (y) {
                  var v = Data_Ring.sub(ringRatio(dictOrd)(dictEuclideanRing))(x)(y);
                  var $70 = Data_Eq.eq(dictOrd.Eq0())(v.value0)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                  if ($70) {
                      return Data_Ordering.EQ.value;
                  };
                  var v1 = Data_Ord.greaterThan(dictOrd)(v.value1)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                  var v2 = Data_Ord.greaterThan(dictOrd)(v.value0)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                  if (v2 && v1) {
                      return Data_Ordering.GT.value;
                  };
                  if (!v2 && !v1) {
                      return Data_Ordering.GT.value;
                  };
                  return Data_Ordering.LT.value;
              };
          });
      };
  };
  var denominator = function (v) {
      return v.value1;
  };
  exports["reduce"] = reduce;
  exports["numerator"] = numerator;
  exports["denominator"] = denominator;
  exports["eqRatio"] = eqRatio;
  exports["ordRatio"] = ordRatio;
  exports["ringRatio"] = ringRatio;
})(PS);
(function(exports) {
  "use strict";

  exports["regex'"] = function (left) {
    return function (right) {
      return function (s1) {
        return function (s2) {
          try {
            return right(new RegExp(s1, s2));
          } catch (e) {
            return left(e.message);
          }
        };
      };
    };
  };

  exports._match = function (just) {
    return function (nothing) {
      return function (r) {
        return function (s) {
          var m = s.match(r);
          if (m == null || m.length === 0) {
            return nothing;
          } else {
            for (var i = 0; i < m.length; i++) {
              m[i] = m[i] == null ? nothing : just(m[i]);
            }
            return just(m);
          }
        };
      };
    };
  };

  exports.replace = function (r) {
    return function (s1) {
      return function (s2) {
        return s2.replace(r, s1);
      };
    };
  };

  exports.split = function (r) {
    return function (s) {
      return s.split(r);
    };
  };
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.Regex.Flags"] = $PS["Data.String.Regex.Flags"] || {};
  var exports = $PS["Data.String.Regex.Flags"];                      
  var RegexFlags = (function () {
      function RegexFlags(value0) {
          this.value0 = value0;
      };
      RegexFlags.create = function (value0) {
          return new RegexFlags(value0);
      };
      return RegexFlags;
  })();
  var noFlags = new RegexFlags({
      global: false,
      ignoreCase: false,
      multiline: false,
      sticky: false,
      unicode: false
  });
  exports["RegexFlags"] = RegexFlags;
  exports["noFlags"] = noFlags;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.Regex"] = $PS["Data.String.Regex"] || {};
  var exports = $PS["Data.String.Regex"];
  var $foreign = $PS["Data.String.Regex"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Regex_Flags = $PS["Data.String.Regex.Flags"];                      
  var renderFlags = function (v) {
      return (function () {
          if (v.value0.global) {
              return "g";
          };
          return "";
      })() + ((function () {
          if (v.value0.ignoreCase) {
              return "i";
          };
          return "";
      })() + ((function () {
          if (v.value0.multiline) {
              return "m";
          };
          return "";
      })() + ((function () {
          if (v.value0.sticky) {
              return "y";
          };
          return "";
      })() + (function () {
          if (v.value0.unicode) {
              return "u";
          };
          return "";
      })())));
  };
  var regex = function (s) {
      return function (f) {
          return $foreign["regex'"](Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f));
      };
  };
  var parseFlags = function (s) {
      return new Data_String_Regex_Flags.RegexFlags({
          global: Data_String_CodeUnits.contains("g")(s),
          ignoreCase: Data_String_CodeUnits.contains("i")(s),
          multiline: Data_String_CodeUnits.contains("m")(s),
          sticky: Data_String_CodeUnits.contains("y")(s),
          unicode: Data_String_CodeUnits.contains("u")(s)
      });
  };
  var match = $foreign["_match"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["regex"] = regex;
  exports["parseFlags"] = parseFlags;
  exports["match"] = match;
  exports["replace"] = $foreign.replace;
  exports["split"] = $foreign.split;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Fuzzy"] = $PS["Data.Fuzzy"] || {};
  var exports = $PS["Data.Fuzzy"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Eq = $PS["Data.Generic.Rep.Eq"];
  var Data_Generic_Rep_Ord = $PS["Data.Generic.Rep.Ord"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ratio = $PS["Data.Ratio"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_String_Pattern = $PS["Data.String.Pattern"];
  var Data_String_Regex = $PS["Data.String.Regex"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Foreign_Object = $PS["Foreign.Object"];                
  var Full = (function () {
      function Full() {

      };
      Full.value = new Full();
      return Full;
  })();
  var Word = (function () {
      function Word() {

      };
      Word.value = new Word();
      return Word;
  })();
  var Char = (function () {
      function Char() {

      };
      Char.value = new Char();
      return Char;
  })();
  var Start = (function () {
      function Start() {

      };
      Start.value = new Start();
      return Start;
  })();
  var Prefix = (function () {
      function Prefix() {

      };
      Prefix.value = new Prefix();
      return Prefix;
  })();
  var Mid = (function () {
      function Mid() {

      };
      Mid.value = new Mid();
      return Mid;
  })();
  var Suffix = (function () {
      function Suffix() {

      };
      Suffix.value = new Suffix();
      return Suffix;
  })();
  var End = (function () {
      function End() {

      };
      End.value = new End();
      return End;
  })();
  var Distance = (function () {
      function Distance(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      Distance.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new Distance(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return Distance;
  })();
  var None = (function () {
      function None() {

      };
      None.value = new None();
      return None;
  })();
  var Fuzzy = function (x) {
      return x;
  };
  var FuzzyStr = function (x) {
      return x;
  };
  var words = (function () {
      var regex$prime = Data_String_Regex.regex("\\s+")(Data_String_Regex.parseFlags("g"));
      return Data_Either.either((function () {
          var $154 = Control_Applicative.pure(Control_Applicative.applicativeArray);
          return function ($155) {
              return Data_Function["const"]($154($155));
          };
      })())(Data_String_Regex.split)(regex$prime);
  })();
  var semigroupDistance = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          if (v instanceof None) {
              return v1;
          };
          if (v1 instanceof None) {
              return v;
          };
          if (v instanceof Distance && v1 instanceof Distance) {
              return new Distance(v.value0 + v1.value0 | 0, v.value1 + v1.value1 | 0, v.value2 + v1.value2 | 0, v.value3 + v1.value3 | 0, v.value4 + v1.value4 | 0, v.value5 + v1.value5 | 0);
          };
          throw new Error("Failed pattern match at Data.Fuzzy (line 78, column 1 - line 82, column 67): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var scoreScope = Data_Semigroup.append(semigroupDistance)(new Distance(1, 0, 0, 0, 0, 0));
  var scoreDistance = function (v) {
      return function (d) {
          if (v instanceof Start) {
              return new Distance(0, 0, 0, d, 0, 0);
          };
          if (v instanceof Prefix) {
              return new Distance(0, 0, d, 0, 0, 0);
          };
          if (v instanceof Mid) {
              return new Distance(0, d, 0, 0, 0, 0);
          };
          if (v instanceof Suffix) {
              return new Distance(0, 0, 0, 0, d, 0);
          };
          if (v instanceof End) {
              return new Distance(0, 0, 0, 0, 0, d);
          };
          throw new Error("Failed pattern match at Data.Fuzzy (line 359, column 1 - line 359, column 40): " + [ v.constructor.name, d.constructor.name ]);
      };
  };
  var newtypeFuzzyStr = new Data_Newtype.Newtype(function (n) {
      return n;
  }, FuzzyStr);
  var newtypeFuzzy = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Fuzzy);
  var monoidDistance = new Data_Monoid.Monoid(function () {
      return semigroupDistance;
  }, None.value);
  var lastIndexOf$prime = function ($156) {
      return Data_String_CodePoints.lastIndexOf(Data_String_Pattern.Pattern($156));
  };
  var indexOf$prime = function ($157) {
      return Data_String_CodePoints.indexOf(Data_String_Pattern.Pattern($157));
  };
  var scoreWord = function (pos) {
      return function (distance) {
          return function (str) {
              var before = Data_String_CodePoints.take(distance)(str);
              var wordStart = Data_String_CodePoints.length(before) - (Data_Maybe.fromMaybe(-1 | 0)(lastIndexOf$prime(" ")(before)) + 1 | 0) | 0;
              var after = Data_String_CodePoints.length(str);
              var wordEnd = Data_Maybe.fromMaybe(1 * after | 0)(indexOf$prime(" ")(str));
              if (pos instanceof Start) {
                  return scoreDistance(Prefix.value)(wordStart);
              };
              if (pos instanceof End) {
                  return scoreDistance(Suffix.value)(wordEnd);
              };
              return Data_Monoid.mempty(monoidDistance);
          };
      };
  };
  var genericScope = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof Full) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof Word) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof Char) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
      };
      throw new Error("Failed pattern match at Data.Fuzzy (line 149, column 1 - line 149, column 48): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return Full.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return Word.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
          return Char.value;
      };
      throw new Error("Failed pattern match at Data.Fuzzy (line 149, column 1 - line 149, column 48): " + [ x.constructor.name ]);
  });
  var genericFuzzy = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });
  var genericDistance = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof Distance) {
          return new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, new Data_Generic_Rep.Product(x.value2, new Data_Generic_Rep.Product(x.value3, new Data_Generic_Rep.Product(x.value4, x.value5))))));
      };
      if (x instanceof None) {
          return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
      };
      throw new Error("Failed pattern match at Data.Fuzzy (line 73, column 1 - line 73, column 54): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return new Distance(x.value0.value0, x.value0.value1.value0, x.value0.value1.value1.value0, x.value0.value1.value1.value1.value0, x.value0.value1.value1.value1.value1.value0, x.value0.value1.value1.value1.value1.value1);
      };
      if (x instanceof Data_Generic_Rep.Inr) {
          return None.value;
      };
      throw new Error("Failed pattern match at Data.Fuzzy (line 73, column 1 - line 73, column 54): " + [ x.constructor.name ]);
  });   
  var eqScope = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericScope)(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments)))));
  var matchStr = function (v) {
      return function (v1) {
          return function (str) {
              if (v1 === "") {
                  return {
                      original: str,
                      segments: [ new Data_Either.Left(str) ],
                      distance: None.value,
                      ratio: Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(1)(1)
                  };
              };
              var initialAcc = {
                  substr: str,
                  pos: Start.value,
                  fuzzy: {
                      original: str,
                      segments: Data_Monoid.mempty(Data_Monoid.monoidArray),
                      distance: Data_Monoid.mempty(monoidDistance),
                      ratio: Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(1)(1)
                  }
              };
              var chars = Data_String_CodePoints.length(Data_String_Common.replaceAll(" ")("")(v1));
              var matchStr$prime = function (scope) {
                  return function (v2) {
                      return function (pat) {
                          var v3 = (function () {
                              if (v) {
                                  return new Data_Tuple.Tuple(Data_String_Common.toLower(pat), Data_String_Common.toLower(v2.substr));
                              };
                              return new Data_Tuple.Tuple(pat, v2.substr);
                          })();
                          var nextRight = function (d) {
                              return Data_Either.Right.create(Data_String_CodePoints.take(Data_String_CodePoints.length(pat))(Data_String_CodePoints.drop(d)(v2.substr)));
                          };
                          var nextLeft = function (d) {
                              if (d === 0) {
                                  return Data_Monoid.mempty(Data_Monoid.monoidArray);
                              };
                              return [ Data_Either.Left.create(Data_String_CodePoints.take(d)(v2.substr)) ];
                          };
                          var nextSegment = function (d) {
                              var v4 = new Data_Tuple.Tuple(d, Data_Array.unsnoc(v2.fuzzy.segments));
                              if (v4.value0 === 0 && v4.value1 instanceof Data_Maybe.Just) {
                                  return Data_Array.snoc(v4.value1.value0.init)(Data_Semigroup.append(Data_Either.semigroupEither(Data_Semigroup.semigroupString))(v4.value1.value0.last)(nextRight(d)));
                              };
                              return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v2.fuzzy.segments)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(nextLeft(d))([ nextRight(d) ]));
                          };
                          var nextDistance = function (d) {
                              var v4 = new Data_Tuple.Tuple(scope, v2.pos);
                              if (v4.value0 instanceof Word && v4.value1 instanceof Mid) {
                                  return Data_Semigroup.append(semigroupDistance)(v2.fuzzy.distance)(scoreDistance(Start.value)(d));
                              };
                              return Data_Semigroup.append(semigroupDistance)(v2.fuzzy.distance)(Data_Semigroup.append(semigroupDistance)(scoreDistance(v2.pos)(d))(scoreWord(v2.pos)(d)(v3.value1)));
                          };
                          var nextAcc = function (p) {
                              return {
                                  substr: v2.substr,
                                  pos: p,
                                  fuzzy: {
                                      original: v2.fuzzy.original,
                                      segments: v2.fuzzy.segments,
                                      distance: scoreScope(v2.fuzzy.distance),
                                      ratio: (function () {
                                          var $122 = Data_Eq.eq(eqScope)(scope)(Char.value);
                                          if ($122) {
                                              return Data_Ring.sub(Data_Ratio.ringRatio(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt))(v2.fuzzy.ratio)(Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(1)(chars));
                                          };
                                          return v2.fuzzy.ratio;
                                      })()
                                  }
                              };
                          };
                          var v4 = indexOf$prime(v3.value0)(v3.value1);
                          if (v4 instanceof Data_Maybe.Just) {
                              return {
                                  substr: Data_String_CodePoints.drop(v4.value0 + Data_String_CodePoints.length(pat) | 0)(v2.substr),
                                  pos: Mid.value,
                                  fuzzy: {
                                      original: v2.fuzzy.original,
                                      segments: nextSegment(v4.value0),
                                      distance: nextDistance(v4.value0),
                                      ratio: v2.fuzzy.ratio
                                  }
                              };
                          };
                          if (v4 instanceof Data_Maybe.Nothing) {
                              if (scope instanceof Full) {
                                  return Data_Foldable.foldl(Data_Foldable.foldableArray)(matchStr$prime(Word.value))(nextAcc(Start.value))(words(pat));
                              };
                              if (scope instanceof Word) {
                                  return Data_Foldable.foldl(Data_Foldable.foldableArray)(matchStr$prime(Char.value))(nextAcc(Start.value))(Data_Functor.map(Data_Functor.functorArray)(Data_String_CodePoints.singleton)(Data_String_CodePoints.toCodePointArray(pat)));
                              };
                              if (scope instanceof Char) {
                                  return nextAcc(v2.pos);
                              };
                              throw new Error("Failed pattern match at Data.Fuzzy (line 238, column 11 - line 241, column 32): " + [ scope.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Fuzzy (line 226, column 7 - line 241, column 32): " + [ v4.constructor.name ]);
                      };
                  };
              };
              var after = function (v2) {
                  var nextSegment = (function () {
                      if (v2.substr === "") {
                          return v2.fuzzy.segments;
                      };
                      return Data_Array.snoc(v2.fuzzy.segments)(new Data_Either.Left(v2.substr));
                  })();
                  var nextDistance = (function () {
                      if (Data_Eq.eq(Data_Ratio.eqRatio(Data_Eq.eqInt))(v2.fuzzy.ratio)(Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(0)(1))) {
                          return v2.fuzzy.distance;
                      };
                      if (Data_Boolean.otherwise) {
                          return Data_Semigroup.append(semigroupDistance)(v2.fuzzy.distance)(Data_Semigroup.append(semigroupDistance)(scoreDistance(End.value)(Data_String_CodePoints.length(v2.substr)))(scoreWord(End.value)(0)(v2.substr)));
                      };
                      throw new Error("Failed pattern match at Data.Fuzzy (line 287, column 11 - line 287, column 35): " + [  ]);
                  })();
                  return {
                      original: v2.fuzzy.original,
                      segments: nextSegment,
                      distance: nextDistance,
                      ratio: v2.fuzzy.ratio
                  };
              };
              return after(Data_Foldable.foldl(Data_Foldable.foldableArray)(matchStr$prime(Full.value))(initialAcc)([ v1 ]));
          };
      };
  }
  var eqDistance = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericDistance)(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))))))))(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))));
  var eqFuzzy = function (dictEq) {
      return new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericFuzzy)(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
          return "segments";
      }))(Foreign_Object.eqObject(Data_Eq.eqArray(Data_Either.eqEither(Data_Eq.eqString)(Data_Eq.eqString)))))()(new Data_Symbol.IsSymbol(function () {
          return "ratio";
      }))(Data_Ratio.eqRatio(Data_Eq.eqInt)))()(new Data_Symbol.IsSymbol(function () {
          return "original";
      }))(dictEq))()(new Data_Symbol.IsSymbol(function () {
          return "distance";
      }))(eqDistance))))));
  };                   
  var ordDistance = new Data_Ord.Ord(function () {
      return eqDistance;
  }, Data_Generic_Rep_Ord.genericCompare(genericDistance)(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))))))))(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments))));
  var match = function (v) {
      return function (extract) {
          return function (v1) {
              return function (val) {
                  if (v1 === "") {
                      return {
                          original: val,
                          segments: Data_Functor.map(Foreign_Object.functorObject)((function () {
                              var $158 = Control_Applicative.pure(Control_Applicative.applicativeArray);
                              return function ($159) {
                                  return $158(Data_Either.Left.create($159));
                              };
                          })())(extract(val)),
                          distance: Data_Monoid.mempty(monoidDistance),
                          ratio: Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(1)(1)
                      };
                  };
                  var minDistance = function (d) {
                      return function (v2) {
                          return Data_Ord.min(ordDistance)(d)(v2.distance);
                      };
                  };
                  var maxRatio = function (r) {
                      return function (v2) {
                          return Data_Ord.max(Data_Ratio.ordRatio(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt))(r)(v2.ratio);
                      };
                  };
                  var matches = Data_Functor.map(Foreign_Object.functorObject)(matchStr(v)(v1))(extract(val));
                  var fuzzies = Foreign_Object.values(matches);
                  return {
                      original: val,
                      segments: Data_Functor.map(Foreign_Object.functorObject)((function () {
                          var $160 = Data_Newtype.unwrap(newtypeFuzzyStr);
                          return function ($161) {
                              return (function (v2) {
                                  return v2.segments;
                              })($160($161));
                          };
                      })())(matches),
                      distance: Data_Foldable.foldl(Data_Foldable.foldableArray)(minDistance)(Data_Monoid.mempty(monoidDistance))(fuzzies),
                      ratio: Data_Foldable.foldl(Data_Foldable.foldableArray)(maxRatio)(Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(0)(1))(fuzzies)
                  };
              };
          };
      };
  };
  var ordFuzzy = function (dictEq) {
      return new Data_Ord.Ord(function () {
          return eqFuzzy(dictEq);
      }, Data_Function.on(Data_Ord.compare(ordDistance))((function () {
          var $162 = Data_Newtype.unwrap(newtypeFuzzy);
          return function ($163) {
              return (function (v) {
                  return v.distance;
              })($162($163));
          };
      })()));
  };
  exports["Distance"] = Distance;
  exports["match"] = match;
  exports["eqDistance"] = eqDistance;
  exports["newtypeFuzzy"] = newtypeFuzzy;
  exports["ordFuzzy"] = ordFuzzy;
})(PS);
(function(exports) {
  "use strict";

  exports.defer = function (thunk) {
    var v = null;
    return function() {
      if (thunk === undefined) return v;

      v = thunk();
      thunk = undefined; // eslint-disable-line no-param-reassign
      return v;
    };
  };

  exports.force = function (l) {
    return l();
  };
})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Lazy"] = $PS["Data.Lazy"] || {};
  var exports = $PS["Data.Lazy"];
  var $foreign = $PS["Data.Lazy"];
  var Data_Functor = $PS["Data.Functor"];
  var functorLazy = new Data_Functor.Functor(function (f) {
      return function (l) {
          return $foreign.defer(function (v) {
              return f($foreign.force(l));
          });
      };
  });
  exports["functorLazy"] = functorLazy;
  exports["defer"] = $foreign.defer;
  exports["force"] = $foreign.force;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Profunctor.Choice"] = $PS["Data.Profunctor.Choice"] || {};
  var exports = $PS["Data.Profunctor.Choice"];                 
  var Choice = function (Profunctor0, left, right) {
      this.Profunctor0 = Profunctor0;
      this.left = left;
      this.right = right;
  };
  var right = function (dict) {
      return dict.right;
  };
  exports["right"] = right;
  exports["Choice"] = Choice;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Lens.Internal.Market"] = $PS["Data.Lens.Internal.Market"] || {};
  var exports = $PS["Data.Lens.Internal.Market"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Choice = $PS["Data.Profunctor.Choice"];                
  var Market = (function () {
      function Market(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Market.create = function (value0) {
          return function (value1) {
              return new Market(value0, value1);
          };
      };
      return Market;
  })();
  var profunctorMarket = new Data_Profunctor.Profunctor(function (f) {
      return function (g) {
          return function (v) {
              return new Market(function ($19) {
                  return g(v.value0($19));
              }, (function () {
                  var $20 = Data_Bifunctor.lmap(Data_Either.bifunctorEither)(g);
                  return function ($21) {
                      return $20(v.value1(f($21)));
                  };
              })());
          };
      };
  });
  var choiceMarket = new Data_Profunctor_Choice.Choice(function () {
      return profunctorMarket;
  }, function (v) {
      return new Market(function ($25) {
          return Data_Either.Left.create(v.value0($25));
      }, Data_Either.either((function () {
          var $26 = Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Either.Left.create);
          return function ($27) {
              return $26(v.value1($27));
          };
      })())(function ($28) {
          return Data_Either.Left.create(Data_Either.Right.create($28));
      }));
  }, function (v) {
      return new Market(function ($29) {
          return Data_Either.Right.create(v.value0($29));
      }, Data_Either.either(function ($30) {
          return Data_Either.Left.create(Data_Either.Left.create($30));
      })((function () {
          var $31 = Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Either.Right.create);
          return function ($32) {
              return $31(v.value1($32));
          };
      })()));
  });
  exports["Market"] = Market;
  exports["choiceMarket"] = choiceMarket;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Profunctor.Strong"] = $PS["Data.Profunctor.Strong"] || {};
  var exports = $PS["Data.Profunctor.Strong"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Strong = function (Profunctor0, first, second) {
      this.Profunctor0 = Profunctor0;
      this.first = first;
      this.second = second;
  };
  var strongFn = new Strong(function () {
      return Data_Profunctor.profunctorFn;
  }, function (a2b) {
      return function (v) {
          return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
      };
  }, Data_Functor.map(Data_Tuple.functorTuple));
  var first = function (dict) {
      return dict.first;
  };
  exports["first"] = first;
  exports["strongFn"] = strongFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Lens.Lens"] = $PS["Data.Lens.Lens"] || {};
  var exports = $PS["Data.Lens.Lens"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Tuple = $PS["Data.Tuple"];
  var lens$prime = function (to) {
      return function (dictStrong) {
          return function (pab) {
              return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function (v) {
                  return v.value1(v.value0);
              })(Data_Profunctor_Strong.first(dictStrong)(pab));
          };
      };
  };
  var lens = function (get) {
      return function (set) {
          return function (dictStrong) {
              return lens$prime(function (s) {
                  return new Data_Tuple.Tuple(get(s), function (b) {
                      return set(s)(b);
                  });
              })(dictStrong);
          };
      };
  };
  exports["lens"] = lens;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Lens.Prism"] = $PS["Data.Lens.Prism"] || {};
  var exports = $PS["Data.Lens.Prism"];
  var Control_Category = $PS["Control.Category"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Lens_Internal_Market = $PS["Data.Lens.Internal.Market"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Choice = $PS["Data.Profunctor.Choice"];                
  var withPrism = function (l) {
      return function (f) {
          var v = l(new Data_Lens_Internal_Market.Market(Control_Category.identity(Control_Category.categoryFn), Data_Either.Right.create));
          return f(v.value0)(v.value1);
      };
  };                                                                                                                                                  
  var prism = function (to) {
      return function (fro) {
          return function (dictChoice) {
              return function (pab) {
                  return Data_Profunctor.dimap(dictChoice.Profunctor0())(fro)(Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)(Data_Profunctor.rmap(dictChoice.Profunctor0())(to)(pab)));
              };
          };
      };
  };
  var matching = function (l) {
      return withPrism(l)(function (v) {
          return function (f) {
              return f;
          };
      });
  };
  var is = function (dictHeytingAlgebra) {
      return function (l) {
          var $16 = Data_Either.either(Data_Function["const"](Data_HeytingAlgebra.ff(dictHeytingAlgebra)))(Data_Function["const"](Data_HeytingAlgebra.tt(dictHeytingAlgebra)));
          var $17 = matching(l);
          return function ($18) {
              return $16($17($18));
          };
      };
  };
  exports["prism"] = prism;
  exports["is"] = is;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Record"] = $PS["Record"] || {};
  var exports = $PS["Record"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var set = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictCons1) {
              return function (l) {
                  return function (b) {
                      return function (r) {
                          return Record_Unsafe.unsafeSet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(b)(r);
                      };
                  };
              };
          };
      };
  };
  var get = function (dictIsSymbol) {
      return function (dictCons) {
          return function (l) {
              return function (r) {
                  return Record_Unsafe.unsafeGet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
              };
          };
      };
  };
  exports["get"] = get;
  exports["set"] = set;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Lens.Record"] = $PS["Data.Lens.Record"] || {};
  var exports = $PS["Data.Lens.Record"];
  var Data_Function = $PS["Data.Function"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Record = $PS["Record"];                
  var prop = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictCons1) {
              return function (l) {
                  return function (dictStrong) {
                      return Data_Lens_Lens.lens(Record.get(dictIsSymbol)()(l))(Data_Function.flip(Record.set(dictIsSymbol)()()(l)))(dictStrong);
                  };
              };
          };
      };
  };
  exports["prop"] = prop;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Lens.Setter"] = $PS["Data.Lens.Setter"] || {};
  var exports = $PS["Data.Lens.Setter"];             
  var over = function (l) {
      return l;
  };
  exports["over"] = over;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.List.Lazy.Types"] = $PS["Data.List.Lazy.Types"] || {};
  var exports = $PS["Data.List.Lazy.Types"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Lazy = $PS["Data.Lazy"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];                
  var List = function (x) {
      return x;
  };
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var nil = List(Data_Lazy.defer(function (v) {
      return Nil.value;
  }));             
  var newtypeList = new Data_Newtype.Newtype(function (n) {
      return n;
  }, List);
  var step = (function () {
      var $215 = Data_Newtype.unwrap(newtypeList);
      return function ($216) {
          return Data_Lazy.force($215($216));
      };
  })();   
  var lazyList = new Control_Lazy.Lazy(function (f) {
      return List(Data_Lazy.defer(function ($217) {
          return step(f($217));
      }));
  });
  var cons = function (x) {
      return function (xs) {
          return List(Data_Lazy.defer(function (v) {
              return new Cons(x, xs);
          }));
      };
  };
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (b) {
              return function (a) {
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(b)(f(a));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (op) {
      var go = function ($copy_b) {
          return function ($copy_xs) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, xs) {
                  var v = step(xs);
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = op(b)(v.value0);
                      $copy_xs = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Lazy.Types (line 122, column 7 - line 124, column 40): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_xs);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (op) {
      return function (z) {
          return function (xs) {
              var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(cons))(nil);
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(op))(z)(rev(xs));
          };
      };
  });
  var unfoldable1List = new Data_Unfoldable1.Unfoldable1((function () {
      var go = function (f) {
          return function (b) {
              return Control_Lazy.defer(lazyList)(function (v) {
                  var v1 = f(b);
                  if (v1.value1 instanceof Data_Maybe.Just) {
                      return cons(v1.value0)(go(f)(v1.value1.value0));
                  };
                  if (v1.value1 instanceof Data_Maybe.Nothing) {
                      return cons(v1.value0)(nil);
                  };
                  throw new Error("Failed pattern match at Data.List.Lazy.Types (line 146, column 28 - line 148, column 33): " + [ v1.constructor.name ]);
              });
          };
      };
      return go;
  })());
  var unfoldableList = new Data_Unfoldable.Unfoldable(function () {
      return unfoldable1List;
  }, (function () {
      var go = function (f) {
          return function (b) {
              return Control_Lazy.defer(lazyList)(function (v) {
                  var v1 = f(b);
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return nil;
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      return cons(v1.value0.value0)(go(f)(v1.value0.value1));
                  };
                  throw new Error("Failed pattern match at Data.List.Lazy.Types (line 152, column 28 - line 154, column 39): " + [ v1.constructor.name ]);
              });
          };
      };
      return go;
  })());
  exports["List"] = List;
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["step"] = step;
  exports["newtypeList"] = newtypeList;
  exports["foldableList"] = foldableList;
  exports["unfoldableList"] = unfoldableList;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.List.Lazy"] = $PS["Data.List.Lazy"] || {};
  var exports = $PS["Data.List.Lazy"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lazy = $PS["Data.Lazy"];
  var Data_List_Lazy_Types = $PS["Data.List.Lazy.Types"];
  var Data_Newtype = $PS["Data.Newtype"];
  var filter = function (p) {
      var go = function ($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
              if (v instanceof Data_List_Lazy_Types.Nil) {
                  $tco_done = true;
                  return Data_List_Lazy_Types.Nil.value;
              };
              if (v instanceof Data_List_Lazy_Types.Cons) {
                  if (p(v.value0)) {
                      $tco_done = true;
                      return new Data_List_Lazy_Types.Cons(v.value0, filter(p)(v.value1));
                  };
                  if (Data_Boolean.otherwise) {
                      $copy_v = Data_List_Lazy_Types.step(v.value1);
                      return;
                  };
              };
              throw new Error("Failed pattern match at Data.List.Lazy (line 428, column 3 - line 428, column 15): " + [ v.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      var $256 = Data_Functor.map(Data_Lazy.functorLazy)(go);
      var $257 = Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList);
      return function ($258) {
          return Data_List_Lazy_Types.List($256($257($258)));
      };
  };
  exports["filter"] = filter;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Map.Internal"] = $PS["Data.Map.Internal"] || {};
  var exports = $PS["Data.Map.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Lazy = $PS["Data.List.Lazy"];
  var Data_List_Lazy_Types = $PS["Data.List.Lazy.Types"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var values = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal (line 612, column 1 - line 612, column 40): " + [ v.constructor.name ]);
  };
  var singleton = function (k) {
      return function (v) {
          return new Two(Leaf.value, k, v, Leaf.value);
      };
  };
  var toUnfoldable = function (dictUnfoldable) {
      return function (m) {
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof Leaf) {
                          $copy_v = v.value1;
                          return;
                      };
                      if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {
                          $tco_done = true;
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));
                      };
                      if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
                          $tco_done = true;
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                      };
                      if (v.value0 instanceof Two) {
                          $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                          return;
                      };
                      if (v.value0 instanceof Three) {
                          $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 577, column 18 - line 586, column 71): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 576, column 3 - line 576, column 19): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
      };
  };
  var lookup = function (dictOrd) {
      return function (k) {
          var comp = Data_Ord.compare(dictOrd);
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Leaf) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Two) {
                      var v2 = comp(k)(v.value1);
                      if (v2 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      if (v2 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  if (v instanceof Three) {
                      var v3 = comp(k)(v.value1);
                      if (v3 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      var v4 = comp(k)(v.value4);
                      if (v4 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value5);
                      };
                      if (v3 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      if (v4 instanceof Data_Ordering.GT) {
                          $copy_v = v.value6;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 200, column 5 - line 200, column 22): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return go;
      };
  };
  var member = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
          };
      };
  };
  var functorMap = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Leaf) {
              return Leaf.value;
          };
          if (v1 instanceof Two) {
              return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
          };
          if (v1 instanceof Three) {
              return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
          };
          throw new Error("Failed pattern match at Data.Map.Internal (line 96, column 1 - line 99, column 110): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 418, column 3 - line 423, column 88): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 415, column 1 - line 415, column 80): " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map.Internal (line 454, column 5 - line 459, column 108): " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 451, column 3 - line 451, column 56): " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 434, column 3 - line 434, column 55): " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var pop = function (dictOrd) {
      return function (k) {
          var up = function ($copy_ctxs) {
              return function ($copy_tree) {
                  var $tco_var_ctxs = $copy_ctxs;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctxs, tree) {
                      if (ctxs instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return tree;
                      };
                      if (ctxs instanceof Data_List_Types.Cons) {
                          if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 511, column 9 - line 528, column 136): " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 508, column 5 - line 528, column 136): " + [ ctxs.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
                  };
                  return $tco_result;
              };
          };
          var removeMaxNode = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                          $tco_done = true;
                          return up(ctx)(Leaf.value);
                      };
                      if (m instanceof Two) {
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                          $tco_done = true;
                          return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                      };
                      if (m instanceof Three) {
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 540, column 5 - line 544, column 107): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          var maxNode = function ($copy_m) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(m) {
                  if (m instanceof Two && m.value3 instanceof Leaf) {
                      $tco_done = true;
                      return {
                          key: m.value1,
                          value: m.value2
                      };
                  };
                  if (m instanceof Two) {
                      $copy_m = m.value3;
                      return;
                  };
                  if (m instanceof Three && m.value6 instanceof Leaf) {
                      $tco_done = true;
                      return {
                          key: m.value4,
                          value: m.value5
                      };
                  };
                  if (m instanceof Three) {
                      $copy_m = m.value6;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 531, column 33 - line 535, column 45): " + [ m.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_m);
              };
              return $tco_result;
          };
          var comp = Data_Ord.compare(dictOrd);
          var down = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Leaf) {
                          $tco_done = true;
                          return Data_Maybe.Nothing.value;
                      };
                      if (m instanceof Two) {
                          var v = comp(k)(m.value1);
                          if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three) {
                          var leaves = (function () {
                              if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                  return true;
                              };
                              return false;
                          })();
                          var v = comp(k)(m.value4);
                          var v3 = comp(k)(m.value1);
                          if (leaves && v3 instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                          };
                          if (leaves && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                          };
                          if (v3 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value3);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                          };
                          if (v3 instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value3;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 481, column 34 - line 504, column 80): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          return down(Data_List_Types.Nil.value);
      };
  };
  var foldableMap = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (m) {
              return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  });
  var traversableMap = new Data_Traversable.Traversable(function () {
      return foldableMap;
  }, function () {
      return functorMap;
  }, function (dictApplicative) {
      return Data_Traversable.traverse(traversableMap)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  }, function (dictApplicative) {
      return function (f) {
          return function (v) {
              if (v instanceof Leaf) {
                  return Control_Applicative.pure(dictApplicative)(Leaf.value);
              };
              if (v instanceof Two) {
                  return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Two.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value3));
              };
              if (v instanceof Three) {
                  return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Three.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value3)))(Control_Applicative.pure(dictApplicative)(v.value4)))(f(v.value5)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value6));
              };
              throw new Error("Failed pattern match at Data.Map.Internal (line 119, column 1 - line 134, column 31): " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  });
  var foldSubmap = function (dictOrd) {
      return function (dictMonoid) {
          return function (kmin) {
              return function (kmax) {
                  return function (f) {
                      var tooSmall = (function () {
                          if (kmin instanceof Data_Maybe.Just) {
                              return function (k) {
                                  return Data_Ord.lessThan(dictOrd)(k)(kmin.value0);
                              };
                          };
                          if (kmin instanceof Data_Maybe.Nothing) {
                              return Data_Function["const"](false);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 319, column 7 - line 323, column 22): " + [ kmin.constructor.name ]);
                      })();
                      var tooLarge = (function () {
                          if (kmax instanceof Data_Maybe.Just) {
                              return function (k) {
                                  return Data_Ord.greaterThan(dictOrd)(k)(kmax.value0);
                              };
                          };
                          if (kmax instanceof Data_Maybe.Nothing) {
                              return Data_Function["const"](false);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 326, column 7 - line 330, column 22): " + [ kmax.constructor.name ]);
                      })();
                      var inBounds = (function () {
                          if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Just) {
                              return function (k) {
                                  return Data_Ord.lessThanOrEq(dictOrd)(kmin.value0)(k) && Data_Ord.lessThanOrEq(dictOrd)(k)(kmax.value0);
                              };
                          };
                          if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Nothing) {
                              return function (k) {
                                  return Data_Ord.lessThanOrEq(dictOrd)(kmin.value0)(k);
                              };
                          };
                          if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Just) {
                              return function (k) {
                                  return Data_Ord.lessThanOrEq(dictOrd)(k)(kmax.value0);
                              };
                          };
                          if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Nothing) {
                              return Data_Function["const"](true);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 333, column 7 - line 341, column 21): " + [ kmin.constructor.name, kmax.constructor.name ]);
                      })();
                      var go = function (v) {
                          if (v instanceof Leaf) {
                              return Data_Monoid.mempty(dictMonoid);
                          };
                          if (v instanceof Two) {
                              return Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                  var $633 = tooSmall(v.value1);
                                  if ($633) {
                                      return Data_Monoid.mempty(dictMonoid);
                                  };
                                  return go(v.value0);
                              })())(Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                  var $634 = inBounds(v.value1);
                                  if ($634) {
                                      return f(v.value1)(v.value2);
                                  };
                                  return Data_Monoid.mempty(dictMonoid);
                              })())((function () {
                                  var $635 = tooLarge(v.value1);
                                  if ($635) {
                                      return Data_Monoid.mempty(dictMonoid);
                                  };
                                  return go(v.value3);
                              })()));
                          };
                          if (v instanceof Three) {
                              return Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                  var $640 = tooSmall(v.value1);
                                  if ($640) {
                                      return Data_Monoid.mempty(dictMonoid);
                                  };
                                  return go(v.value0);
                              })())(Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                  var $641 = inBounds(v.value1);
                                  if ($641) {
                                      return f(v.value1)(v.value2);
                                  };
                                  return Data_Monoid.mempty(dictMonoid);
                              })())(Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                  var $642 = tooSmall(v.value4) || tooLarge(v.value1);
                                  if ($642) {
                                      return Data_Monoid.mempty(dictMonoid);
                                  };
                                  return go(v.value3);
                              })())(Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                  var $643 = inBounds(v.value4);
                                  if ($643) {
                                      return f(v.value4)(v.value5);
                                  };
                                  return Data_Monoid.mempty(dictMonoid);
                              })())((function () {
                                  var $644 = tooLarge(v.value4);
                                  if ($644) {
                                      return Data_Monoid.mempty(dictMonoid);
                                  };
                                  return go(v.value6);
                              })()))));
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 359, column 10 - line 371, column 54): " + [ v.constructor.name ]);
                      };
                      return go;
                  };
              };
          };
      };
  };
  var empty = Leaf.value;
  var fromFoldable = function (dictOrd) {
      return function (dictFoldable) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (v) {
                  return insert(dictOrd)(v.value0)(v.value1)(m);
              };
          })(empty);
      };
  };
  var filterWithKey = function (dictOrd) {
      return function (predicate) {
          var $758 = fromFoldable(dictOrd)(Data_List_Lazy_Types.foldableList);
          var $759 = Data_List_Lazy.filter(Data_Tuple.uncurry(predicate));
          var $760 = toUnfoldable(Data_List_Lazy_Types.unfoldableList);
          return function ($761) {
              return $758($759($760($761)));
          };
      };
  };
  var filter = function (dictOrd) {
      return function (predicate) {
          return filterWithKey(dictOrd)(Data_Function["const"](predicate));
      };
  };
  var $$delete = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
          };
      };
  };
  var asList = Control_Category.identity(Control_Category.categoryFn);
  var foldableWithIndexMap = new Data_FoldableWithIndex.FoldableWithIndex(function () {
      return foldableMap;
  }, function (dictMonoid) {
      return function (f) {
          return function (m) {
              return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(Data_Tuple.uncurry(f))(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)((function () {
                  var $763 = Data_Function.flip(f);
                  return function ($764) {
                      return Data_Tuple.uncurry($763($764));
                  };
              })())(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_Tuple.uncurry(f))(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
          };
      };
  });
  var alter = function (dictOrd) {
      return function (f) {
          return function (k) {
              return function (m) {
                  var v = f(lookup(dictOrd)(k)(m));
                  if (v instanceof Data_Maybe.Nothing) {
                      return $$delete(dictOrd)(k)(m);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return insert(dictOrd)(k)(v.value0)(m);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 549, column 15 - line 551, column 25): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var unionWith = function (dictOrd) {
      return function (f) {
          return function (m1) {
              return function (m2) {
                  var go = function (m) {
                      return function (v) {
                          return alter(dictOrd)((function () {
                              var $769 = Data_Maybe.maybe(v.value1)(f(v.value1));
                              return function ($770) {
                                  return Data_Maybe.Just.create($769($770));
                              };
                          })())(v.value0)(m);
                      };
                  };
                  return Data_Foldable.foldl(Data_List_Types.foldableList)(go)(m2)(toUnfoldable(Data_List_Types.unfoldableList)(m1));
              };
          };
      };
  };
  var union = function (dictOrd) {
      return unionWith(dictOrd)(Data_Function["const"]);
  };
  var semigroupMap = function (dictOrd) {
      return new Data_Semigroup.Semigroup(union(dictOrd));
  };
  var monoidMap = function (dictOrd) {
      return new Data_Monoid.Monoid(function () {
          return semigroupMap(dictOrd);
      }, empty);
  };
  exports["empty"] = empty;
  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["foldSubmap"] = foldSubmap;
  exports["fromFoldable"] = fromFoldable;
  exports["toUnfoldable"] = toUnfoldable;
  exports["delete"] = $$delete;
  exports["pop"] = pop;
  exports["member"] = member;
  exports["alter"] = alter;
  exports["filter"] = filter;
  exports["monoidMap"] = monoidMap;
  exports["functorMap"] = functorMap;
  exports["foldableMap"] = foldableMap;
  exports["foldableWithIndexMap"] = foldableWithIndexMap;
  exports["traversableMap"] = traversableMap;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.Read"] = $PS["Data.String.Read"] || {};
  var exports = $PS["Data.String.Read"];
  var Read = function (read) {
      this.read = read;
  }; 
  var read = function (dict) {
      return dict.read;
  };
  exports["Read"] = Read;
  exports["read"] = read;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Void"] = $PS["Data.Void"] || {};
  var exports = $PS["Data.Void"];
  var absurd = function (a) {
      var spin = function ($copy_v) {
          var $tco_result;
          function $tco_loop(v) {
              $copy_v = v;
              return;
          };
          while (!false) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return spin(a);
  };
  exports["absurd"] = absurd;
})(PS);
(function(exports) {
  /* globals exports, setTimeout */
  "use strict";

  var AVar = function () {

    function MutableQueue () {
      this.head = null;
      this.last = null;
      this.size = 0;
    }

    function MutableCell (queue, value) {
      this.queue = queue;
      this.value = value;
      this.next  = null;
      this.prev  = null;
    }

    function AVar (value) {
      this.draining = false;
      this.error    = null;
      this.value    = value;
      this.takes    = new MutableQueue();
      this.reads    = new MutableQueue();
      this.puts     = new MutableQueue();
    }

    var EMPTY = {};

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function putLast (queue, value) {
      var cell = new MutableCell(queue, value);
      switch (queue.size) {
      case 0:
        queue.head = cell;
        break;
      case 1:
        cell.prev = queue.head;
        queue.head.next = cell;
        queue.last = cell;
        break;
      default:
        cell.prev = queue.last;
        queue.last.next = cell;
        queue.last = cell;
      }
      queue.size++;
      return cell;
    }

    function takeLast (queue) {
      var cell;
      switch (queue.size) {
      case 0:
        return null;
      case 1:
        cell = queue.head;
        queue.head = null;
        break;
      case 2:
        cell = queue.last;
        queue.head.next = null;
        queue.last = null;
        break;
      default:
        cell = queue.last;
        queue.last = cell.prev;
        queue.last.next = null;
      }
      cell.prev = null;
      cell.queue = null;
      queue.size--;
      return cell.value;
    }

    function takeHead (queue) {
      var cell;
      switch (queue.size) {
      case 0:
        return null;
      case 1:
        cell = queue.head;
        queue.head = null;
        break;
      case 2:
        cell = queue.head;
        queue.last.prev = null;
        queue.head = queue.last;
        queue.last = null;
        break;
      default:
        cell = queue.head;
        queue.head = cell.next;
        queue.head.prev = null;
      }
      cell.next = null;
      cell.queue = null;
      queue.size--;
      return cell.value;
    }

    function deleteCell (cell) {
      if (cell.queue === null) {
        return;
      }
      if (cell.queue.last === cell) {
        takeLast(cell.queue);
        return;
      }
      if (cell.queue.head === cell) {
        takeHead(cell.queue);
        return;
      }
      if (cell.prev) {
        cell.prev.next = cell.next;
      }
      if (cell.next) {
        cell.next.prev = cell.prev;
      }
      cell.queue.size--;
      cell.queue = null;
      cell.value = null;
      cell.next  = null;
      cell.prev  = null;
    }

    function drainVar (util, avar) {
      if (avar.draining) {
        return;
      }

      var ps = avar.puts;
      var ts = avar.takes;
      var rs = avar.reads;
      var p, r, t, value, rsize;

      avar.draining = true;

      while (1) { // eslint-disable-line no-constant-condition
        p = null;
        r = null;
        t = null;
        value = avar.value;
        rsize = rs.size;

        if (avar.error !== null) {
          value = util.left(avar.error);
          while (p = takeHead(ps)) { // eslint-disable-line no-cond-assign
            runEff(p.cb(value));
          }
          while (r = takeHead(rs)) { // eslint-disable-line no-cond-assign
            runEff(r(value));
          }
          while (t = takeHead(ts)) { // eslint-disable-line no-cond-assign
            runEff(t(value));
          }
          break;
        }

        // Process the next put. We do not immediately invoke the callback
        // because we want to preserve ordering. If there are takes/reads
        // we want to run those first.
        if (value === EMPTY && (p = takeHead(ps))) {
          avar.value = value = p.value;
        }

        if (value !== EMPTY) {
          // We go ahead and queue up the next take for the same reasons as
          // above. Invoking the read callbacks can affect the mutable queue.
          t = takeHead(ts);
          // We only want to process the reads queued up before running these
          // callbacks so we guard on rsize.
          while (rsize-- && (r = takeHead(rs))) {
            runEff(r(util.right(value)));
          }
          if (t !== null) {
            avar.value = EMPTY;
            runEff(t(util.right(value)));
          }
        }

        if (p !== null) {
          runEff(p.cb(util.right(void 0)));
        }

        // Callbacks could have queued up more items so we need to guard on the
        // actual mutable properties.
        if (avar.value === EMPTY && ps.size === 0 || avar.value !== EMPTY && ts.size === 0) {
          break;
        }
      }
      avar.draining = false;
    }

    AVar.EMPTY      = EMPTY;
    AVar.putLast    = putLast;
    AVar.takeLast   = takeLast;
    AVar.takeHead   = takeHead;
    AVar.deleteCell = deleteCell;
    AVar.drainVar   = drainVar;

    return AVar;
  }();

  exports.empty = function () {
    return new AVar(AVar.EMPTY);
  };

  exports._killVar = function (util, error, avar) {
    return function () {
      if (avar.error === null) {
        avar.error = error;
        avar.value = AVar.EMPTY;
        AVar.drainVar(util, avar);
      }
    };
  };

  exports._putVar = function (util, value, avar, cb) {
    return function () {
      var cell = AVar.putLast(avar.puts, { cb: cb, value: value });
      AVar.drainVar(util, avar);
      return function () {
        AVar.deleteCell(cell);
      };
    };
  };

  exports._takeVar = function (util, avar, cb) {
    return function () {
      var cell = AVar.putLast(avar.takes, cb);
      AVar.drainVar(util, avar);
      return function () {
        AVar.deleteCell(cell);
      };
    };
  };
})(PS["Effect.AVar"] = PS["Effect.AVar"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.AVar"] = $PS["Effect.AVar"] || {};
  var exports = $PS["Effect.AVar"];
  var $foreign = $PS["Effect.AVar"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var Killed = (function () {
      function Killed(value0) {
          this.value0 = value0;
      };
      Killed.create = function (value0) {
          return new Killed(value0);
      };
      return Killed;
  })();
  var Filled = (function () {
      function Filled(value0) {
          this.value0 = value0;
      };
      Filled.create = function (value0) {
          return new Filled(value0);
      };
      return Filled;
  })();
  var Empty = (function () {
      function Empty() {

      };
      Empty.value = new Empty();
      return Empty;
  })();
  var ffiUtil = {
      left: Data_Either.Left.create,
      right: Data_Either.Right.create,
      nothing: Data_Maybe.Nothing.value,
      just: Data_Maybe.Just.create,
      killed: Killed.create,
      filled: Filled.create,
      empty: Empty.value
  };
  var kill = function (err) {
      return function (avar) {
          return $foreign["_killVar"](ffiUtil, err, avar);
      };
  };
  var put = function (value) {
      return function (avar) {
          return function (cb) {
              return $foreign["_putVar"](ffiUtil, value, avar, cb);
          };
      };
  };
  var take = function (avar) {
      return function (cb) {
          return $foreign["_takeVar"](ffiUtil, avar, cb);
      };
  };
  exports["take"] = take;
  exports["put"] = put;
  exports["kill"] = kill;
  exports["empty"] = $foreign.empty;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Aff.AVar"] = $PS["Effect.Aff.AVar"] || {};
  var exports = $PS["Effect.Aff.AVar"];
  var Effect_AVar = $PS["Effect.AVar"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var take = function (avar) {
      return Effect_Aff.makeAff(function (k) {
          return function __do() {
              var c = Effect_AVar.take(avar)(k)();
              return Effect_Aff.effectCanceler(c);
          };
      });
  };
  var put = function (value) {
      return function (avar) {
          return Effect_Aff.makeAff(function (k) {
              return function __do() {
                  var c = Effect_AVar.put(value)(avar)(k)();
                  return Effect_Aff.effectCanceler(c);
              };
          });
      };
  };   
  var kill = function (error) {
      var $11 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
      var $12 = Effect_AVar.kill(error);
      return function ($13) {
          return $11($12($13));
      };
  };
  var empty = Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.empty);
  exports["empty"] = empty;
  exports["take"] = take;
  exports["put"] = put;
  exports["kill"] = kill;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Aff.Class"] = $PS["Effect.Aff.Class"] || {};
  var exports = $PS["Effect.Aff.Class"];
  var Control_Category = $PS["Control.Category"];
  var Effect_Aff = $PS["Effect.Aff"];                
  var MonadAff = function (MonadEffect0, liftAff) {
      this.MonadEffect0 = MonadEffect0;
      this.liftAff = liftAff;
  };
  var monadAffAff = new MonadAff(function () {
      return Effect_Aff.monadEffectAff;
  }, Control_Category.identity(Control_Category.categoryFn));
  var liftAff = function (dict) {
      return dict.liftAff;
  };
  exports["liftAff"] = liftAff;
  exports["MonadAff"] = MonadAff;
  exports["monadAffAff"] = monadAffAff;
})(PS);
(function(exports) {
  "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };

  exports.warn = function (s) {
    return function () {
      console.warn(s);
      return {};
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["log"] = $foreign.log;
  exports["warn"] = $foreign.warn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Class.Console"] = $PS["Effect.Class.Console"] || {};
  var exports = $PS["Effect.Class.Console"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var log = function (dictMonadEffect) {
      var $30 = Effect_Class.liftEffect(dictMonadEffect);
      return function ($31) {
          return $30(Effect_Console.log($31));
      };
  };
  exports["log"] = log;
})(PS);
(function(exports) {
  "use strict";

  exports.now = function () {
    return Date.now();
  };
})(PS["Effect.Now"] = PS["Effect.Now"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Now"] = $PS["Effect.Now"] || {};
  var exports = $PS["Effect.Now"];
  var $foreign = $PS["Effect.Now"];
  var Data_DateTime = $PS["Data.DateTime"];
  var Data_DateTime_Instant = $PS["Data.DateTime.Instant"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];                                                                              
  var nowDate = Data_Functor.map(Effect.functorEffect)(function ($1) {
      return Data_DateTime.date(Data_DateTime_Instant.toDateTime($1));
  })($foreign.now);
  exports["nowDate"] = nowDate;
})(PS);
(function(exports) {
  /* global exports */
  "use strict";

  exports.setTimeout = function (ms) {
    return function (fn) {
      return function () {
        return setTimeout(fn, ms);
      };
    };
  };
})(PS["Effect.Timer"] = PS["Effect.Timer"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Timer"] = $PS["Effect.Timer"] || {};
  var exports = $PS["Effect.Timer"];
  var $foreign = $PS["Effect.Timer"];
  exports["setTimeout"] = $foreign.setTimeout;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };
})(PS["Foreign.Index"] = PS["Foreign.Index"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Foreign.Index"] = $PS["Foreign.Index"] || {};
  var exports = $PS["Foreign.Index"];
  var $foreign = $PS["Foreign.Index"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Foreign = $PS["Foreign"];
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(Foreign.fail(new Foreign.TypeMismatch("object", Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
      };
  };
  var readProp = unsafeReadProp;
  exports["readProp"] = readProp;
})(PS);
(function(exports) {
  /* globals exports, JSON */
  "use strict";

  exports.unsafeDecodeURI = decodeURI;
  exports.unsafeEncodeURI = encodeURI;
})(PS["Global.Unsafe"] = PS["Global.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Global.Unsafe"] = $PS["Global.Unsafe"] || {};
  var exports = $PS["Global.Unsafe"];
  var $foreign = $PS["Global.Unsafe"];
  exports["unsafeDecodeURI"] = $foreign.unsafeDecodeURI;
  exports["unsafeEncodeURI"] = $foreign.unsafeEncodeURI;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.Data.OrdBox"] = $PS["Halogen.Data.OrdBox"] || {};
  var exports = $PS["Halogen.Data.OrdBox"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ord = $PS["Data.Ord"];                
  var OrdBox = (function () {
      function OrdBox(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      OrdBox.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new OrdBox(value0, value1, value2);
              };
          };
      };
      return OrdBox;
  })();
  var unOrdBox = function (v) {
      return v.value2;
  };
  var mkOrdBox = function (dictOrd) {
      return OrdBox.create(Data_Eq.eq(dictOrd.Eq0()))(Data_Ord.compare(dictOrd));
  };
  var eqOrdBox = new Data_Eq.Eq(function (v) {
      return function (v1) {
          return v.value0(v.value2)(v1.value2);
      };
  });
  var ordOrdBox = new Data_Ord.Ord(function () {
      return eqOrdBox;
  }, function (v) {
      return function (v1) {
          return v.value1(v.value2)(v1.value2);
      };
  });
  exports["mkOrdBox"] = mkOrdBox;
  exports["unOrdBox"] = unOrdBox;
  exports["ordOrdBox"] = ordOrdBox;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.Data.Slot"] = $PS["Halogen.Data.Slot"] || {};
  var exports = $PS["Halogen.Data.Slot"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Halogen_Data_OrdBox = $PS["Halogen.Data.OrdBox"];
  var slots = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (sym) {
                  return function (v) {
                      var key = Data_Symbol.reflectSymbol(dictIsSymbol)(sym);
                      var go = function (v1) {
                          return function (val) {
                              if (key === v1.value0) {
                                  return Data_Map_Internal.singleton(Halogen_Data_OrdBox.unOrdBox(v1.value1))(val);
                              };
                              if (Data_Boolean.otherwise) {
                                  return Data_Monoid.mempty(Data_Map_Internal.monoidMap(dictOrd));
                              };
                              throw new Error("Failed pattern match at Halogen.Data.Slot (line 101, column 3 - line 103, column 25): " + [ v1.constructor.name, val.constructor.name ]);
                          };
                      };
                      return Data_Map_Internal.foldSubmap(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(Data_Map_Internal.monoidMap(dictOrd))(Data_Maybe.Nothing.value)(Data_Maybe.Nothing.value)(go)(v);
                  };
              };
          };
      };
  };
  var pop = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (sym) {
                  return function (key) {
                      return function (v) {
                          return Data_Map_Internal.pop(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(v);
                      };
                  };
              };
          };
      };
  };
  var lookup = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (sym) {
                  return function (key) {
                      return function (v) {
                          return Data_Map_Internal.lookup(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(v);
                      };
                  };
              };
          };
      };
  };
  var insert = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (sym) {
                  return function (key) {
                      return function (val) {
                          return function (v) {
                              return Data_Map_Internal.insert(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(val)(v);
                          };
                      };
                  };
              };
          };
      };
  };
  var foreachSlot = function (dictApplicative) {
      return function (v) {
          return function (k) {
              return Data_Foldable.traverse_(dictApplicative)(Data_Map_Internal.foldableMap)(function ($37) {
                  return k($37);
              })(v);
          };
      };
  };
  var empty = Data_Map_Internal.empty;
  exports["empty"] = empty;
  exports["lookup"] = lookup;
  exports["insert"] = insert;
  exports["pop"] = pop;
  exports["slots"] = slots;
  exports["foreachSlot"] = foreachSlot;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.Aff.Driver.State"] = $PS["Halogen.Aff.Driver.State"] || {};
  var exports = $PS["Halogen.Aff.Driver.State"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var unRenderStateX = Unsafe_Coerce.unsafeCoerce;
  var unDriverStateX = Unsafe_Coerce.unsafeCoerce;
  var renderStateX_ = function (dictApplicative) {
      return function (f) {
          return unDriverStateX(function (st) {
              return Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe)(f)(st.rendering);
          });
      };
  };
  var mkRenderStateX = Unsafe_Coerce.unsafeCoerce;
  var renderStateX = function (dictFunctor) {
      return function (f) {
          return unDriverStateX(function (st) {
              return mkRenderStateX(f(st.rendering));
          });
      };
  };
  var mkDriverStateXRef = Unsafe_Coerce.unsafeCoerce;
  var mapDriverState = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var initDriverState = function (component) {
      return function (input) {
          return function (handler) {
              return function (lchs) {
                  return function __do() {
                      var selfRef = Effect_Ref["new"]({})();
                      var childrenIn = Effect_Ref["new"](Halogen_Data_Slot.empty)();
                      var childrenOut = Effect_Ref["new"](Halogen_Data_Slot.empty)();
                      var handlerRef = Effect_Ref["new"](handler)();
                      var pendingQueries = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
                      var pendingOuts = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
                      var pendingHandlers = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                      var fresh = Effect_Ref["new"](1)();
                      var subscriptions = Effect_Ref["new"](new Data_Maybe.Just(Data_Map_Internal.empty))();
                      var forks = Effect_Ref["new"](Data_Map_Internal.empty)();
                      var ds = {
                          component: component,
                          state: component.initialState(input),
                          refs: Data_Map_Internal.empty,
                          children: Halogen_Data_Slot.empty,
                          childrenIn: childrenIn,
                          childrenOut: childrenOut,
                          selfRef: selfRef,
                          handlerRef: handlerRef,
                          pendingQueries: pendingQueries,
                          pendingOuts: pendingOuts,
                          pendingHandlers: pendingHandlers,
                          rendering: Data_Maybe.Nothing.value,
                          fresh: fresh,
                          subscriptions: subscriptions,
                          forks: forks,
                          lifecycleHandlers: lchs
                      };
                      Effect_Ref.write(ds)(selfRef)();
                      return mkDriverStateXRef(selfRef);
                  };
              };
          };
      };
  };
  exports["mapDriverState"] = mapDriverState;
  exports["unDriverStateX"] = unDriverStateX;
  exports["renderStateX"] = renderStateX;
  exports["renderStateX_"] = renderStateX_;
  exports["unRenderStateX"] = unRenderStateX;
  exports["initDriverState"] = initDriverState;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.Query.ChildQuery"] = $PS["Halogen.Query.ChildQuery"] || {};
  var exports = $PS["Halogen.Query.ChildQuery"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var ChildQuery = (function () {
      function ChildQuery(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      ChildQuery.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new ChildQuery(value0, value1, value2);
              };
          };
      };
      return ChildQuery;
  })();
  var unChildQueryBox = Unsafe_Coerce.unsafeCoerce;
  var mkChildQueryBox = Unsafe_Coerce.unsafeCoerce;
  exports["ChildQuery"] = ChildQuery;
  exports["mkChildQueryBox"] = mkChildQueryBox;
  exports["unChildQueryBox"] = unChildQueryBox;
})(PS);
(function(exports) {
  "use strict";

  exports.eventListener = function (fn) {
    return function () {
      return function (event) {
        return fn(event)();
      };
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };

  exports.removeEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.removeEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.Event.EventTarget"] = $PS["Web.Event.EventTarget"] || {};
  var exports = $PS["Web.Event.EventTarget"];
  var $foreign = $PS["Web.Event.EventTarget"];
  exports["eventListener"] = $foreign.eventListener;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.Query.EventSource"] = $PS["Halogen.Query.EventSource"] || {};
  var exports = $PS["Halogen.Query.EventSource"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Coroutine = $PS["Control.Coroutine"];
  var Control_Monad_Free_Trans = $PS["Control.Monad.Free.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_AVar = $PS["Effect.Aff.AVar"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var EventSource = function (x) {
      return x;
  };
  var hoistFinalizer = function (nat) {
      return function (v) {
          return nat(v);
      };
  };
  var hoistEmitter = function (nat) {
      return function (v) {
          return function ($37) {
              return nat(v($37));
          };
      };
  };
  var finalize = function (v) {
      return v;
  };
  var emit = function (v) {
      return function (a) {
          return v(new Data_Either.Left(a));
      };
  };
  var affEventSource = function (dictMonadAff) {
      return function (recv) {
          return EventSource(Effect_Aff_Class.liftAff(dictMonadAff)(Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (inputVar) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (finalizeVar) {
                  var producer = Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)((dictMonadAff.MonadEffect0()).Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))((dictMonadAff.MonadEffect0()).Monad0())(Effect_Aff_Class.liftAff(dictMonadAff)(Control_Bind.bindFlipped(Effect_Aff.bindAff)(Data_Function.flip(Effect_Aff_AVar.put)(finalizeVar))(recv(Data_Function.flip(Effect_Aff_AVar.put)(inputVar))))))(function () {
                      return Control_Coroutine.producer((dictMonadAff.MonadEffect0()).Monad0())(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff_AVar.take(inputVar)));
                  });
                  var finalizer = Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff.attempt(Effect_Aff_AVar.take(finalizeVar))))(function (v) {
                      if (v instanceof Data_Either.Left) {
                          return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Unit.unit);
                      };
                      if (v instanceof Data_Either.Right) {
                          return Effect_Aff_Class.liftAff(dictMonadAff)(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff_AVar.kill(Effect_Exception.error("finalized"))(finalizeVar))(function () {
                              return finalize(v.value0);
                          }));
                      };
                      throw new Error("Failed pattern match at Halogen.Query.EventSource (line 71, column 51 - line 75, column 21): " + [ v.constructor.name ]);
                  });
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)({
                      producer: producer,
                      finalizer: finalizer
                  });
              });
          })));
      };
  };
  var effectEventSource = function (dictMonadAff) {
      var $38 = affEventSource(dictMonadAff);
      var $39 = Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(hoistEmitter(Effect_Aff.launchAff_))((function () {
          var $41 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
          var $42 = Data_Functor.map(Effect.functorEffect)(hoistFinalizer(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)));
          return function ($43) {
              return $41($42($43));
          };
      })());
      return function ($40) {
          return $38($39($40));
      };
  };
  var eventListenerEventSource = function (dictMonadAff) {
      return function (eventType) {
          return function (target) {
              return function (f) {
                  return effectEventSource(dictMonadAff)(function (emitter) {
                      return function __do() {
                          var listener = Web_Event_EventTarget.eventListener((function () {
                              var $44 = Data_Maybe.maybe(Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))(emit(emitter));
                              return function ($45) {
                                  return $44(f($45));
                              };
                          })())();
                          Web_Event_EventTarget.addEventListener(eventType)(listener)(false)(target)();
                          return Web_Event_EventTarget.removeEventListener(eventType)(listener)(false)(target);
                      };
                  });
              };
          };
      };
  };
  exports["eventListenerEventSource"] = eventListenerEventSource;
  exports["finalize"] = finalize;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.Query.HalogenM"] = $PS["Halogen.Query.HalogenM"] || {};
  var exports = $PS["Halogen.Query.HalogenM"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Applicative_Free = $PS["Control.Applicative.Free"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Halogen_Query_ChildQuery = $PS["Halogen.Query.ChildQuery"];                  
  var SubscriptionId = function (x) {
      return x;
  };
  var ForkId = function (x) {
      return x;
  };
  var State = (function () {
      function State(value0) {
          this.value0 = value0;
      };
      State.create = function (value0) {
          return new State(value0);
      };
      return State;
  })();
  var Subscribe = (function () {
      function Subscribe(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Subscribe.create = function (value0) {
          return function (value1) {
              return new Subscribe(value0, value1);
          };
      };
      return Subscribe;
  })();
  var Unsubscribe = (function () {
      function Unsubscribe(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Unsubscribe.create = function (value0) {
          return function (value1) {
              return new Unsubscribe(value0, value1);
          };
      };
      return Unsubscribe;
  })();
  var Lift = (function () {
      function Lift(value0) {
          this.value0 = value0;
      };
      Lift.create = function (value0) {
          return new Lift(value0);
      };
      return Lift;
  })();
  var ChildQuery = (function () {
      function ChildQuery(value0) {
          this.value0 = value0;
      };
      ChildQuery.create = function (value0) {
          return new ChildQuery(value0);
      };
      return ChildQuery;
  })();
  var Raise = (function () {
      function Raise(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Raise.create = function (value0) {
          return function (value1) {
              return new Raise(value0, value1);
          };
      };
      return Raise;
  })();
  var Par = (function () {
      function Par(value0) {
          this.value0 = value0;
      };
      Par.create = function (value0) {
          return new Par(value0);
      };
      return Par;
  })();
  var Fork = (function () {
      function Fork(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Fork.create = function (value0) {
          return function (value1) {
              return new Fork(value0, value1);
          };
      };
      return Fork;
  })();
  var Kill = (function () {
      function Kill(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Kill.create = function (value0) {
          return function (value1) {
              return new Kill(value0, value1);
          };
      };
      return Kill;
  })();
  var GetRef = (function () {
      function GetRef(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      GetRef.create = function (value0) {
          return function (value1) {
              return new GetRef(value0, value1);
          };
      };
      return GetRef;
  })();
  var HalogenAp = function (x) {
      return x;
  };
  var HalogenM = function (x) {
      return x;
  };
  var unsubscribe = function (sid) {
      return HalogenM(Control_Monad_Free.liftF(new Unsubscribe(sid, Data_Unit.unit)));
  };
  var subscribe = function (es) {
      return HalogenM(Control_Monad_Free.liftF(new Subscribe(function (v) {
          return es;
      }, Control_Category.identity(Control_Category.categoryFn))));
  };
  var raise = function (o) {
      return HalogenM(Control_Monad_Free.liftF(new Raise(o, Data_Unit.unit)));
  };
  var queryAll = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (label) {
                  return function (q) {
                      var catMapMaybes = function (dictOrd1) {
                          return Data_FoldableWithIndex.foldrWithIndex(Data_Map_Internal.foldableWithIndexMap)(function (k) {
                              return function (v) {
                                  return function (acc) {
                                      return Data_Maybe.maybe(acc)(Data_Function.flip(Data_Map_Internal.insert(dictOrd1)(k))(acc))(v);
                                  };
                              };
                          })(Data_Map_Internal.empty);
                      };
                      return HalogenM(Control_Monad_Free.liftF(ChildQuery.create(Halogen_Query_ChildQuery.mkChildQueryBox(new Halogen_Query_ChildQuery.ChildQuery(function (dictApplicative) {
                          return function (k) {
                              var $131 = Data_Functor.map((dictApplicative.Apply0()).Functor0())(catMapMaybes(dictOrd));
                              var $132 = Data_Traversable.traverse(Data_Map_Internal.traversableMap)(dictApplicative)(k);
                              var $133 = Halogen_Data_Slot.slots()(dictIsSymbol)(dictOrd)(label);
                              return function ($134) {
                                  return $131($132($133($134)));
                              };
                          };
                      }, q, Control_Category.identity(Control_Category.categoryFn))))));
                  };
              };
          };
      };
  };
  var query = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (label) {
                  return function (p) {
                      return function (q) {
                          return HalogenM(Control_Monad_Free.liftF(ChildQuery.create(Halogen_Query_ChildQuery.mkChildQueryBox(new Halogen_Query_ChildQuery.ChildQuery(function (dictApplicative) {
                              return function (k) {
                                  var $135 = Data_Maybe.maybe(Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value))(k);
                                  var $136 = Halogen_Data_Slot.lookup()(dictIsSymbol)(dictOrd)(label)(p);
                                  return function ($137) {
                                      return $135($136($137));
                                  };
                              };
                          }, q, Control_Category.identity(Control_Category.categoryFn))))));
                      };
                  };
              };
          };
      };
  };
  var ordSubscriptionId = Data_Ord.ordInt;
  var ordForkId = Data_Ord.ordInt;
  var monadTransHalogenM = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function ($138) {
          return HalogenM(Control_Monad_Free.liftF(Lift.create($138)));
      };
  });
  var monadHalogenM = Control_Monad_Free.freeMonad;
  var monadStateHalogenM = new Control_Monad_State_Class.MonadState(function () {
      return monadHalogenM;
  }, function ($139) {
      return HalogenM(Control_Monad_Free.liftF(State.create($139)));
  });
  var monadEffectHalogenM = function (dictMonadEffect) {
      return new Effect_Class.MonadEffect(function () {
          return monadHalogenM;
      }, (function () {
          var $144 = Effect_Class.liftEffect(dictMonadEffect);
          return function ($145) {
              return HalogenM(Control_Monad_Free.liftF(Lift.create($144($145))));
          };
      })());
  };
  var monadAffHalogenM = function (dictMonadAff) {
      return new Effect_Aff_Class.MonadAff(function () {
          return monadEffectHalogenM(dictMonadAff.MonadEffect0());
      }, (function () {
          var $146 = Effect_Aff_Class.liftAff(dictMonadAff);
          return function ($147) {
              return HalogenM(Control_Monad_Free.liftF(Lift.create($146($147))));
          };
      })());
  };
  var getRef = function (p) {
      return HalogenM(Control_Monad_Free.liftF(new GetRef(p, Control_Category.identity(Control_Category.categoryFn))));
  };
  var functorHalogenM = Control_Monad_Free.freeFunctor;
  var fork = function (hmu) {
      return HalogenM(Control_Monad_Free.liftF(new Fork(hmu, Control_Category.identity(Control_Category.categoryFn))));
  };                           
  var bindHalogenM = Control_Monad_Free.freeBind;
  var applyHalogenM = Control_Monad_Free.freeApply;         
  var applicativeHalogenM = Control_Monad_Free.freeApplicative;
  var applicativeHalogenAp = Control_Applicative_Free.applicativeFreeAp;
  var parallelHalogenM = new Control_Parallel_Class.Parallel(function () {
      return applicativeHalogenAp;
  }, function () {
      return monadHalogenM;
  }, function ($159) {
      return HalogenAp(Control_Applicative_Free.liftFreeAp($159));
  }, function ($160) {
      return HalogenM(Control_Monad_Free.liftF(Par.create($160)));
  });
  exports["State"] = State;
  exports["Subscribe"] = Subscribe;
  exports["Unsubscribe"] = Unsubscribe;
  exports["Lift"] = Lift;
  exports["ChildQuery"] = ChildQuery;
  exports["Raise"] = Raise;
  exports["Par"] = Par;
  exports["Fork"] = Fork;
  exports["Kill"] = Kill;
  exports["GetRef"] = GetRef;
  exports["HalogenM"] = HalogenM;
  exports["raise"] = raise;
  exports["query"] = query;
  exports["queryAll"] = queryAll;
  exports["SubscriptionId"] = SubscriptionId;
  exports["subscribe"] = subscribe;
  exports["unsubscribe"] = unsubscribe;
  exports["ForkId"] = ForkId;
  exports["fork"] = fork;
  exports["getRef"] = getRef;
  exports["functorHalogenM"] = functorHalogenM;
  exports["applyHalogenM"] = applyHalogenM;
  exports["applicativeHalogenM"] = applicativeHalogenM;
  exports["bindHalogenM"] = bindHalogenM;
  exports["monadEffectHalogenM"] = monadEffectHalogenM;
  exports["monadAffHalogenM"] = monadAffHalogenM;
  exports["parallelHalogenM"] = parallelHalogenM;
  exports["monadTransHalogenM"] = monadTransHalogenM;
  exports["monadStateHalogenM"] = monadStateHalogenM;
  exports["ordSubscriptionId"] = ordSubscriptionId;
  exports["ordForkId"] = ordForkId;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.Query.HalogenQ"] = $PS["Halogen.Query.HalogenQ"] || {};
  var exports = $PS["Halogen.Query.HalogenQ"];           
  var Initialize = (function () {
      function Initialize(value0) {
          this.value0 = value0;
      };
      Initialize.create = function (value0) {
          return new Initialize(value0);
      };
      return Initialize;
  })();
  var Finalize = (function () {
      function Finalize(value0) {
          this.value0 = value0;
      };
      Finalize.create = function (value0) {
          return new Finalize(value0);
      };
      return Finalize;
  })();
  var Receive = (function () {
      function Receive(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Receive.create = function (value0) {
          return function (value1) {
              return new Receive(value0, value1);
          };
      };
      return Receive;
  })();
  var Action = (function () {
      function Action(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Action.create = function (value0) {
          return function (value1) {
              return new Action(value0, value1);
          };
      };
      return Action;
  })();
  var Query = (function () {
      function Query(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Query.create = function (value0) {
          return function (value1) {
              return new Query(value0, value1);
          };
      };
      return Query;
  })();
  exports["Initialize"] = Initialize;
  exports["Finalize"] = Finalize;
  exports["Receive"] = Receive;
  exports["Action"] = Action;
  exports["Query"] = Query;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.Query.Input"] = $PS["Halogen.Query.Input"] || {};
  var exports = $PS["Halogen.Query.Input"];
  var RefUpdate = (function () {
      function RefUpdate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RefUpdate.create = function (value0) {
          return function (value1) {
              return new RefUpdate(value0, value1);
          };
      };
      return RefUpdate;
  })();
  var Action = (function () {
      function Action(value0) {
          this.value0 = value0;
      };
      Action.create = function (value0) {
          return new Action(value0);
      };
      return Action;
  })();
  exports["RefUpdate"] = RefUpdate;
  exports["Action"] = Action;
})(PS);
(function(exports) {
  "use strict";

  exports.reallyUnsafeRefEq = function (a) {
    return function (b) {
      return a === b;
    };
  };
})(PS["Unsafe.Reference"] = PS["Unsafe.Reference"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Unsafe.Reference"] = $PS["Unsafe.Reference"] || {};
  var exports = $PS["Unsafe.Reference"];
  var $foreign = $PS["Unsafe.Reference"];
  var unsafeRefEq = $foreign.reallyUnsafeRefEq;
  exports["unsafeRefEq"] = unsafeRefEq;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.Aff.Driver.Eval"] = $PS["Halogen.Aff.Driver.Eval"] || {};
  var exports = $PS["Halogen.Aff.Driver.Eval"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Applicative_Free = $PS["Control.Applicative.Free"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Coroutine = $PS["Control.Coroutine"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Fork_Class = $PS["Control.Monad.Fork.Class"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Control_Monad_Free_Trans = $PS["Control.Monad.Free.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Coyoneda = $PS["Data.Coyoneda"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
  var Halogen_Query_ChildQuery = $PS["Halogen.Query.ChildQuery"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Query_HalogenQ = $PS["Halogen.Query.HalogenQ"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];
  var Unsafe_Reference = $PS["Unsafe.Reference"];                
  var unsubscribe = function (sid) {
      return function (ref) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v.subscriptions)))(function (subs) {
                  return Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(Halogen_Query_EventSource.finalize)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordSubscriptionId)(sid))(subs));
              });
          });
      };
  };
  var queueOrRun = function (ref) {
      return function (au) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return au;
              };
              if (v instanceof Data_Maybe.Just) {
                  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write(new Data_Maybe.Just(new Data_List_Types.Cons(au, v.value0)))(ref));
              };
              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 195, column 33 - line 197, column 57): " + [ v.constructor.name ]);
          });
      };
  };
  var handleLifecycle = function (lchs) {
      return function (f) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
              initializers: Data_List_Types.Nil.value,
              finalizers: Data_List_Types.Nil.value
          })(lchs)))(function () {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(f))(function (result) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(lchs)))(function (v) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(v.finalizers))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(v.initializers))(function () {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(result);
                          });
                      });
                  });
              });
          });
      };
  };
  var fresh = function (f) {
      return function (ref) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
              return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["modify'"](function (i) {
                  return {
                      state: i + 1 | 0,
                      value: f(i)
                  };
              })(v.fresh));
          });
      };
  };
  var evalQ = function (render) {
      return function (ref) {
          return function (q) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
                  return evalM(render)(ref)(v["component"]["eval"](new Halogen_Query_HalogenQ.Query(Data_Functor.map(Data_Coyoneda.functorCoyoneda)(Data_Maybe.Just.create)(Data_Coyoneda.liftCoyoneda(q)), Data_Function["const"](Data_Maybe.Nothing.value))));
              });
          };
      };
  };
  var evalM = function (render) {
      return function (initRef) {
          return function (v) {
              var evalChildQuery = function (ref) {
                  return function (cqb) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                          return Halogen_Query_ChildQuery.unChildQueryBox(function (v2) {
                              var evalChild = function (v3) {
                                  return Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v3)))(function (dsx) {
                                      return Halogen_Aff_Driver_State.unDriverStateX(function (ds) {
                                          return evalQ(render)(ds.selfRef)(v2.value1);
                                      })(dsx);
                                  }));
                              };
                              return Data_Functor.map(Effect_Aff.functorAff)(v2.value2)(Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(v2.value0(Effect_Aff.applicativeParAff)(evalChild)(v1.children)));
                          })(cqb);
                      });
                  };
              };
              var go = function (ref) {
                  return function (v1) {
                      if (v1 instanceof Halogen_Query_HalogenM.State) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              var v3 = v1.value0(v2.state);
                              if (Unsafe_Reference.unsafeRefEq(v2.state)(v3.value1)) {
                                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(v3.value0);
                              };
                              if (Data_Boolean.otherwise) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
                                      component: v2.component,
                                      state: v3.value1,
                                      refs: v2.refs,
                                      children: v2.children,
                                      childrenIn: v2.childrenIn,
                                      childrenOut: v2.childrenOut,
                                      selfRef: v2.selfRef,
                                      handlerRef: v2.handlerRef,
                                      pendingQueries: v2.pendingQueries,
                                      pendingOuts: v2.pendingOuts,
                                      pendingHandlers: v2.pendingHandlers,
                                      rendering: v2.rendering,
                                      fresh: v2.fresh,
                                      subscriptions: v2.subscriptions,
                                      forks: v2.forks,
                                      lifecycleHandlers: v2.lifecycleHandlers
                                  })(ref)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(handleLifecycle(v2.lifecycleHandlers)(render(v2.lifecycleHandlers)(ref)))(function () {
                                          return Control_Applicative.pure(Effect_Aff.applicativeAff)(v3.value0);
                                      });
                                  });
                              };
                              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 85, column 7 - line 91, column 21): " + [ v3.constructor.name ]);
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Subscribe) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(fresh(Halogen_Query_HalogenM.SubscriptionId)(ref))(function (sid) {
                              var v2 = v1.value0(sid);
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v3) {
                                  return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.bind(Effect_Aff.bindAff)(v2)(function (v4) {
                                      var done = Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v3.subscriptions)))(function (subs) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal["delete"](Halogen_Query_HalogenM.ordSubscriptionId)(sid)))(v3.subscriptions)))(function () {
                                              return Control_Applicative.when(Effect_Aff.applicativeAff)(Data_Maybe.maybe(false)(Data_Map_Internal.member(Halogen_Query_HalogenM.ordSubscriptionId)(sid))(subs))(Halogen_Query_EventSource.finalize(v4.finalizer));
                                          });
                                      });
                                      var consumer = Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Coroutine["await"](Effect_Aff.monadAff))(function (act) {
                                          return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v3.subscriptions))))(function (subs) {
                                              return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqBoolean))(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.member(Halogen_Query_HalogenM.ordSubscriptionId)(sid))(subs))(new Data_Maybe.Just(true)))(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(evalF(render)(ref)(new Halogen_Query_Input.Action(act)))))(function () {
                                                  return consumer;
                                              }));
                                          });
                                      });
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.insert(Halogen_Query_HalogenM.ordSubscriptionId)(sid)(done)))(v3.subscriptions)))(function () {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.pullFrom(Effect_Aff.monadRecAff)(consumer)(v4.producer)))(function () {
                                              return Halogen_Query_EventSource.finalize(done);
                                          });
                                      });
                                  })))(function () {
                                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(sid));
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Unsubscribe) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(unsubscribe(v1.value0)(ref))(function () {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Lift) {
                          return v1.value0;
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.ChildQuery) {
                          return evalChildQuery(ref)(v1.value0);
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Raise) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v2.handlerRef)))(function (handler) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(queueOrRun(v2.pendingOuts)(handler(v1.value0)))(function () {
                                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Par) {
                          return Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Control_Applicative_Free.retractFreeAp(Effect_Aff.applicativeParAff)(Control_Applicative_Free.hoistFreeAp((function () {
                              var $85 = Control_Parallel_Class.parallel(Effect_Aff.parallelAff);
                              var $86 = evalM(render)(ref);
                              return function ($87) {
                                  return $85($86($87));
                              };
                          })())(v1.value0)));
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Fork) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(fresh(Halogen_Query_HalogenM.ForkId)(ref))(function (fid) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](false)))(function (doneRef) {
                                      return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Effect_Aff["finally"](Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                          Effect_Ref.modify_(Data_Map_Internal["delete"](Halogen_Query_HalogenM.ordForkId)(fid))(v2.forks)();
                                          return Effect_Ref.write(true)(doneRef)();
                                      }))(evalM(render)(ref)(v1.value0))))(function (fiber) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Monad.unlessM(Effect.monadEffect)(Effect_Ref.read(doneRef))(Effect_Ref.modify_(Data_Map_Internal.insert(Halogen_Query_HalogenM.ordForkId)(fid)(fiber))(v2.forks))))(function () {
                                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(fid));
                                          });
                                      });
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Kill) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v2.forks)))(function (forkMap) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(Effect_Aff.killFiber(Effect_Exception.error("Cancelled")))(Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordForkId)(v1.value0)(forkMap)))(function () {
                                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.GetRef) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(Data_Map_Internal.lookup(Data_Ord.ordString)(v1.value0)(v2.refs)));
                          });
                      };
                      throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 82, column 12 - line 146, column 33): " + [ v1.constructor.name ]);
                  };
              };
              return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(go(initRef))(v);
          };
      };
  };
  var evalF = function (render) {
      return function (ref) {
          return function (v) {
              if (v instanceof Halogen_Query_Input.RefUpdate) {
                  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Function.flip(Effect_Ref.modify_)(ref)(Halogen_Aff_Driver_State.mapDriverState(function (st) {
                      return {
                          component: st.component,
                          state: st.state,
                          refs: Data_Map_Internal.alter(Data_Ord.ordString)(Data_Function["const"](v.value1))(v.value0)(st.refs),
                          children: st.children,
                          childrenIn: st.childrenIn,
                          childrenOut: st.childrenOut,
                          selfRef: st.selfRef,
                          handlerRef: st.handlerRef,
                          pendingQueries: st.pendingQueries,
                          pendingOuts: st.pendingOuts,
                          pendingHandlers: st.pendingHandlers,
                          rendering: st.rendering,
                          fresh: st.fresh,
                          subscriptions: st.subscriptions,
                          forks: st.forks,
                          lifecycleHandlers: st.lifecycleHandlers
                      };
                  })));
              };
              if (v instanceof Halogen_Query_Input.Action) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                      return evalM(render)(ref)(v1["component"]["eval"](new Halogen_Query_HalogenQ.Action(v.value0, Data_Unit.unit)));
                  });
              };
              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 51, column 20 - line 57, column 62): " + [ v.constructor.name ]);
          };
      };
  };
  exports["evalF"] = evalF;
  exports["evalQ"] = evalQ;
  exports["evalM"] = evalM;
  exports["handleLifecycle"] = handleLifecycle;
  exports["queueOrRun"] = queueOrRun;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.Component"] = $PS["Halogen.Component"] || {};
  var exports = $PS["Halogen.Component"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Coyoneda = $PS["Data.Coyoneda"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Query_HalogenQ = $PS["Halogen.Query.HalogenQ"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var ComponentSlot = (function () {
      function ComponentSlot(value0) {
          this.value0 = value0;
      };
      ComponentSlot.create = function (value0) {
          return new ComponentSlot(value0);
      };
      return ComponentSlot;
  })();
  var ThunkSlot = (function () {
      function ThunkSlot(value0) {
          this.value0 = value0;
      };
      ThunkSlot.create = function (value0) {
          return new ThunkSlot(value0);
      };
      return ThunkSlot;
  })();
  var unComponentSlot = Unsafe_Coerce.unsafeCoerce;
  var unComponent = Unsafe_Coerce.unsafeCoerce;
  var mkEval = function (args) {
      return function (v) {
          if (v instanceof Halogen_Query_HalogenQ.Initialize) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.initialize))(v.value0);
          };
          if (v instanceof Halogen_Query_HalogenQ.Finalize) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.finalize))(v.value0);
          };
          if (v instanceof Halogen_Query_HalogenQ.Receive) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.receive(v.value0)))(v.value1);
          };
          if (v instanceof Halogen_Query_HalogenQ.Action) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(args.handleAction(v.value0))(v.value1);
          };
          if (v instanceof Halogen_Query_HalogenQ.Query) {
              return Data_Coyoneda.unCoyoneda(function (g) {
                  var $28 = Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Maybe.maybe(v.value1(Data_Unit.unit))(g));
                  return function ($29) {
                      return $28(args.handleQuery($29));
                  };
              })(v.value0);
          };
          throw new Error("Failed pattern match at Halogen.Component (line 172, column 15 - line 182, column 70): " + [ v.constructor.name ]);
      };
  };
  var mkComponentSlot = Unsafe_Coerce.unsafeCoerce;
  var mkComponent = Unsafe_Coerce.unsafeCoerce;
  var defaultEval = {
      handleAction: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),
      handleQuery: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value)),
      receive: Data_Function["const"](Data_Maybe.Nothing.value),
      initialize: Data_Maybe.Nothing.value,
      finalize: Data_Maybe.Nothing.value
  };
  var componentSlot = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (label) {
                  return function (p) {
                      return function (comp) {
                          return function (input) {
                              return function (output) {
                                  return mkComponentSlot({
                                      get: Halogen_Data_Slot.lookup()(dictIsSymbol)(dictOrd)(label)(p),
                                      pop: Halogen_Data_Slot.pop()(dictIsSymbol)(dictOrd)(label)(p),
                                      set: Halogen_Data_Slot.insert()(dictIsSymbol)(dictOrd)(label)(p),
                                      component: comp,
                                      input: input,
                                      output: output
                                  });
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  exports["mkComponent"] = mkComponent;
  exports["unComponent"] = unComponent;
  exports["mkEval"] = mkEval;
  exports["defaultEval"] = defaultEval;
  exports["ComponentSlot"] = ComponentSlot;
  exports["ThunkSlot"] = ThunkSlot;
  exports["componentSlot"] = componentSlot;
  exports["unComponentSlot"] = unComponentSlot;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.Aff.Driver"] = $PS["Halogen.Aff.Driver"] || {};
  var exports = $PS["Halogen.Aff.Driver"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Coroutine = $PS["Control.Coroutine"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Fork_Class = $PS["Control.Monad.Fork.Class"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_AVar = $PS["Effect.Aff.AVar"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Aff_Driver_Eval = $PS["Halogen.Aff.Driver.Eval"];
  var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenQ = $PS["Halogen.Query.HalogenQ"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];                
  var newLifecycleHandlers = Effect_Ref["new"]({
      initializers: Data_List_Types.Nil.value,
      finalizers: Data_List_Types.Nil.value
  });
  var handleAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
  var handlePending = function (ref) {
      return function __do() {
          var queue = Effect_Ref.read(ref)();
          Effect_Ref.write(Data_Maybe.Nothing.value)(ref)();
          return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(queue)((function () {
              var $25 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff));
              return function ($26) {
                  return handleAff($25(Data_List.reverse($26)));
              };
          })())();
      };
  };
  var cleanupSubscriptionsAndForks = function (v) {
      return function __do() {
          Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)((function () {
              var $27 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Map_Internal.foldableMap)((function () {
                  var $29 = Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff);
                  return function ($30) {
                      return $29(Halogen_Query_EventSource.finalize($30));
                  };
              })());
              return function ($28) {
                  return handleAff($27($28));
              };
          })()))(Effect_Ref.read(v.subscriptions))();
          Effect_Ref.write(Data_Maybe.Nothing.value)(v.subscriptions)();
          Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)((function () {
              var $31 = Effect_Aff.killFiber(Effect_Exception.error("finalized"));
              return function ($32) {
                  return handleAff($31($32));
              };
          })()))(Effect_Ref.read(v.forks))();
          return Effect_Ref.write(Data_Map_Internal.empty)(v.forks)();
      };
  };
  var runUI = function (renderSpec) {
      return function (component) {
          return function (i) {
              var subscribe = function (fresh) {
                  return function (ref) {
                      return function (consumer) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (inputVar) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                  var listenerId = Effect_Ref.read(fresh)();
                                  Effect_Ref.modify_(function (v) {
                                      return v + 1 | 0;
                                  })(fresh)();
                                  Effect_Ref.modify_(Data_Map_Internal.insert(Data_Ord.ordInt)(listenerId)(inputVar))(ref)();
                                  return listenerId;
                              }))(function (listenerId) {
                                  var producer = Control_Coroutine.producer(Effect_Aff.monadAff)(Data_Functor.map(Effect_Aff.functorAff)(Data_Either.either(Data_Function["const"](new Data_Either.Right(Data_Unit.unit)))(Data_Either.Left.create))(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(Effect_Aff_AVar.take(inputVar))));
                                  return Data_Functor["void"](Effect_Aff.functorAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.connect(Effect_Aff.monadRecAff)(Effect_Aff.parallelAff)(producer)(consumer)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Map_Internal["delete"](Data_Ord.ordInt)(listenerId))(ref)))(function () {
                                          return Effect_Aff_AVar.kill(Effect_Exception.error("ended"))(inputVar);
                                      });
                                  })));
                              });
                          });
                      };
                  };
              };
              var rootHandler = function (ref) {
                  return function (message) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (listeners) {
                          return Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Map_Internal.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_Functor.map(Data_Map_Internal.functorMap)(Effect_Aff_AVar.put(message))(listeners));
                      });
                  };
              };
              var squashChildInitializers = function (lchs) {
                  return function (preInits) {
                      return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                          var parentInitializer = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Initialize(Data_Unit.unit)));
                          return Effect_Ref.modify_(function (handlers) {
                              return {
                                  initializers: new Data_List_Types.Cons(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(Data_List.reverse(handlers.initializers)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(parentInitializer)(function () {
                                          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                              handlePending(st.pendingQueries)();
                                              return handlePending(st.pendingOuts)();
                                          });
                                      });
                                  }), preInits),
                                  finalizers: handlers.finalizers
                              };
                          })(lchs);
                      });
                  };
              };
              var runComponent = function (lchs) {
                  return function (handler) {
                      return function (j) {
                          return Halogen_Component.unComponent(function (c) {
                              return function __do() {
                                  var lchs$prime = newLifecycleHandlers();
                                  var $$var = Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(lchs$prime)();
                                  var pre = Effect_Ref.read(lchs)();
                                  Effect_Ref.write({
                                      initializers: Data_List_Types.Nil.value,
                                      finalizers: pre.finalizers
                                  })(lchs)();
                                  Control_Bind.bindFlipped(Effect.bindEffect)(Halogen_Aff_Driver_State.unDriverStateX((function () {
                                      var $33 = render(lchs);
                                      return function ($34) {
                                          return $33((function (v) {
                                              return v.selfRef;
                                          })($34));
                                      };
                                  })()))(Effect_Ref.read($$var))();
                                  Control_Bind.bindFlipped(Effect.bindEffect)(squashChildInitializers(lchs)(pre.initializers))(Effect_Ref.read($$var))();
                                  return $$var;
                              };
                          });
                      };
                  };
              };
              var renderChild = function (lchs) {
                  return function (handler) {
                      return function (childrenInRef) {
                          return function (childrenOutRef) {
                              return Halogen_Component.unComponentSlot(function (slot) {
                                  return function __do() {
                                      var childrenIn = Data_Functor.map(Effect.functorEffect)(slot.pop)(Effect_Ref.read(childrenInRef))();
                                      var $$var = (function () {
                                          if (childrenIn instanceof Data_Maybe.Just) {
                                              Effect_Ref.write(childrenIn.value0.value1)(childrenInRef)();
                                              var dsx = Effect_Ref.read(childrenIn.value0.value0)();
                                              Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                                                  return function __do() {
                                                      Data_Function.flip(Effect_Ref.write)(st.handlerRef)((function () {
                                                          var $35 = Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler);
                                                          return function ($36) {
                                                              return $35(slot.output($36));
                                                          };
                                                      })())();
                                                      return handleAff(Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Receive(slot.input, Data_Unit.unit))))();
                                                  };
                                              })(dsx)();
                                              return childrenIn.value0.value0;
                                          };
                                          if (childrenIn instanceof Data_Maybe.Nothing) {
                                              return runComponent(lchs)((function () {
                                                  var $37 = Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler);
                                                  return function ($38) {
                                                      return $37(slot.output($38));
                                                  };
                                              })())(slot.input)(slot.component)();
                                          };
                                          throw new Error("Failed pattern match at Halogen.Aff.Driver (line 236, column 14 - line 245, column 98): " + [ childrenIn.constructor.name ]);
                                      })();
                                      var isDuplicate = Data_Functor.map(Effect.functorEffect)(function ($39) {
                                          return Data_Maybe.isJust(slot.get($39));
                                      })(Effect_Ref.read(childrenOutRef))();
                                      Control_Applicative.when(Effect.applicativeEffect)(isDuplicate)(Effect_Console.warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                                      Effect_Ref.modify_(slot.set($$var))(childrenOutRef)();
                                      return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read($$var))(Halogen_Aff_Driver_State.renderStateX(Effect.functorEffect)(function (v) {
                                          if (v instanceof Data_Maybe.Nothing) {
                                              return Effect_Exception["throw"]("Halogen internal error: child was not initialized in renderChild");
                                          };
                                          if (v instanceof Data_Maybe.Just) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)(renderSpec.renderChild(v.value0));
                                          };
                                          throw new Error("Failed pattern match at Halogen.Aff.Driver (line 250, column 37 - line 252, column 50): " + [ v.constructor.name ]);
                                      }))();
                                  };
                              });
                          };
                      };
                  };
              };
              var render = function (lchs) {
                  return function ($$var) {
                      return function __do() {
                          var v = Effect_Ref.read($$var)();
                          var shouldProcessHandlers = Data_Functor.map(Effect.functorEffect)(Data_Maybe.isNothing)(Effect_Ref.read(v.pendingHandlers))();
                          Control_Applicative.when(Effect.applicativeEffect)(shouldProcessHandlers)(Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers))();
                          Effect_Ref.write(Halogen_Data_Slot.empty)(v.childrenOut)();
                          Effect_Ref.write(v.children)(v.childrenIn)();
                          var selfRef = Control_Category.identity(Control_Category.categoryFn)(v.selfRef);
                          var pendingQueries = Control_Category.identity(Control_Category.categoryFn)(v.pendingQueries);
                          var pendingHandlers = Control_Category.identity(Control_Category.categoryFn)(v.pendingHandlers);
                          var handler = (function () {
                              var $40 = Halogen_Aff_Driver_Eval.queueOrRun(pendingHandlers);
                              var $41 = Data_Functor["void"](Effect_Aff.functorAff);
                              var $42 = Halogen_Aff_Driver_Eval.evalF(render)(selfRef);
                              return function ($43) {
                                  return $40($41($42($43)));
                              };
                          })();
                          var childHandler = (function () {
                              var $44 = Halogen_Aff_Driver_Eval.queueOrRun(pendingQueries);
                              return function ($45) {
                                  return $44(handler(Halogen_Query_Input.Action.create($45)));
                              };
                          })();
                          var rendering = renderSpec.render(function ($46) {
                              return handleAff(handler($46));
                          })(renderChild(lchs)(childHandler)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
                          var children = Effect_Ref.read(v.childrenOut)();
                          var childrenIn = Effect_Ref.read(v.childrenIn)();
                          Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect)(childrenIn)(function (v1) {
                              return function __do() {
                                  var childDS = Effect_Ref.read(v1)();
                                  Halogen_Aff_Driver_State.renderStateX_(Effect.applicativeEffect)(renderSpec.removeChild)(childDS)();
                                  return finalize(lchs)(childDS)();
                              };
                          })();
                          Data_Function.flip(Effect_Ref.modify_)(v.selfRef)(Halogen_Aff_Driver_State.mapDriverState(function (ds$prime) {
                              return {
                                  component: ds$prime.component,
                                  state: ds$prime.state,
                                  refs: ds$prime.refs,
                                  children: children,
                                  childrenIn: ds$prime.childrenIn,
                                  childrenOut: ds$prime.childrenOut,
                                  selfRef: ds$prime.selfRef,
                                  handlerRef: ds$prime.handlerRef,
                                  pendingQueries: ds$prime.pendingQueries,
                                  pendingOuts: ds$prime.pendingOuts,
                                  pendingHandlers: ds$prime.pendingHandlers,
                                  rendering: new Data_Maybe.Just(rendering),
                                  fresh: ds$prime.fresh,
                                  subscriptions: ds$prime.subscriptions,
                                  forks: ds$prime.forks,
                                  lifecycleHandlers: ds$prime.lifecycleHandlers
                              };
                          }))();
                          return Control_Applicative.when(Effect.applicativeEffect)(shouldProcessHandlers)(Data_Function.flip(Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEffect))(Data_Unit.unit)(function (v1) {
                              return function __do() {
                                  var handlers = Effect_Ref.read(pendingHandlers)();
                                  Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(pendingHandlers)();
                                  Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)((function () {
                                      var $47 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff));
                                      return function ($48) {
                                          return handleAff($47(Data_List.reverse($48)));
                                      };
                                  })())(handlers)();
                                  var mmore = Effect_Ref.read(pendingHandlers)();
                                  var $21 = Data_Maybe.maybe(false)(Data_List["null"])(mmore);
                                  if ($21) {
                                      return Data_Functor.voidLeft(Effect.functorEffect)(Effect_Ref.write(Data_Maybe.Nothing.value)(pendingHandlers))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))();
                                  };
                                  return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);
                              };
                          }))();
                      };
                  };
              };
              var finalize = function (lchs) {
                  return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                      return function __do() {
                          cleanupSubscriptionsAndForks(st)();
                          var f = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Finalize(Data_Unit.unit)));
                          Effect_Ref.modify_(function (handlers) {
                              return {
                                  initializers: handlers.initializers,
                                  finalizers: new Data_List_Types.Cons(f, handlers.finalizers)
                              };
                          })(lchs)();
                          return Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect)(st.children)(function (v) {
                              return function __do() {
                                  var dsx = Effect_Ref.read(v)();
                                  return finalize(lchs)(dsx)();
                              };
                          })();
                      };
                  });
              };
              var evalDriver = function (disposed) {
                  return function (ref) {
                      return function (q) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(disposed)))(function (v) {
                              if (v) {
                                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Maybe.Nothing.value);
                              };
                              return Halogen_Aff_Driver_Eval.evalQ(render)(ref)(q);
                          });
                      };
                  };
              };
              var dispose = function (disposed) {
                  return function (lchs) {
                      return function (dsx) {
                          return function (subsRef) {
                              return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {
                                  var v = Effect_Ref.read(disposed)();
                                  if (v) {
                                      return Data_Unit.unit;
                                  };
                                  Effect_Ref.write(true)(disposed)();
                                  Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)((function () {
                                      var $49 = Effect_Aff_AVar.kill(Effect_Exception.error("disposed"));
                                      return function ($50) {
                                          return Effect_Aff.launchAff_($49($50));
                                      };
                                  })()))(Effect_Ref.read(subsRef))();
                                  finalize(lchs)(dsx)();
                                  return Halogen_Aff_Driver_State.unDriverStateX((function () {
                                      var $51 = Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(renderSpec.dispose);
                                      return function ($52) {
                                          return $51((function (v1) {
                                              return v1.rendering;
                                          })($52));
                                      };
                                  })())(dsx)();
                              });
                          };
                      };
                  };
              };
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(newLifecycleHandlers))(function (lchs) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](0)))(function (fresh) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](false)))(function (disposed) {
                          return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {
                              var listeners = Effect_Ref["new"](Data_Map_Internal.empty)();
                              var dsx = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref.read)(runComponent(lchs)(rootHandler(listeners))(i)(component))();
                              return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                                  return Control_Applicative.pure(Effect.applicativeEffect)({
                                      query: evalDriver(disposed)(st.selfRef),
                                      subscribe: subscribe(fresh)(listeners),
                                      dispose: dispose(disposed)(lchs)(dsx)(listeners)
                                  });
                              })(dsx)();
                          });
                      });
                  });
              });
          };
      };
  };
  exports["runUI"] = runUI;
})(PS);
(function(exports) {
  "use strict";                                               

  exports._querySelector = function (selector) {
    return function (node) {
      return function () {
        return node.querySelector(selector);
      };
    };
  };
})(PS["Web.DOM.ParentNode"] = PS["Web.DOM.ParentNode"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.ParentNode"] = $PS["Web.DOM.ParentNode"] || {};
  var exports = $PS["Web.DOM.ParentNode"];
  var $foreign = $PS["Web.DOM.ParentNode"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var querySelector = function (qs) {
      var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      var $4 = $foreign["_querySelector"](qs);
      return function ($5) {
          return $3($4($5));
      };
  };
  exports["querySelector"] = querySelector;
})(PS);
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML"] = $PS["Web.HTML"] || {};
  var exports = $PS["Web.HTML"];
  var $foreign = $PS["Web.HTML"];
  exports["window"] = $foreign.window;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.Event.EventTypes"] = $PS["Web.HTML.Event.EventTypes"] || {};
  var exports = $PS["Web.HTML.Event.EventTypes"];
  var input = "input";
  var domcontentloaded = "DOMContentLoaded";
  var change = "change";
  var blur = "blur";
  exports["blur"] = blur;
  exports["change"] = change;
  exports["domcontentloaded"] = domcontentloaded;
  exports["input"] = input;
})(PS);
(function(exports) {
  "use strict";

  exports._readyState = function (doc) {
    return function () {
      return doc.readyState;
    };
  };
})(PS["Web.HTML.HTMLDocument"] = PS["Web.HTML.HTMLDocument"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.HTMLDocument.ReadyState"] = $PS["Web.HTML.HTMLDocument.ReadyState"] || {};
  var exports = $PS["Web.HTML.HTMLDocument.ReadyState"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var Loading = (function () {
      function Loading() {

      };
      Loading.value = new Loading();
      return Loading;
  })();
  var Interactive = (function () {
      function Interactive() {

      };
      Interactive.value = new Interactive();
      return Interactive;
  })();
  var Complete = (function () {
      function Complete() {

      };
      Complete.value = new Complete();
      return Complete;
  })();
  var parse = function (v) {
      if (v === "loading") {
          return new Data_Maybe.Just(Loading.value);
      };
      if (v === "interactive") {
          return new Data_Maybe.Just(Interactive.value);
      };
      if (v === "complete") {
          return new Data_Maybe.Just(Complete.value);
      };
      return Data_Maybe.Nothing.value;
  };
  exports["Loading"] = Loading;
  exports["parse"] = parse;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.HTMLDocument"] = $PS["Web.HTML.HTMLDocument"] || {};
  var exports = $PS["Web.HTML.HTMLDocument"];
  var $foreign = $PS["Web.HTML.HTMLDocument"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect = $PS["Effect"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_HTML_HTMLDocument_ReadyState = $PS["Web.HTML.HTMLDocument.ReadyState"];
  var toParentNode = Unsafe_Coerce.unsafeCoerce;
  var toEventTarget = Unsafe_Coerce.unsafeCoerce;
  var toDocument = Unsafe_Coerce.unsafeCoerce;
  var readyState = (function () {
      var $0 = Data_Functor.map(Effect.functorEffect)((function () {
          var $2 = Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value);
          return function ($3) {
              return $2(Web_HTML_HTMLDocument_ReadyState.parse($3));
          };
      })());
      return function ($1) {
          return $0($foreign["_readyState"]($1));
      };
  })();
  exports["toDocument"] = toDocument;
  exports["toParentNode"] = toParentNode;
  exports["toEventTarget"] = toEventTarget;
  exports["readyState"] = readyState;
})(PS);
(function(exports) {
  "use strict";

  exports._read = function (nothing, just, value) {
    var tag = Object.prototype.toString.call(value);
    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
      return just(value);
    } else {
      return nothing;
    }
  };

  exports.focus = function (elt) {
    return function () {
      return elt.focus();
    };
  };

  exports.blur = function (elt) {
    return function () {
      return elt.blur();
    };
  };
})(PS["Web.HTML.HTMLElement"] = PS["Web.HTML.HTMLElement"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.HTMLElement"] = $PS["Web.HTML.HTMLElement"] || {};
  var exports = $PS["Web.HTML.HTMLElement"];
  var $foreign = $PS["Web.HTML.HTMLElement"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                   
  var toNode = Unsafe_Coerce.unsafeCoerce;
  var fromElement = function (x) {
      return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
  };
  exports["fromElement"] = fromElement;
  exports["toNode"] = toNode;
  exports["focus"] = $foreign.focus;
  exports["blur"] = $foreign.blur;
})(PS);
(function(exports) {
  "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };

  exports.location = function (window) {
    return function () {
      return window.location;
    };
  };
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.Window"] = $PS["Web.HTML.Window"] || {};
  var exports = $PS["Web.HTML.Window"];
  var $foreign = $PS["Web.HTML.Window"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var toEventTarget = Unsafe_Coerce.unsafeCoerce;
  exports["toEventTarget"] = toEventTarget;
  exports["document"] = $foreign.document;
  exports["location"] = $foreign.location;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.Aff.Util"] = $PS["Halogen.Aff.Util"] || {};
  var exports = $PS["Halogen.Aff.Util"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Web_DOM_ParentNode = $PS["Web.DOM.ParentNode"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_Event_EventTypes = $PS["Web.HTML.Event.EventTypes"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLDocument_ReadyState = $PS["Web.HTML.HTMLDocument.ReadyState"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var selectElement = function (query) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Bind.bindFlipped(Effect.bindEffect)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)((function () {
          var $2 = Web_DOM_ParentNode.querySelector(query);
          return function ($3) {
              return $2(Web_HTML_HTMLDocument.toParentNode($3));
          };
      })())(Web_HTML_Window.document))(Web_HTML.window)))(function (mel) {
          return Control_Applicative.pure(Effect_Aff.applicativeAff)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(mel));
      });
  };
  var runHalogenAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
  var awaitLoad = Effect_Aff.makeAff(function (callback) {
      return function __do() {
          var rs = Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_HTMLDocument.readyState)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))();
          if (rs instanceof Web_HTML_HTMLDocument_ReadyState.Loading) {
              var et = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
              var listener = Web_Event_EventTarget.eventListener(function (v) {
                  return callback(new Data_Either.Right(Data_Unit.unit));
              })();
              Web_Event_EventTarget.addEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et)();
              return Effect_Aff.effectCanceler(Web_Event_EventTarget.removeEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et));
          };
          callback(new Data_Either.Right(Data_Unit.unit))();
          return Effect_Aff.nonCanceler;
      };
  });
  var awaitBody = Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(awaitLoad)(function () {
      return Control_Bind.bind(Effect_Aff.bindAff)(selectElement("body"))(function (body) {
          return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Could not find body")))(Control_Applicative.pure(Effect_Aff.applicativeAff))(body);
      });
  });
  exports["awaitBody"] = awaitBody;
  exports["runHalogenAff"] = runHalogenAff;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.VDom.Machine"] = $PS["Halogen.VDom.Machine"] || {};
  var exports = $PS["Halogen.VDom.Machine"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var Step = (function () {
      function Step(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Step.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Step(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Step;
  })();
  var unStep = Unsafe_Coerce.unsafeCoerce;
  var step = function (v, a) {
      return v.value2(v.value1, a);
  };
  var mkStep = Unsafe_Coerce.unsafeCoerce;
  var halt = function (v) {
      return v.value3(v.value1);
  };
  var extract = unStep(function (v) {
      return v.value0;
  });
  exports["Step"] = Step;
  exports["mkStep"] = mkStep;
  exports["unStep"] = unStep;
  exports["extract"] = extract;
  exports["step"] = step;
  exports["halt"] = halt;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeGetAny = function (key, obj) {
    return obj[key];
  };

  exports.unsafeHasAny = function (key, obj) {
    return obj.hasOwnProperty(key);
  };

  exports.unsafeSetAny = function (key, val, obj) {
      obj[key] = val;
  };

  exports.forE = function (a, f) {
    var b = [];
    for (var i = 0; i < a.length; i++) {
      b.push(f(i, a[i]));
    }
    return b;
  };

  exports.forEachE = function (a, f) {
    for (var i = 0; i < a.length; i++) {
      f(a[i]);
    }
  };

  exports.forInE = function (o, f) {
    var ks = Object.keys(o);
    for (var i = 0; i < ks.length; i++) {
      var k = ks[i];
      f(k, o[k]);
    }
  };

  exports.diffWithIxE = function (a1, a2, f1, f2, f3) {
    var a3 = [];
    var l1 = a1.length;
    var l2 = a2.length;
    var i  = 0;
    while (1) {
      if (i < l1) {
        if (i < l2) {
          a3.push(f1(i, a1[i], a2[i]));
        } else {
          f2(i, a1[i]);
        }
      } else if (i < l2) {
        a3.push(f3(i, a2[i]));
      } else {
        break;
      }
      i++;
    }
    return a3;
  };

  exports.strMapWithIxE = function (as, fk, f) {
    var o = {};
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      o[k] = f(k, i, a);
    }
    return o;
  };

  exports.diffWithKeyAndIxE = function (o1, as, fk, f1, f2, f3) {
    var o2 = {};
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      if (o1.hasOwnProperty(k)) {
        o2[k] = f1(k, i, o1[k], a);
      } else {
        o2[k] = f3(k, i, a);
      }
    }
    for (var k in o1) {
      if (k in o2) {
        continue;
      }
      f2(k, o1[k]);
    }
    return o2;
  };

  exports.refEq = function (a, b) {
    return a === b;
  };

  exports.createTextNode = function (s, doc) {
    return doc.createTextNode(s);
  };

  exports.setTextContent = function (s, n) {
    n.textContent = s;
  };

  exports.createElement = function (ns, name, doc) {
    if (ns != null) {
      return doc.createElementNS(ns, name);
    } else {
      return doc.createElement(name)
    }
  };

  exports.insertChildIx = function (i, a, b) {
    var n = b.childNodes.item(i) || null;
    if (n !== a) {
      b.insertBefore(a, n);
    }
  };

  exports.removeChild = function (a, b) {
    if (b && a.parentNode === b) {
      b.removeChild(a);
    }
  };

  exports.parentNode = function (a) {
    return a.parentNode;
  };

  exports.setAttribute = function (ns, attr, val, el) {
    if (ns != null) {
      el.setAttributeNS(ns, attr, val);
    } else {
      el.setAttribute(attr, val);
    }
  };

  exports.removeAttribute = function (ns, attr, el) {
    if (ns != null) {
      el.removeAttributeNS(ns, attr);
    } else {
      el.removeAttribute(attr);
    }
  };

  exports.hasAttribute = function (ns, attr, el) {
    if (ns != null) {
      return el.hasAttributeNS(ns, attr);
    } else {
      return el.hasAttribute(attr);
    }
  };

  exports.addEventListener = function (ev, listener, el) {
    el.addEventListener(ev, listener, false);
  };

  exports.removeEventListener = function (ev, listener, el) {
    el.removeEventListener(ev, listener, false);
  };

  exports.jsUndefined = void 0;
})(PS["Halogen.VDom.Util"] = PS["Halogen.VDom.Util"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.VDom.Util"] = $PS["Halogen.VDom.Util"] || {};
  var exports = $PS["Halogen.VDom.Util"];
  var $foreign = $PS["Halogen.VDom.Util"];
  var Foreign_Object_ST = $PS["Foreign.Object.ST"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var unsafeLookup = $foreign.unsafeGetAny;
  var unsafeFreeze = Unsafe_Coerce.unsafeCoerce;
  var pokeMutMap = $foreign.unsafeSetAny;
  var newMutMap = Foreign_Object_ST["new"];
  exports["newMutMap"] = newMutMap;
  exports["pokeMutMap"] = pokeMutMap;
  exports["unsafeFreeze"] = unsafeFreeze;
  exports["unsafeLookup"] = unsafeLookup;
  exports["unsafeGetAny"] = $foreign.unsafeGetAny;
  exports["unsafeHasAny"] = $foreign.unsafeHasAny;
  exports["unsafeSetAny"] = $foreign.unsafeSetAny;
  exports["forE"] = $foreign.forE;
  exports["forEachE"] = $foreign.forEachE;
  exports["forInE"] = $foreign.forInE;
  exports["diffWithIxE"] = $foreign.diffWithIxE;
  exports["diffWithKeyAndIxE"] = $foreign.diffWithKeyAndIxE;
  exports["strMapWithIxE"] = $foreign.strMapWithIxE;
  exports["refEq"] = $foreign.refEq;
  exports["createTextNode"] = $foreign.createTextNode;
  exports["setTextContent"] = $foreign.setTextContent;
  exports["createElement"] = $foreign.createElement;
  exports["insertChildIx"] = $foreign.insertChildIx;
  exports["removeChild"] = $foreign.removeChild;
  exports["parentNode"] = $foreign.parentNode;
  exports["setAttribute"] = $foreign.setAttribute;
  exports["removeAttribute"] = $foreign.removeAttribute;
  exports["hasAttribute"] = $foreign.hasAttribute;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
  exports["jsUndefined"] = $foreign.jsUndefined;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.VDom.DOM.Prop"] = $PS["Halogen.VDom.DOM.Prop"] || {};
  var exports = $PS["Halogen.VDom.DOM.Prop"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Foreign = $PS["Foreign"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];                
  var Created = (function () {
      function Created(value0) {
          this.value0 = value0;
      };
      Created.create = function (value0) {
          return new Created(value0);
      };
      return Created;
  })();
  var Removed = (function () {
      function Removed(value0) {
          this.value0 = value0;
      };
      Removed.create = function (value0) {
          return new Removed(value0);
      };
      return Removed;
  })();
  var Attribute = (function () {
      function Attribute(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Attribute.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Attribute(value0, value1, value2);
              };
          };
      };
      return Attribute;
  })();
  var Property = (function () {
      function Property(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Property.create = function (value0) {
          return function (value1) {
              return new Property(value0, value1);
          };
      };
      return Property;
  })();
  var Handler = (function () {
      function Handler(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Handler.create = function (value0) {
          return function (value1) {
              return new Handler(value0, value1);
          };
      };
      return Handler;
  })();
  var Ref = (function () {
      function Ref(value0) {
          this.value0 = value0;
      };
      Ref.create = function (value0) {
          return new Ref(value0);
      };
      return Ref;
  })();
  var unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;
  var setProperty = Halogen_VDom_Util.unsafeSetAny;
  var removeProperty = function (key, el) {
      var v = Halogen_VDom_Util.hasAttribute(Data_Nullable["null"], key, el);
      if (v) {
          return Halogen_VDom_Util.removeAttribute(Data_Nullable["null"], key, el);
      };
      var v1 = Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));
      if (v1 === "string") {
          return Halogen_VDom_Util.unsafeSetAny(key, "", el);
      };
      if (key === "rowSpan") {
          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
      };
      if (key === "colSpan") {
          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
      };
      return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);
  };
  var propToStrKey = function (v) {
      if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) {
          return "attr/" + (v.value0.value0 + (":" + v.value1));
      };
      if (v instanceof Attribute) {
          return "attr/:" + v.value1;
      };
      if (v instanceof Property) {
          return "prop/" + v.value0;
      };
      if (v instanceof Handler) {
          return "handler/" + v.value0;
      };
      if (v instanceof Ref) {
          return "ref";
      };
      throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): " + [ v.constructor.name ]);
  };
  var propFromString = Unsafe_Coerce.unsafeCoerce;
  var propFromInt = Unsafe_Coerce.unsafeCoerce;
  var propFromBoolean = Unsafe_Coerce.unsafeCoerce;
  var buildProp = function (emit) {
      return function (el) {
          var removeProp = function (prevEvents) {
              return function (v, v1) {
                  if (v1 instanceof Attribute) {
                      return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);
                  };
                  if (v1 instanceof Property) {
                      return removeProperty(v1.value0, el);
                  };
                  if (v1 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);
                      return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);
                  };
                  if (v1 instanceof Ref) {
                      return Data_Unit.unit;
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): " + [ v1.constructor.name ]);
              };
          };
          var mbEmit = function (v) {
              if (v instanceof Data_Maybe.Just) {
                  return emit(v.value0)();
              };
              return Data_Unit.unit;
          };
          var haltProp = function (state) {
              var v = Foreign_Object.lookup("ref")(state.props);
              if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref) {
                  return mbEmit(v.value0.value0(new Removed(el)));
              };
              return Data_Unit.unit;
          };
          var diffProp = function (prevEvents, events) {
              return function (v, v1, v11, v2) {
                  if (v11 instanceof Attribute && v2 instanceof Attribute) {
                      var $56 = v11.value2 === v2.value2;
                      if ($56) {
                          return v2;
                      };
                      Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                      return v2;
                  };
                  if (v11 instanceof Property && v2 instanceof Property) {
                      var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);
                      if (v4) {
                          return v2;
                      };
                      if (v2.value0 === "value") {
                          var elVal = unsafeGetProperty("value", el);
                          var $65 = Halogen_VDom_Util.refEq(elVal, v2.value1);
                          if ($65) {
                              return v2;
                          };
                          setProperty(v2.value0, v2.value1, el);
                          return v2;
                      };
                      setProperty(v2.value0, v2.value1, el);
                      return v2;
                  };
                  if (v11 instanceof Handler && v2 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);
                      Effect_Ref.write(v2.value1)(Data_Tuple.snd(handler))();
                      Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events);
                      return v2;
                  };
                  return v2;
              };
          };
          var applyProp = function (events) {
              return function (v, v1, v2) {
                  if (v2 instanceof Attribute) {
                      Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                      return v2;
                  };
                  if (v2 instanceof Property) {
                      setProperty(v2.value0, v2.value1, el);
                      return v2;
                  };
                  if (v2 instanceof Handler) {
                      var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);
                      if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {
                          Effect_Ref.write(v2.value1)(Data_Tuple.snd(v3))();
                          return v2;
                      };
                      var ref = Effect_Ref["new"](v2.value1)();
                      var listener = Web_Event_EventTarget.eventListener(function (ev) {
                          return function __do() {
                              var f$prime = Effect_Ref.read(ref)();
                              return mbEmit(f$prime(ev));
                          };
                      })();
                      Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(listener, ref), events);
                      Halogen_VDom_Util.addEventListener(v2.value0, listener, el);
                      return v2;
                  };
                  if (v2 instanceof Ref) {
                      mbEmit(v2.value0(new Created(el)));
                      return v2;
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): " + [ v2.constructor.name ]);
              };
          };
          var patchProp = function (state, ps2) {
              var events = Halogen_VDom_Util.newMutMap();
              var onThis = removeProp(state.events);
              var onThese = diffProp(state.events, events);
              var onThat = applyProp(events);
              var props = Halogen_VDom_Util.diffWithKeyAndIxE(state.props, ps2, propToStrKey, onThese, onThis, onThat);
              var nextState = {
                  events: Halogen_VDom_Util.unsafeFreeze(events),
                  props: props
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, nextState, patchProp, haltProp));
          };
          var renderProp = function (ps1) {
              var events = Halogen_VDom_Util.newMutMap();
              var ps1$prime = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(events));
              var state = {
                  events: Halogen_VDom_Util.unsafeFreeze(events),
                  props: ps1$prime
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, state, patchProp, haltProp));
          };
          return renderProp;
      };
  };
  exports["Attribute"] = Attribute;
  exports["Property"] = Property;
  exports["Handler"] = Handler;
  exports["Ref"] = Ref;
  exports["Created"] = Created;
  exports["Removed"] = Removed;
  exports["propFromString"] = propFromString;
  exports["propFromBoolean"] = propFromBoolean;
  exports["propFromInt"] = propFromInt;
  exports["buildProp"] = buildProp;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.VDom.Types"] = $PS["Halogen.VDom.Types"] || {};
  var exports = $PS["Halogen.VDom.Types"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Text = (function () {
      function Text(value0) {
          this.value0 = value0;
      };
      Text.create = function (value0) {
          return new Text(value0);
      };
      return Text;
  })();
  var Elem = (function () {
      function Elem(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Elem.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Elem(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Elem;
  })();
  var Keyed = (function () {
      function Keyed(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Keyed.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Keyed(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Keyed;
  })();
  var Widget = (function () {
      function Widget(value0) {
          this.value0 = value0;
      };
      Widget.create = function (value0) {
          return new Widget(value0);
      };
      return Widget;
  })();
  var Grafted = (function () {
      function Grafted(value0) {
          this.value0 = value0;
      };
      Grafted.create = function (value0) {
          return new Grafted(value0);
      };
      return Grafted;
  })();
  var Graft = (function () {
      function Graft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Graft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Graft(value0, value1, value2);
              };
          };
      };
      return Graft;
  })();
  var unGraft = function (f) {
      return function ($58) {
          return f($58);
      };
  };           
  var graft = Unsafe_Coerce.unsafeCoerce;
  var bifunctorGraft = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return unGraft(function (v) {
              return graft(new Graft(function ($60) {
                  return f(v.value0($60));
              }, function ($61) {
                  return g(v.value1($61));
              }, v.value2));
          });
      };
  });
  var runGraft = unGraft(function (v) {
      var go = function (v2) {
          if (v2 instanceof Text) {
              return new Text(v2.value0);
          };
          if (v2 instanceof Elem) {
              return new Elem(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(go)(v2.value3));
          };
          if (v2 instanceof Keyed) {
              return new Keyed(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value3));
          };
          if (v2 instanceof Widget) {
              return new Widget(v.value1(v2.value0));
          };
          if (v2 instanceof Grafted) {
              return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): " + [ v2.constructor.name ]);
      };
      return go(v.value2);
  });
  exports["Text"] = Text;
  exports["Elem"] = Elem;
  exports["Keyed"] = Keyed;
  exports["Widget"] = Widget;
  exports["Grafted"] = Grafted;
  exports["runGraft"] = runGraft;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.HTML.Core"] = $PS["Halogen.HTML.Core"] || {};
  var exports = $PS["Halogen.HTML.Core"];
  var DOM_HTML_Indexed_ButtonType = $PS["DOM.HTML.Indexed.ButtonType"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var DOM_HTML_Indexed_OnOff = $PS["DOM.HTML.Indexed.OnOff"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Types = $PS["Halogen.VDom.Types"];
  var HTML = function (x) {
      return x;
  };
  var ClassName = function (x) {
      return x;
  };
  var IsProp = function (toPropValue) {
      this.toPropValue = toPropValue;
  };
  var widget = function ($30) {
      return HTML(Halogen_VDom_Types.Widget.create($30));
  };
  var toPropValue = function (dict) {
      return dict.toPropValue;
  };
  var text = function ($31) {
      return HTML(Halogen_VDom_Types.Text.create($31));
  };                                                      
  var ref = function (f) {
      return Halogen_VDom_DOM_Prop.Ref.create(function ($32) {
          return f((function (v) {
              if (v instanceof Halogen_VDom_DOM_Prop.Created) {
                  return new Data_Maybe.Just(v.value0);
              };
              if (v instanceof Halogen_VDom_DOM_Prop.Removed) {
                  return Data_Maybe.Nothing.value;
              };
              throw new Error("Failed pattern match at Halogen.HTML.Core (line 104, column 21 - line 106, column 23): " + [ v.constructor.name ]);
          })($32));
      });
  };
  var prop = function (dictIsProp) {
      return function (v) {
          var $33 = Halogen_VDom_DOM_Prop.Property.create(v);
          var $34 = toPropValue(dictIsProp);
          return function ($35) {
              return $33($34($35));
          };
      };
  };           
  var newtypeHTML = new Data_Newtype.Newtype(function (n) {
      return n;
  }, HTML);
  var newtypeClassName = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ClassName);
  var isPropString = new IsProp(Halogen_VDom_DOM_Prop.propFromString);
  var isPropOnOff = new IsProp(function ($43) {
      return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_OnOff.renderOnOff($43));
  });
  var isPropInt = new IsProp(Halogen_VDom_DOM_Prop.propFromInt);
  var isPropInputType = new IsProp(function ($49) {
      return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputType.renderInputType($49));
  });
  var isPropButtonType = new IsProp(function ($54) {
      return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_ButtonType.renderButtonType($54));
  });
  var isPropBoolean = new IsProp(Halogen_VDom_DOM_Prop.propFromBoolean);
  var handler = Halogen_VDom_DOM_Prop.Handler.create;
  var element = function (ns) {
      return function (name) {
          return function (props) {
              return function (children) {
                  return new Halogen_VDom_Types.Elem(ns, name, props, children);
              };
          };
      };
  };                                                                             
  var attr = function (ns) {
      return function (v) {
          return Halogen_VDom_DOM_Prop.Attribute.create(ns)(v);
      };
  };
  exports["widget"] = widget;
  exports["text"] = text;
  exports["element"] = element;
  exports["prop"] = prop;
  exports["attr"] = attr;
  exports["handler"] = handler;
  exports["ref"] = ref;
  exports["IsProp"] = IsProp;
  exports["ClassName"] = ClassName;
  exports["newtypeHTML"] = newtypeHTML;
  exports["isPropString"] = isPropString;
  exports["isPropInt"] = isPropInt;
  exports["isPropBoolean"] = isPropBoolean;
  exports["isPropButtonType"] = isPropButtonType;
  exports["isPropInputType"] = isPropInputType;
  exports["isPropOnOff"] = isPropOnOff;
  exports["newtypeClassName"] = newtypeClassName;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.HTML"] = $PS["Halogen.HTML"] || {};
  var exports = $PS["Halogen.HTML"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var slot = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (label) {
                  return function (p) {
                      return function (component) {
                          return function (input) {
                              return function (outputQuery) {
                                  return Halogen_HTML_Core.widget(new Halogen_Component.ComponentSlot(Halogen_Component.componentSlot()(dictIsSymbol)(dictOrd)(label)(p)(component)(input)(outputQuery)));
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var fromPlainHTML = Unsafe_Coerce.unsafeCoerce;
  exports["fromPlainHTML"] = fromPlainHTML;
  exports["slot"] = slot;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.HTML.Elements"] = $PS["Halogen.HTML.Elements"] || {};
  var exports = $PS["Halogen.HTML.Elements"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];             
  var elementNS = (function () {
      var $14 = Control_Applicative.pure(Data_Maybe.applicativeMaybe);
      return function ($15) {
          return Halogen_HTML_Core.element($14($15));
      };
  })();
  var element = Halogen_HTML_Core.element(Data_Maybe.Nothing.value);
  var fieldset = element("fieldset");
  var h1 = element("h1");
  var h2 = element("h2");
  var h3 = element("h3");
  var h4 = element("h4");
  var header = element("header");
  var header_ = header([  ]);
  var img = function (props) {
      return element("img")(props)([  ]);
  };
  var input = function (props) {
      return element("input")(props)([  ]);
  };                   
  var label = element("label");
  var legend = element("legend");
  var li = element("li");
  var li_ = li([  ]);      
  var nav = element("nav");  
  var p = element("p");
  var p_ = p([  ]);          
  var section = element("section");
  var span = element("span");
  var span_ = span([  ]);
  var table = element("table");
  var td = element("td");
  var textarea = function (es) {
      return element("textarea")(es)([  ]);
  };                       
  var th = element("th");  
  var tr = element("tr");
  var tr_ = tr([  ]);
  var ul = element("ul");
  var ul_ = ul([  ]);
  var div = element("div");
  var div_ = div([  ]);
  var code = element("code");
  var code_ = code([  ]);
  var button = element("button");
  var body = element("body");
  var body_ = body([  ]);
  var a = element("a");
  exports["elementNS"] = elementNS;
  exports["a"] = a;
  exports["body_"] = body_;
  exports["button"] = button;
  exports["code_"] = code_;
  exports["div"] = div;
  exports["div_"] = div_;
  exports["fieldset"] = fieldset;
  exports["h1"] = h1;
  exports["h2"] = h2;
  exports["h3"] = h3;
  exports["h4"] = h4;
  exports["header"] = header;
  exports["header_"] = header_;
  exports["img"] = img;
  exports["input"] = input;
  exports["label"] = label;
  exports["legend"] = legend;
  exports["li"] = li;
  exports["li_"] = li_;
  exports["nav"] = nav;
  exports["p"] = p;
  exports["p_"] = p_;
  exports["section"] = section;
  exports["span"] = span;
  exports["span_"] = span_;
  exports["table"] = table;
  exports["td"] = td;
  exports["textarea"] = textarea;
  exports["th"] = th;
  exports["tr_"] = tr_;
  exports["ul"] = ul;
  exports["ul_"] = ul_;
})(PS);
(function(exports) {
  "use strict";

  exports._currentTarget = function (e) {
    return e.currentTarget;
  };

  exports.preventDefault = function (e) {
    return function () {
      return e.preventDefault();
    };
  };

  exports.stopPropagation = function (e) {
    return function () {
      return e.stopPropagation();
    };
  };
})(PS["Web.Event.Event"] = PS["Web.Event.Event"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.Event.Event"] = $PS["Web.Event.Event"] || {};
  var exports = $PS["Web.Event.Event"];
  var $foreign = $PS["Web.Event.Event"];
  var Data_Nullable = $PS["Data.Nullable"];
  var currentTarget = function ($8) {
      return Data_Nullable.toMaybe($foreign["_currentTarget"]($8));
  };
  exports["currentTarget"] = currentTarget;
  exports["stopPropagation"] = $foreign.stopPropagation;
  exports["preventDefault"] = $foreign.preventDefault;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.UIEvent.FocusEvent.EventTypes"] = $PS["Web.UIEvent.FocusEvent.EventTypes"] || {};
  var exports = $PS["Web.UIEvent.FocusEvent.EventTypes"];
  var focus = "focus";
  exports["focus"] = focus;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.UIEvent.KeyboardEvent.EventTypes"] = $PS["Web.UIEvent.KeyboardEvent.EventTypes"] || {};
  var exports = $PS["Web.UIEvent.KeyboardEvent.EventTypes"];
  var keydown = "keydown";
  exports["keydown"] = keydown;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.UIEvent.MouseEvent.EventTypes"] = $PS["Web.UIEvent.MouseEvent.EventTypes"] || {};
  var exports = $PS["Web.UIEvent.MouseEvent.EventTypes"];
  var mouseover = "mouseover";  
  var mousedown = "mousedown";
  var click = "click";
  exports["click"] = click;
  exports["mousedown"] = mousedown;
  exports["mouseover"] = mouseover;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.HTML.Events"] = $PS["Halogen.HTML.Events"] || {};
  var exports = $PS["Halogen.HTML.Events"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Foreign = $PS["Foreign"];
  var Foreign_Index = $PS["Foreign.Index"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Event_Event = $PS["Web.Event.Event"];
  var Web_HTML_Event_EventTypes = $PS["Web.HTML.Event.EventTypes"];
  var Web_UIEvent_FocusEvent_EventTypes = $PS["Web.UIEvent.FocusEvent.EventTypes"];
  var Web_UIEvent_KeyboardEvent_EventTypes = $PS["Web.UIEvent.KeyboardEvent.EventTypes"];
  var Web_UIEvent_MouseEvent_EventTypes = $PS["Web.UIEvent.MouseEvent.EventTypes"];
  var mouseHandler = Unsafe_Coerce.unsafeCoerce;
  var keyHandler = Unsafe_Coerce.unsafeCoerce;
  var handler = function (et) {
      var $1 = Halogen_HTML_Core.handler(et);
      var $2 = Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Query_Input.Action.create));
      return function ($3) {
          return $1($2($3));
      };
  };                             
  var onChange = handler(Web_HTML_Event_EventTypes.change);
  var onClick = (function () {
      var $4 = handler(Web_UIEvent_MouseEvent_EventTypes.click);
      return function ($5) {
          return $4(mouseHandler($5));
      };
  })();                                                      
  var onKeyDown = (function () {
      var $12 = handler(Web_UIEvent_KeyboardEvent_EventTypes.keydown);
      return function ($13) {
          return $12(keyHandler($13));
      };
  })();                                                
  var onMouseDown = (function () {
      var $16 = handler(Web_UIEvent_MouseEvent_EventTypes.mousedown);
      return function ($17) {
          return $16(mouseHandler($17));
      };
  })();
  var onMouseOver = (function () {
      var $26 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseover);
      return function ($27) {
          return $26(mouseHandler($27));
      };
  })();
  var focusHandler = Unsafe_Coerce.unsafeCoerce;
  var onBlur = (function () {
      var $44 = handler(Web_HTML_Event_EventTypes.blur);
      return function ($45) {
          return $44(focusHandler($45));
      };
  })();
  var onFocus = (function () {
      var $46 = handler(Web_UIEvent_FocusEvent_EventTypes.focus);
      return function ($47) {
          return $46(focusHandler($47));
      };
  })();
  var addForeignPropHandler = function (key) {
      return function (prop) {
          return function (reader) {
              return function (f) {
                  var go = function (a) {
                      return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(reader)(Foreign_Index.readProp(prop))(Foreign.unsafeToForeign(a));
                  };
                  return handler(key)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_Event_Event.currentTarget)(function (e) {
                      return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(f)(Control_Monad_Except.runExcept(go(e)));
                  }));
              };
          };
      };
  };                                                                                                       
  var onValueInput = addForeignPropHandler(Web_HTML_Event_EventTypes.input)("value")(Foreign.readString);
  exports["onChange"] = onChange;
  exports["onClick"] = onClick;
  exports["onMouseDown"] = onMouseDown;
  exports["onMouseOver"] = onMouseOver;
  exports["onKeyDown"] = onKeyDown;
  exports["onBlur"] = onBlur;
  exports["onFocus"] = onFocus;
  exports["onValueInput"] = onValueInput;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.HTML.Properties"] = $PS["Halogen.HTML.Properties"] || {};
  var exports = $PS["Halogen.HTML.Properties"];
  var DOM_HTML_Indexed_OnOff = $PS["DOM.HTML.Indexed.OnOff"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];
  var ref = (function () {
      var go = function (p) {
          return function (mel) {
              return new Data_Maybe.Just(new Halogen_Query_Input.RefUpdate(p, mel));
          };
      };
      return function ($11) {
          return Halogen_HTML_Core.ref(go($11));
      };
  })();
  var prop = function (dictIsProp) {
      return Halogen_HTML_Core.prop(dictIsProp);
  };                                                                   
  var src = prop(Halogen_HTML_Core.isPropString)("src");     
  var tabIndex = prop(Halogen_HTML_Core.isPropInt)("tabIndex");
  var type_ = function (dictIsProp) {
      return prop(dictIsProp)("type");
  };
  var value = prop(Halogen_HTML_Core.isPropString)("value");  
  var placeholder = prop(Halogen_HTML_Core.isPropString)("placeholder");
  var name = prop(Halogen_HTML_Core.isPropString)("name"); 
  var id_ = prop(Halogen_HTML_Core.isPropString)("id");
  var href = prop(Halogen_HTML_Core.isPropString)("href");
  var $$for = prop(Halogen_HTML_Core.isPropString)("htmlFor");    
  var disabled = prop(Halogen_HTML_Core.isPropBoolean)("disabled");
  var classes = (function () {
      var $14 = prop(Halogen_HTML_Core.isPropString)("className");
      var $15 = Data_String_Common.joinWith(" ");
      var $16 = Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName));
      return function ($17) {
          return $14($15($16($17)));
      };
  })();
  var class_ = (function () {
      var $18 = prop(Halogen_HTML_Core.isPropString)("className");
      var $19 = Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName);
      return function ($20) {
          return $18($19($20));
      };
  })();
  var checked = prop(Halogen_HTML_Core.isPropBoolean)("checked");    
  var autocomplete = (function () {
      var $21 = prop(Halogen_HTML_Core.isPropOnOff)("autocomplete");
      return function ($22) {
          return $21((function (b) {
              if (b) {
                  return DOM_HTML_Indexed_OnOff.On.value;
              };
              return DOM_HTML_Indexed_OnOff.Off.value;
          })($22));
      };
  })();
  var attr = Halogen_HTML_Core.attr(Data_Maybe.Nothing.value);
  exports["prop"] = prop;
  exports["attr"] = attr;
  exports["ref"] = ref;
  exports["class_"] = class_;
  exports["classes"] = classes;
  exports["for"] = $$for;
  exports["href"] = href;
  exports["id_"] = id_;
  exports["name"] = name;
  exports["src"] = src;
  exports["type_"] = type_;
  exports["value"] = value;
  exports["disabled"] = disabled;
  exports["checked"] = checked;
  exports["placeholder"] = placeholder;
  exports["autocomplete"] = autocomplete;
  exports["tabIndex"] = tabIndex;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.HTML.Properties.ARIA"] = $PS["Halogen.HTML.Properties.ARIA"] || {};
  var exports = $PS["Halogen.HTML.Properties.ARIA"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];    
  var label = Halogen_HTML_Properties.attr("aria-label");    
  var hidden = Halogen_HTML_Properties.attr("aria-hidden");
  exports["hidden"] = hidden;
  exports["label"] = label;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.Query"] = $PS["Halogen.Query"] || {};
  var exports = $PS["Halogen.Query"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];                
  var tell = function (act) {
      return act(Data_Unit.unit);
  };
  var request = function (req) {
      return req(Control_Category.identity(Control_Category.categoryFn));
  };
  var getHTMLElementRef = (function () {
      var $1 = Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(function (v) {
          return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(v);
      });
      return function ($2) {
          return $1(Halogen_Query_HalogenM.getRef($2));
      };
  })();
  exports["tell"] = tell;
  exports["request"] = request;
  exports["getHTMLElementRef"] = getHTMLElementRef;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.Storybook.Proxy"] = $PS["Halogen.Storybook.Proxy"] || {};
  var exports = $PS["Halogen.Storybook.Proxy"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];                
  var _child = Data_Symbol.SProxy.value;
  var render = function (innerComponent) {
      return function (state) {
          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "child";
          }))(Data_Ord.ordUnit)(_child)(Data_Unit.unit)(innerComponent)(state)(Data_Function["const"](Data_Maybe.Nothing.value));
      };
  };
  var proxy = function (innerComponent) {
      return Halogen_Component.mkComponent({
          initialState: Control_Category.identity(Control_Category.categoryFn),
          render: render(innerComponent),
          "eval": Halogen_Component.mkEval(Halogen_Component.defaultEval)
      });
  };
  exports["proxy"] = proxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.Element"] = $PS["Web.DOM.Element"] || {};
  var exports = $PS["Web.DOM.Element"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                   
  var toNode = Unsafe_Coerce.unsafeCoerce;
  exports["toNode"] = toNode;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.VDom.DOM"] = $PS["Halogen.VDom.DOM"] || {};
  var exports = $PS["Halogen.VDom.DOM"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Types = $PS["Halogen.VDom.Types"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];
  var Web_DOM_Element = $PS["Web.DOM.Element"];
  var haltWidget = function (v) {
      return Halogen_VDom_Machine.halt(v.widget);
  };
  var patchWidget = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchWidget(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Widget) {
          var res = Halogen_VDom_Machine.step(state.widget, vdom.value0);
          var res$prime = Halogen_VDom_Machine.unStep(function (v) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v.value0, {
                  build: state.build,
                  widget: res
              }, patchWidget, haltWidget));
          })(res);
          return res$prime;
      };
      haltWidget(state);
      return state.build(vdom);
  };
  var haltText = function (v) {
      var parent = Halogen_VDom_Util.parentNode(v.node);
      return Halogen_VDom_Util.removeChild(v.node, parent);
  };
  var patchText = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchText(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Text) {
          if (state.value === vdom.value0) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, state, patchText, haltText));
          };
          if (Data_Boolean.otherwise) {
              var nextState = {
                  build: state.build,
                  node: state.node,
                  value: vdom.value0
              };
              Halogen_VDom_Util.setTextContent(vdom.value0, state.node);
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchText, haltText));
          };
      };
      haltText(state);
      return state.build(vdom);
  };
  var haltKeyed = function (v) {
      var parent = Halogen_VDom_Util.parentNode(v.node);
      Halogen_VDom_Util.removeChild(v.node, parent);
      Halogen_VDom_Util.forInE(v.children, function (v1, s) {
          return Halogen_VDom_Machine.halt(s);
      });
      return Halogen_VDom_Machine.halt(v.attrs);
  };
  var haltElem = function (v) {
      var parent = Halogen_VDom_Util.parentNode(v.node);
      Halogen_VDom_Util.removeChild(v.node, parent);
      Halogen_VDom_Util.forEachE(v.children, Halogen_VDom_Machine.halt);
      return Halogen_VDom_Machine.halt(v.attrs);
  };
  var eqElemSpec = function (ns1, v, ns2, v1) {
      var $56 = v === v1;
      if ($56) {
          if (ns1 instanceof Data_Maybe.Just && (ns2 instanceof Data_Maybe.Just && ns1.value0 === ns2.value0)) {
              return true;
          };
          if (ns1 instanceof Data_Maybe.Nothing && ns2 instanceof Data_Maybe.Nothing) {
              return true;
          };
          return false;
      };
      return false;
  };
  var patchElem = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchElem(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Elem && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
          var v = Data_Array.length(vdom.value3);
          var v1 = Data_Array.length(state.children);
          if (v1 === 0 && v === 0) {
              var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
              var nextState = {
                  build: state.build,
                  node: state.node,
                  attrs: attrs2,
                  ns: vdom.value0,
                  name: vdom.value1,
                  children: state.children
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
          };
          var onThis = function (ix, s) {
              return Halogen_VDom_Machine.halt(s);
          };
          var onThese = function (ix, s, v2) {
              var res = Halogen_VDom_Machine.step(s, v2);
              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var onThat = function (ix, v2) {
              var res = state.build(v2);
              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var children2 = Halogen_VDom_Util.diffWithIxE(state.children, vdom.value3, onThese, onThis, onThat);
          var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
          var nextState = {
              build: state.build,
              node: state.node,
              attrs: attrs2,
              ns: vdom.value0,
              name: vdom.value1,
              children: children2
          };
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
      };
      haltElem(state);
      return state.build(vdom);
  };
  var patchKeyed = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchKeyed(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Keyed && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
          var v = Data_Array.length(vdom.value3);
          if (state.length === 0 && v === 0) {
              var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
              var nextState = {
                  build: state.build,
                  node: state.node,
                  attrs: attrs2,
                  ns: vdom.value0,
                  name: vdom.value1,
                  children: state.children,
                  length: 0
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
          };
          var onThis = function (v2, s) {
              return Halogen_VDom_Machine.halt(s);
          };
          var onThese = function (v2, ix$prime, s, v3) {
              var res = Halogen_VDom_Machine.step(s, v3.value1);
              Halogen_VDom_Util.insertChildIx(ix$prime, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var onThat = function (v2, ix, v3) {
              var res = state.build(v3.value1);
              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var children2 = Halogen_VDom_Util.diffWithKeyAndIxE(state.children, vdom.value3, Data_Tuple.fst, onThese, onThis, onThat);
          var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
          var nextState = {
              build: state.build,
              node: state.node,
              attrs: attrs2,
              ns: vdom.value0,
              name: vdom.value1,
              children: children2,
              length: v
          };
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
      };
      haltKeyed(state);
      return state.build(vdom);
  };
  var buildWidget = function (v, build, w) {
      var res = v.buildWidget(v)(w);
      var res$prime = Halogen_VDom_Machine.unStep(function (v1) {
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v1.value0, {
              build: build,
              widget: res
          }, patchWidget, haltWidget));
      })(res);
      return res$prime;
  };
  var buildText = function (v, build, s) {
      var node = Halogen_VDom_Util.createTextNode(s, v.document);
      var state = {
          build: build,
          node: node,
          value: s
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchText, haltText));
  };
  var buildKeyed = function (v, build, ns1, name1, as1, ch1) {
      var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
      var node = Web_DOM_Element.toNode(el);
      var onChild = function (k, ix, v1) {
          var res = build(v1.value1);
          Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);
          return res;
      };
      var children = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild);
      var attrs = v.buildAttributes(el)(as1);
      var state = {
          build: build,
          node: node,
          attrs: attrs,
          ns: ns1,
          name: name1,
          children: children,
          length: Data_Array.length(ch1)
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchKeyed, haltKeyed));
  };
  var buildElem = function (v, build, ns1, name1, as1, ch1) {
      var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
      var node = Web_DOM_Element.toNode(el);
      var onChild = function (ix, child) {
          var res = build(child);
          Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);
          return res;
      };
      var children = Halogen_VDom_Util.forE(ch1, onChild);
      var attrs = v.buildAttributes(el)(as1);
      var state = {
          build: build,
          node: node,
          attrs: attrs,
          ns: ns1,
          name: name1,
          children: children
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchElem, haltElem));
  };
  var buildVDom = function (spec) {
      var build = function (v) {
          if (v instanceof Halogen_VDom_Types.Text) {
              return buildText(spec, build, v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Elem) {
              return buildElem(spec, build, v.value0, v.value1, v.value2, v.value3);
          };
          if (v instanceof Halogen_VDom_Types.Keyed) {
              return buildKeyed(spec, build, v.value0, v.value1, v.value2, v.value3);
          };
          if (v instanceof Halogen_VDom_Types.Widget) {
              return buildWidget(spec, build, v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Grafted) {
              return build(Halogen_VDom_Types.runGraft(v.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [ v.constructor.name ]);
      };
      return build;
  };
  exports["buildVDom"] = buildVDom;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.VDom.Thunk"] = $PS["Halogen.VDom.Thunk"] || {};
  var exports = $PS["Halogen.VDom.Thunk"];
  var Halogen_VDom_DOM = $PS["Halogen.VDom.DOM"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];        
  var Thunk = (function () {
      function Thunk(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Thunk.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Thunk(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Thunk;
  })();                                          
  var unsafeEqThunk = function (v, v1) {
      return Halogen_VDom_Util.refEq(v.value0, v1.value0) && (Halogen_VDom_Util.refEq(v.value1, v1.value1) && v.value1(v.value3, v1.value3));
  };
  var thunk = function (tid, eqFn, f, a) {
      return new Thunk(tid, eqFn, f, a);
  };
  var runThunk = function (v) {
      return v.value2(v.value3);
  };
  var buildThunk = function (toVDom) {
      var haltThunk = function (state) {
          return Halogen_VDom_Machine.halt(state.vdom);
      };
      var patchThunk = function (state, t2) {
          var $43 = unsafeEqThunk(state.thunk, t2);
          if ($43) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(state.vdom), state, patchThunk, haltThunk));
          };
          var vdom = Halogen_VDom_Machine.step(state.vdom, toVDom(runThunk(t2)));
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {
              vdom: vdom,
              thunk: t2
          }, patchThunk, haltThunk));
      };
      var renderThunk = function (spec) {
          return function (t) {
              var vdom = Halogen_VDom_DOM.buildVDom(spec)(toVDom(runThunk(t)));
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {
                  thunk: t,
                  vdom: vdom
              }, patchThunk, haltThunk));
          };
      };
      return renderThunk;
  };
  exports["buildThunk"] = buildThunk;
})(PS);
(function(exports) {
  "use strict";

  var getEffProp = function (name) {
    return function (node) {
      return function () {
        return node[name];
      };
    };
  };                                                   

  exports._parentNode = getEffProp("parentNode");          

  exports._nextSibling = getEffProp("nextSibling");

  exports.insertBefore = function (node1) {
    return function (node2) {
      return function (parent) {
        return function () {
          return parent.insertBefore(node1, node2);
        };
      };
    };
  };

  exports.appendChild = function (node) {
    return function (parent) {
      return function () {
        return parent.appendChild(node);
      };
    };
  };

  exports.removeChild = function (node) {
    return function (parent) {
      return function () {
        return parent.removeChild(node);
      };
    };
  };
})(PS["Web.DOM.Node"] = PS["Web.DOM.Node"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.Node"] = $PS["Web.DOM.Node"] || {};
  var exports = $PS["Web.DOM.Node"];
  var $foreign = $PS["Web.DOM.Node"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var parentNode = (function () {
      var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      return function ($4) {
          return $3($foreign["_parentNode"]($4));
      };
  })();
  var nextSibling = (function () {
      var $14 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      return function ($15) {
          return $14($foreign["_nextSibling"]($15));
      };
  })();
  exports["parentNode"] = parentNode;
  exports["nextSibling"] = nextSibling;
  exports["insertBefore"] = $foreign.insertBefore;
  exports["appendChild"] = $foreign.appendChild;
  exports["removeChild"] = $foreign.removeChild;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.VDom.Driver"] = $PS["Halogen.VDom.Driver"] || {};
  var exports = $PS["Halogen.VDom.Driver"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Aff_Driver = $PS["Halogen.Aff.Driver"];
  var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_VDom_DOM = $PS["Halogen.VDom.DOM"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Thunk = $PS["Halogen.VDom.Thunk"];
  var Unsafe_Reference = $PS["Unsafe.Reference"];
  var Web_DOM_Node = $PS["Web.DOM.Node"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];
  var substInParent = function (v) {
      return function (v1) {
          return function (v2) {
              if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
                  return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.insertBefore(v)(v1.value0)(v2.value0));
              };
              if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) {
                  return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(v)(v2.value0));
              };
              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
          };
      };
  };
  var removeChild = function (v) {
      return function __do() {
          var npn = Web_DOM_Node.parentNode(v.node)();
          return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function (pn) {
              return Web_DOM_Node.removeChild(v.node)(pn);
          })(npn)();
      };
  };
  var mkSpec = function (handler) {
      return function (renderChildRef) {
          return function (document) {
              var getNode = Halogen_Aff_Driver_State.unRenderStateX(function (v) {
                  return v.node;
              });
              var done = function (st) {
                  if (st instanceof Data_Maybe.Just) {
                      return Halogen_VDom_Machine.halt(st.value0);
                  };
                  return Data_Unit.unit;
              };
              var buildWidget = function (spec) {
                  var buildThunk = Halogen_VDom_Thunk.buildThunk(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeHTML))(spec);
                  var renderComponentSlot = function (cs) {
                      var renderChild = Effect_Ref.read(renderChildRef)();
                      var rsx = renderChild(cs)();
                      var node = getNode(rsx);
                      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, Data_Maybe.Nothing.value, patch, done));
                  };
                  var render = function (slot) {
                      if (slot instanceof Halogen_Component.ComponentSlot) {
                          return renderComponentSlot(slot.value0);
                      };
                      if (slot instanceof Halogen_Component.ThunkSlot) {
                          var step = buildThunk(slot.value0);
                          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step), new Data_Maybe.Just(step), patch, done));
                      };
                      throw new Error("Failed pattern match at Halogen.VDom.Driver (line 85, column 7 - line 90, column 75): " + [ slot.constructor.name ]);
                  };
                  var patch = function (st, slot) {
                      if (st instanceof Data_Maybe.Just) {
                          if (slot instanceof Halogen_Component.ComponentSlot) {
                              Halogen_VDom_Machine.halt(st.value0);
                              return renderComponentSlot(slot.value0);
                          };
                          if (slot instanceof Halogen_Component.ThunkSlot) {
                              var step$prime = Halogen_VDom_Machine.step(st.value0, slot.value0);
                              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step$prime), new Data_Maybe.Just(step$prime), patch, done));
                          };
                          throw new Error("Failed pattern match at Halogen.VDom.Driver (line 98, column 22 - line 104, column 79): " + [ slot.constructor.name ]);
                      };
                      return render(slot);
                  };
                  return render;
              };
              var buildAttributes = Halogen_VDom_DOM_Prop.buildProp(handler);
              return {
                  buildWidget: buildWidget,
                  buildAttributes: buildAttributes,
                  document: document
              };
          };
      };
  };
  var renderSpec = function (document) {
      return function (container) {
          var render = function (handler) {
              return function (child) {
                  return function (v) {
                      return function (v1) {
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return function __do() {
                                  var renderChildRef = Effect_Ref["new"](child)();
                                  var spec = mkSpec(handler)(renderChildRef)(document);
                                  var machine = Halogen_VDom_DOM.buildVDom(spec)(v);
                                  var node = Halogen_VDom_Machine.extract(machine);
                                  Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(node)(Web_HTML_HTMLElement.toNode(container)))();
                                  return {
                                      machine: machine,
                                      node: node,
                                      renderChildRef: renderChildRef
                                  };
                              };
                          };
                          if (v1 instanceof Data_Maybe.Just) {
                              return function __do() {
                                  Effect_Ref.write(child)(v1.value0.renderChildRef)();
                                  var parent = Web_DOM_Node.parentNode(v1.value0.node)();
                                  var nextSib = Web_DOM_Node.nextSibling(v1.value0.node)();
                                  var machine$prime = Halogen_VDom_Machine.step(v1.value0.machine, v);
                                  var newNode = Halogen_VDom_Machine.extract(machine$prime);
                                  Control_Applicative.when(Effect.applicativeEffect)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(nextSib)(parent))();
                                  return {
                                      machine: machine$prime,
                                      node: newNode,
                                      renderChildRef: v1.value0.renderChildRef
                                  };
                              };
                          };
                          throw new Error("Failed pattern match at Halogen.VDom.Driver (line 159, column 5 - line 175, column 80): " + [ v1.constructor.name ]);
                      };
                  };
              };
          };
          return {
              render: render,
              renderChild: Control_Category.identity(Control_Category.categoryFn),
              removeChild: removeChild,
              dispose: removeChild
          };
      };
  };
  var runUI = function (component) {
      return function (i) {
          return function (element) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toDocument)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))))(function (document) {
                  return Halogen_Aff_Driver.runUI(renderSpec(document)(element))(component)(i);
              });
          };
      };
  };
  exports["runUI"] = runUI;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.HTML.Properties"] = $PS["Ocelot.HTML.Properties"] || {};
  var exports = $PS["Ocelot.HTML.Properties"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var startsWith = function (str0) {
      return function (str1) {
          return str0 === Data_String_CodeUnits.take(Data_String_CodeUnits.length(str0))(str1);
      };
  };
  var extract = (function () {
      var f = function (acc) {
          return function (v) {
              if (v instanceof Halogen_VDom_DOM_Prop.Property && v.value0 === "className") {
                  return Data_Bifunctor.lmap(Data_Tuple.bifunctorTuple)(function (v1) {
                      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1)(Data_String_Common.split(" ")(v.value1));
                  })(acc);
              };
              return Data_Bifunctor.rmap(Data_Tuple.bifunctorTuple)(function (v1) {
                  return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1)([ v ]);
              })(acc);
          };
      };
      return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(new Data_Tuple.Tuple([  ], [  ]));
  })();
  var css = function ($21) {
      return Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName($21));
  };
  var classifySide = function (str) {
      if (startsWith("t-")(str)) {
          return "top";
      };
      if (startsWith("r-")(str)) {
          return "right";
      };
      if (startsWith("b-")(str)) {
          return "bottom";
      };
      if (startsWith("l-")(str)) {
          return "left";
      };
      if (startsWith("x-")(str)) {
          return "horizontal";
      };
      if (startsWith("y-")(str)) {
          return "vertical";
      };
      if (startsWith("-")(str)) {
          return "all";
      };
      if (Data_Boolean.otherwise) {
          return "";
      };
      throw new Error("Failed pattern match at Ocelot.HTML.Properties (line 88, column 1 - line 90, column 12): " + [ str.constructor.name ]);
  };
  var append$prime = function (x) {
      return function (v) {
          if (v === "") {
              return x;
          };
          return x + ("-" + v);
      };
  };
  var classifyOverflow = function (str) {
      if (startsWith("x-")(str)) {
          return append$prime("horizontal")(classifyOverflow(Data_String_CodeUnits.drop(2)(str)));
      };
      if (startsWith("y-")(str)) {
          return append$prime("vertical")(classifyOverflow(Data_String_CodeUnits.drop(2)(str)));
      };
      if (Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqString)(str)([ "auto", "hidden", "visible", "scroll" ])) {
          return "";
      };
      if (Data_Boolean.otherwise) {
          return str;
      };
      throw new Error("Failed pattern match at Ocelot.HTML.Properties (line 101, column 1 - line 103, column 12): " + [ str.constructor.name ]);
  };
  var classify = function (str) {
      if (startsWith("p")(str) && Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(Data_String_Common["null"])(classifySide(Data_String_CodeUnits.drop(1)(str)))) {
          return append$prime("padding")(classifySide(Data_String_CodeUnits.drop(1)(str)));
      };
      if (startsWith("m")(str) && Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(Data_String_Common["null"])(classifySide(Data_String_CodeUnits.drop(1)(str)))) {
          return append$prime("margin")(classifySide(Data_String_CodeUnits.drop(1)(str)));
      };
      if (startsWith("-m")(str) && Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(Data_String_Common["null"])(classifySide(Data_String_CodeUnits.drop(2)(str)))) {
          return append$prime("margin")(classifySide(Data_String_CodeUnits.drop(2)(str)));
      };
      if (startsWith("min-")(str)) {
          return append$prime("min")(classify(Data_String_CodeUnits.drop(4)(str)));
      };
      if (startsWith("max-")(str)) {
          return append$prime("max")(classify(Data_String_CodeUnits.drop(4)(str)));
      };
      if (startsWith("w-")(str)) {
          return "width";
      };
      if (startsWith("h-")(str)) {
          return "height";
      };
      if (startsWith("overflow-")(str) && classifyOverflow(Data_String_CodeUnits.drop(9)(str)) !== Data_String_CodeUnits.drop(9)(str)) {
          return append$prime("overflow")(classifyOverflow(Data_String_CodeUnits.drop(9)(str)));
      };
      if (Data_Boolean.otherwise) {
          return str;
      };
      throw new Error("Failed pattern match at Ocelot.HTML.Properties (line 70, column 1 - line 72, column 12): " + [ str.constructor.name ]);
  };
  var appendIProps = function (ip) {
      return function (ip$prime) {
          var v = extract(ip);
          var v1 = extract(ip$prime);
          var classNames = Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(Data_Array.nubByEq(function (c) {
              return function (c$prime) {
                  return classify(c) === classify(c$prime);
              };
          })(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0)(v.value0)))));
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.value1)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value1)(classNames));
      };
  };
  exports["css"] = css;
  exports["appendIProps"] = appendIProps;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Format"] = $PS["Ocelot.Block.Format"] || {};
  var exports = $PS["Ocelot.Block.Format"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];                
  var subHeadingClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "text-xl", "font-medium", "leading-loose", "flex", "items-center", "mb-6" ]);
  var subHeadingDarkClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(subHeadingClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "text-white" ]));
  var subHeadingDark = function (iprops) {
      return Halogen_HTML_Elements.h2(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(subHeadingDarkClasses) ])(iprops));
  };
  var subHeadingDark_ = subHeadingDark([  ]);
  var subHeading = function (iprops) {
      return function (html) {
          return Halogen_HTML_Elements.h2(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(subHeadingClasses) ])(iprops))(html);
      };
  };
  var subHeading_ = subHeading([  ]);
  var pClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "mb-6" ]);
  var p = function (iprops) {
      return Halogen_HTML_Elements.p(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(pClasses) ])(iprops));
  };
  var p_ = p([  ]);
  var mutedClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "text-grey-50" ]);
  var linkDarkClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "text-grey-light", "hover:text-grey-lighter", "no-underline", "font-medium", "cursor-pointer" ]);
  var linkClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "text-blue-75", "hover:text-blue-65", "no-underline", "font-medium", "cursor-pointer" ]);
  var headingClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "mb-6", "text-3xl", "font-normal", "leading-loose", "flex", "items-center" ]);
  var headingDarkClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(headingClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "text-white" ]));
  var headingDark = function (iprops) {
      return Halogen_HTML_Elements.h1(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(headingDarkClasses) ])(iprops));
  };
  var headingDark_ = headingDark([  ]);
  var heading = function (iprops) {
      return Halogen_HTML_Elements.h1(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(headingClasses) ])(iprops));
  };
  var heading_ = heading([  ]);
  var contentHeadingClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "mb-6", "text-lg", "font-normal", "leading-loose", "flex", "items-center" ]);
  var contentHeading = function (iprops) {
      return Halogen_HTML_Elements.h3(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(contentHeadingClasses) ])(iprops));
  };
  var contentHeading_ = contentHeading([  ]);
  var captionClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "block", "font-light", "mb-6", "text-grey-70", "text-sm", "tracking-wide", "uppercase" ]);
  var caption = function (iprops) {
      return Halogen_HTML_Elements.h4(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(captionClasses) ])(iprops));
  };
  var caption_ = caption([  ]);
  exports["subHeadingClasses"] = subHeadingClasses;
  exports["captionClasses"] = captionClasses;
  exports["linkClasses"] = linkClasses;
  exports["linkDarkClasses"] = linkDarkClasses;
  exports["mutedClasses"] = mutedClasses;
  exports["heading"] = heading;
  exports["heading_"] = heading_;
  exports["headingDark_"] = headingDark_;
  exports["subHeading"] = subHeading;
  exports["subHeading_"] = subHeading_;
  exports["subHeadingDark_"] = subHeadingDark_;
  exports["contentHeading"] = contentHeading;
  exports["contentHeading_"] = contentHeading_;
  exports["caption"] = caption;
  exports["caption_"] = caption_;
  exports["p"] = p;
  exports["p_"] = p_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.Event.HashChangeEvent.EventTypes"] = $PS["Web.HTML.Event.HashChangeEvent.EventTypes"] || {};
  var exports = $PS["Web.HTML.Event.HashChangeEvent.EventTypes"];
  var hashchange = "hashchange";
  exports["hashchange"] = hashchange;
})(PS);
(function(exports) {
  "use strict";

  exports.hash = function (location) {
    return function () {
      return location.hash;
    };
  };
})(PS["Web.HTML.Location"] = PS["Web.HTML.Location"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.Location"] = $PS["Web.HTML.Location"] || {};
  var exports = $PS["Web.HTML.Location"];
  var $foreign = $PS["Web.HTML.Location"];
  exports["hash"] = $foreign.hash;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Routing.Hash"] = $PS["Routing.Hash"] || {};
  var exports = $PS["Routing.Hash"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_Event_HashChangeEvent_EventTypes = $PS["Web.HTML.Event.HashChangeEvent.EventTypes"];
  var Web_HTML_Location = $PS["Web.HTML.Location"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];
  var getHash = Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location))((function () {
      var $2 = Data_Functor.map(Effect.functorEffect)((function () {
          var $4 = Data_Maybe.fromMaybe("");
          var $5 = Data_String_CodeUnits.stripPrefix("#");
          return function ($6) {
              return $4($5($6));
          };
      })());
      return function ($3) {
          return $2(Web_HTML_Location.hash($3));
      };
  })());
  var foldHashes = function (cb) {
      return function (init) {
          return function __do() {
              var ref = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(Control_Bind.bindFlipped(Effect.bindEffect)(init)(getHash))();
              var win = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
              var listener = Web_Event_EventTarget.eventListener(function (v) {
                  return Control_Bind.bindFlipped(Effect.bindEffect)(Data_Function.flip(Effect_Ref.write)(ref))(Control_Bind.join(Effect.bindEffect)(Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)(cb)(Effect_Ref.read(ref)))(getHash)));
              })();
              Web_Event_EventTarget.addEventListener(Web_HTML_Event_HashChangeEvent_EventTypes.hashchange)(listener)(false)(win)();
              return Web_Event_EventTarget.removeEventListener(Web_HTML_Event_HashChangeEvent_EventTypes.hashchange)(listener)(false)(win);
          };
      };
  };
  var matchesWith = function (dictFoldable) {
      return function (parser) {
          return function (cb) {
              var go = function (a) {
                  var $7 = Data_Maybe.maybe(Control_Applicative.pure(Effect.applicativeEffect)(a))(function (b) {
                      return Data_Functor.voidRight(Effect.functorEffect)(new Data_Maybe.Just(b))(cb(a)(b));
                  });
                  var $8 = Data_Foldable.indexl(dictFoldable)(0);
                  return function ($9) {
                      return $7($8(parser($9)));
                  };
              };
              return foldHashes(go)(go(Data_Maybe.Nothing.value));
          };
      };
  };
  var hashes = matchesWith(Data_Foldable.foldableMaybe)(Data_Maybe.Just.create);
  exports["hashes"] = hashes;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.Block.Backdrop"] = $PS["UIGuide.Block.Backdrop"] || {};
  var exports = $PS["UIGuide.Block.Backdrop"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];                
  var contentClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex-1", "mx-6", "mt-6" ]);
  var content = function (iprops) {
      return function (html) {
          return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(contentClasses) ])(iprops))(html);
      };
  };
  var content_ = content([  ]);
  var backdropClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "p-6", "flex", "flex-1" ]);
  var backdropDarkClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(backdropClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-black", "text-grey-lighter" ]));
  var backdropDark = function (iprops) {
      return function (html) {
          return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(backdropDarkClasses) ])(iprops))(html);
      };
  };
  var backdropDark_ = backdropDark([  ]);
  var backdropDefaultClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(backdropClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-grey-95" ]));
  var backdropWhiteClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(backdropClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-white" ]));
  var backdropWhite = function (iprops) {
      return function (html) {
          return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(backdropWhiteClasses) ])(iprops))(html);
      };
  };
  var backdropWhite_ = backdropWhite([  ]);
  var backdrop = function (iprops) {
      return function (html) {
          return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(backdropDefaultClasses) ])(iprops))(html);
      };
  };
  var backdrop_ = backdrop([  ]);
  exports["backdrop"] = backdrop;
  exports["backdrop_"] = backdrop_;
  exports["backdropWhite"] = backdropWhite;
  exports["backdropWhite_"] = backdropWhite_;
  exports["backdropDark_"] = backdropDark_;
  exports["content"] = content;
  exports["content_"] = content_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.App"] = $PS["UIGuide.App"] || {};
  var exports = $PS["UIGuide.App"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Global_Unsafe = $PS["Global.Unsafe"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_VDom_Driver = $PS["Halogen.VDom.Driver"];
  var Ocelot_Block_Format = $PS["Ocelot.Block.Format"];
  var Routing_Hash = $PS["Routing.Hash"];
  var UIGuide_Block_Backdrop = $PS["UIGuide.Block.Backdrop"];                
  var RouteChange = (function () {
      function RouteChange(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RouteChange.create = function (value0) {
          return function (value1) {
              return new RouteChange(value0, value1);
          };
      };
      return RouteChange;
  })();
  var Basics = (function () {
      function Basics() {

      };
      Basics.value = new Basics();
      return Basics;
  })();
  var FormElements = (function () {
      function FormElements() {

      };
      FormElements.value = new FormElements();
      return FormElements;
  })();
  var Components = (function () {
      function Components() {

      };
      Components.value = new Components();
      return Components;
  })();
  var showGroup = new Data_Show.Show(function (v) {
      if (v instanceof Basics) {
          return "Basics";
      };
      if (v instanceof FormElements) {
          return "Form Elements";
      };
      if (v instanceof Components) {
          return "Components";
      };
      throw new Error("Failed pattern match at UIGuide.App (line 61, column 1 - line 64, column 33): " + [ v.constructor.name ]);
  });
  var eqGroup = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Basics && y instanceof Basics) {
              return true;
          };
          if (x instanceof FormElements && y instanceof FormElements) {
              return true;
          };
          if (x instanceof Components && y instanceof Components) {
              return true;
          };
          return false;
      };
  });
  var ordGroup = new Data_Ord.Ord(function () {
      return eqGroup;
  }, function (x) {
      return function (y) {
          if (x instanceof Basics && y instanceof Basics) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Basics) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Basics) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof FormElements && y instanceof FormElements) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof FormElements) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof FormElements) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Components && y instanceof Components) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at UIGuide.App (line 60, column 1 - line 60, column 38): " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var partitionByGroup = function (g) {
      var $37 = Data_Tuple.Tuple.create(g);
      var $38 = Data_Map_Internal.filter(Data_Ord.ordString)(function (v) {
          return Data_Eq.eq(eqGroup)(v.group)(g);
      });
      return function ($39) {
          return $37($38($39));
      };
  };
  var _child = Data_Symbol.SProxy.value;
  var app = (function () {
      var renderSlot = function (state) {
          var v = Data_Map_Internal.lookup(Data_Ord.ordString)(state.route)(state.stories);
          if (v instanceof Data_Maybe.Just) {
              return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "child";
              }))(Data_Ord.ordString)(_child)(state.route)(v.value0.component)(Data_Unit.unit)(Data_Void.absurd);
          };
          return Halogen_HTML_Elements.div_([  ]);
      };
      var renderGroup = function (route) {
          return function (stories) {
              return Halogen_HTML_Elements.ul([ Halogen_HTML_Properties.class_("list-reset") ])(Data_Functor.mapFlipped(Data_Functor.functorArray)(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(stories))(function (v) {
                  return Halogen_HTML_Elements.li([ Halogen_HTML_Properties.class_("mb-3") ])([ Halogen_HTML_Elements.a([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Ocelot_Block_Format.linkClasses)((function () {
                      var $24 = v.value0 === route;
                      if ($24) {
                          return [ "font-medium" ];
                      };
                      return [  ];
                  })())), Halogen_HTML_Properties.href("#" + Global_Unsafe.unsafeEncodeURI(v.value0)) ])([ Halogen_HTML_Core.text(v.value1.anchor) ]) ]);
              }));
          };
      };
      var renderGroups = function (state) {
          return Data_Functor.mapFlipped(Data_Functor.functorArray)(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(state.partitions))(function (v) {
              return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text(Data_Show.show(showGroup)(v.value0)) ]), renderGroup(state.route)(v.value1) ]);
          });
      };
      var renderSidebar = function (state) {
          return UIGuide_Block_Backdrop.backdrop([ Halogen_HTML_Properties.id_("sidebar"), Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "hidden", "fixed", "pin-y", "pin-l", "overflow-y-auto", "md:overflow-visible", "scrolling-touch", "md:scrolling-auto", "w-4/5", "md:w-full", "md:max-w-xs", "flex-none", "md:flex", "flex-col" ])) ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("flex-1 p-6 overflow-y-auto") ])([ Halogen_HTML_Elements.header_([ Ocelot_Block_Format.heading([ Halogen_HTML_Properties.class_("flex") ])([ Halogen_HTML_Elements.img([ Halogen_HTML_Properties.class_("mr-2"), Halogen_HTML_Properties.src("https://citizennet.com/manager/images/logo.svg") ]), Halogen_HTML_Core.text("Ocelot") ]) ]), Halogen_HTML_Elements.nav([ Halogen_HTML_Properties.class_("text-base overflow-y-auto") ])(renderGroups(state)) ]) ]);
      };
      var renderContainer = function (state) {
          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("md:ml-80") ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("fixed w-full") ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("pin-t bg-white md:hidden relative border-b border-grey-light h-12 py-8 flex items-center") ])([ Halogen_HTML_Elements.a([ Halogen_HTML_Properties.class_("mx-auto inline-flex items-center"), Halogen_HTML_Properties.href("") ])([ Halogen_HTML_Core.text("CitizenNet UI Guide") ]) ]) ]), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("p-12 w-full container mx-auto") ])([ renderSlot(state) ]) ]);
      };
      var render = function (state) {
          return Halogen_HTML_Elements.body_([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("min-h-screen") ])([ renderSidebar(state), renderContainer(state) ]) ]);
      };
      var initialState = function (i) {
          return {
              route: "",
              stories: i.stories,
              partitions: Data_Map_Internal.fromFoldable(ordGroup)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(Data_Function.flip(partitionByGroup)(i.stories))(i.groups))
          };
      };
      var $$eval = function (v) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
              var $32 = {};
              for (var $33 in state) {
                  if ({}.hasOwnProperty.call(state, $33)) {
                      $32[$33] = state[$33];
                  };
              };
              $32.route = v.value0;
              return $32;
          }))(function () {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value1));
          });
      };
      return Halogen_Component.mkComponent({
          initialState: initialState,
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: Halogen_Component.defaultEval.handleAction,
              handleQuery: $$eval,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  })();
  var runStorybook = function (stories) {
      return function (groups) {
          return function (body) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Halogen_VDom_Driver.runUI(app)({
                  stories: stories,
                  groups: groups
              })(body))(function (app$prime) {
                  return Data_Functor["void"](Effect_Aff.functorAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Routing_Hash.hashes(function (v) {
                      return function (next) {
                          return Effect_Aff.launchAff_(app$prime.query(Halogen_Query.tell(RouteChange.create(Global_Unsafe.unsafeDecodeURI(next)))));
                      };
                  })));
              });
          };
      };
  };
  exports["Basics"] = Basics;
  exports["Components"] = Components;
  exports["runStorybook"] = runStorybook;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Builder"] = $PS["Ocelot.Block.Builder"] || {};
  var exports = $PS["Ocelot.Block.Builder"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];                
  var blockBuilder = function (elem) {
      return function (classes) {
          return function (iprops) {
              return elem(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(classes) ])(iprops));
          };
      };
  };
  exports["blockBuilder"] = blockBuilder;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Badge"] = $PS["Ocelot.Block.Badge"] || {};
  var exports = $PS["Ocelot.Block.Badge"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Ocelot_Block_Builder = $PS["Ocelot.Block.Builder"];                
  var baseClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "rounded-full", "relative", "before:no-content", "before:w-full", "before:h-full", "before:absolute", "before:pin-t", "before:pin-l", "flex", "justify-center", "items-center", "bg-blue-88", "text-white" ]);
  var badgeSmallClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(baseClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "w-6", "h-6", "text-sm" ]));
  var badgeSmall = Ocelot_Block_Builder.blockBuilder(Halogen_HTML_Elements.span)(badgeSmallClasses);
  var badgeSmall_ = badgeSmall([  ]);
  var badgeLargeClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(baseClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "w-12", "h-12" ]));
  var badgeLarge = Ocelot_Block_Builder.blockBuilder(Halogen_HTML_Elements.span)(badgeLargeClasses);
  var badgeLarge_ = badgeLarge([  ]);
  var badgeClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(baseClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "w-8", "h-8" ]));
  var badge = Ocelot_Block_Builder.blockBuilder(Halogen_HTML_Elements.span)(badgeClasses);
  var badge_ = badge([  ]);
  exports["badge"] = badge;
  exports["badge_"] = badge_;
  exports["badgeSmall"] = badgeSmall;
  exports["badgeSmall_"] = badgeSmall_;
  exports["badgeLarge"] = badgeLarge;
  exports["badgeLarge_"] = badgeLarge_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.Block.Documentation"] = $PS["UIGuide.Block.Documentation"] || {};
  var exports = $PS["UIGuide.Block.Documentation"];
  var Data_Functor = $PS["Data.Functor"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_Block_Format = $PS["Ocelot.Block.Format"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];                
  var subHeadingClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "w-1/2", "font-light", "text-grey-50" ]);
  var introClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "my-12" ]);
  var headingClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "w-1/2" ]);
  var intro = function (config) {
      return function (iprops) {
          return Halogen_HTML_Elements.header(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(introClasses) ])(iprops))([ Ocelot_Block_Format.heading([ Halogen_HTML_Properties.classes(headingClasses) ])([ Halogen_HTML_Core.text(config.header) ]), Ocelot_Block_Format.subHeading([ Halogen_HTML_Properties.classes(subHeadingClasses) ])([ Halogen_HTML_Core.text(config.subheader) ]) ]);
      };
  };
  var intro_ = function (config) {
      return intro(config)([  ]);
  };
  var calloutClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "border-dotted", "border", "rounded", "flex", "items-stretch", "my-6" ]);
  var callout = function (iprops) {
      return function (html) {
          return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(calloutClasses) ])(iprops))(html);
      };
  };
  var callout_ = callout([  ]);
  var blockClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "my-20" ]);
  var customBlock = function (config) {
      return function (iprops) {
          return function (html) {
              return Halogen_HTML_Elements.section(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(blockClasses) ])(iprops))([ intro_(config), Halogen_HTML_Elements.div_(html) ]);
          };
      };
  };
  var customBlock_ = function (config) {
      return customBlock(config)([  ]);
  };
  var block = function (config) {
      return function (iprops) {
          return function (html) {
              return customBlock(config)(iprops)([ callout_(html) ]);
          };
      };
  };
  var block_ = function (config) {
      return block(config)([  ]);
  };
  exports["callout_"] = callout_;
  exports["customBlock_"] = customBlock_;
  exports["block_"] = block_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.Component.Badge"] = $PS["UIGuide.Component.Badge"] || {};
  var exports = $PS["UIGuide.Component.Badge"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Ocelot_Block_Badge = $PS["Ocelot.Block.Badge"];
  var Ocelot_Block_Format = $PS["Ocelot.Block.Format"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var UIGuide_Block_Backdrop = $PS["UIGuide.Block.Backdrop"];
  var UIGuide_Block_Documentation = $PS["UIGuide.Block.Documentation"];                
  var component = (function () {
      var row = Ocelot_Block_Format.p([ Ocelot_HTML_Properties.css("flex items-center") ]);
      var render = function (v) {
          return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.block_({
              header: "Badges",
              subheader: "Badge all the things!"
          })([ UIGuide_Block_Backdrop.backdrop_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1 flex flex-col justify-between") ])([ Ocelot_Block_Format.p_([ Ocelot_Block_Badge.badgeSmall_([ Halogen_HTML_Core.text("1") ]) ]), Ocelot_Block_Format.p_([ Ocelot_Block_Badge.badge_([ Halogen_HTML_Core.text("2") ]) ]), Ocelot_Block_Format.p_([ Ocelot_Block_Badge.badgeLarge_([ Halogen_HTML_Core.text("3") ]) ]) ]) ]) ]), UIGuide_Block_Backdrop.backdrop_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1 flex flex-col justify-between") ])([ row([ Halogen_HTML_Core.text("Leading text"), Ocelot_Block_Badge.badgeSmall([ Ocelot_HTML_Properties.css("ml-1") ])([ Halogen_HTML_Core.text("1") ]) ]), row([ Halogen_HTML_Core.text("Leading text"), Ocelot_Block_Badge.badge([ Ocelot_HTML_Properties.css("ml-1") ])([ Halogen_HTML_Core.text("2") ]) ]), row([ Halogen_HTML_Core.text("Leading text"), Ocelot_Block_Badge.badgeLarge([ Ocelot_HTML_Properties.css("ml-1") ])([ Halogen_HTML_Core.text("3") ]) ]) ]) ]) ]), UIGuide_Block_Backdrop.backdropDark_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1 flex flex-col justify-between") ])([ Ocelot_Block_Format.p_([ Ocelot_Block_Badge.badgeSmall_([ Halogen_HTML_Core.text("1") ]) ]), Ocelot_Block_Format.p_([ Ocelot_Block_Badge.badge_([ Halogen_HTML_Core.text("2") ]) ]), Ocelot_Block_Format.p_([ Ocelot_Block_Badge.badgeLarge_([ Halogen_HTML_Core.text("3") ]) ]) ]) ]) ]), UIGuide_Block_Backdrop.backdropDark_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1 flex flex-col justify-between") ])([ row([ Halogen_HTML_Core.text("Leading text"), Ocelot_Block_Badge.badgeSmall([ Ocelot_HTML_Properties.css("ml-1") ])([ Halogen_HTML_Core.text("1") ]) ]), row([ Halogen_HTML_Core.text("Leading text"), Ocelot_Block_Badge.badge([ Ocelot_HTML_Properties.css("ml-1") ])([ Halogen_HTML_Core.text("2") ]) ]), row([ Halogen_HTML_Core.text("Leading text"), Ocelot_Block_Badge.badgeLarge([ Ocelot_HTML_Properties.css("ml-1") ])([ Halogen_HTML_Core.text("3") ]) ]) ]) ]) ]) ]) ]);
      };
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": Halogen_Component.mkEval(Halogen_Component.defaultEval)
      });
  })();
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Button"] = $PS["Ocelot.Block.Button"] || {};
  var exports = $PS["Ocelot.Block.Button"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];                
  var rightClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "rounded-r" ]);
  var leftClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "mr-px", "rounded-l" ]);
  var centerClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "mr-px" ]);
  var buttonSharedClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "no-outline", "px-4", "py-2", "!active:border-b", "active:border-t", "disabled:opacity-50", "disabled:cursor-default", "!disabled:cursor-pointer" ]);
  var buttonPrimaryClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-blue-88", "border-blue-88", "hover:!disabled:bg-blue-82", "focus:bg-blue-82", "text-white" ]);
  var buttonMainClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonSharedClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "rounded" ]));
  var buttonGroupClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "items-center" ]);
  var buttonGroupBuilder = function (classes) {
      return function (iprops) {
          return Halogen_HTML_Elements.button(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonSharedClasses)(classes)) ])(iprops));
      };
  };
  var buttonPrimaryCenter = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonPrimaryClasses)(centerClasses));
  var buttonPrimaryCenter_ = buttonPrimaryCenter([  ]);
  var buttonPrimaryLeft = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonPrimaryClasses)(leftClasses));
  var buttonPrimaryLeft_ = buttonPrimaryLeft([  ]);
  var buttonPrimaryRight = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonPrimaryClasses)(rightClasses));
  var buttonPrimaryRight_ = buttonPrimaryRight([  ]);
  var buttonGroup = function (iprops) {
      return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(buttonGroupClasses) ])(iprops));
  };
  var buttonGroup_ = buttonGroup([  ]);
  var buttonDarkClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-grey-70-a30", "border-grey-70-a30", "hover:!disabled:bg-grey-70-a40", "focus:bg-grey-70-a40", "text-white" ]);
  var buttonDarkLeft = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonDarkClasses)(leftClasses));
  var buttonDarkLeft_ = buttonDarkLeft([  ]);
  var buttonDarkRight = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonDarkClasses)(rightClasses));
  var buttonDarkRight_ = buttonDarkRight([  ]);  
  var buttonClearClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-transparent", "border-transparent", "text-grey-70", "hover:text-grey-70-a30", "focus:text-grey-70-a30" ]);
  var buttonClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-grey-50-a20", "border-grey-50-a20", "hover:!disabled:bg-grey-50-a30", "focus:bg-grey-50-a30", "text-black-20" ]);
  var buttonLeft = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonClasses)(leftClasses));
  var buttonLeft_ = buttonLeft([  ]);
  var buttonRight = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonClasses)(rightClasses));
  var buttonRight_ = buttonRight([  ]);  
  var buttonBuilder = function (classes) {
      return function (iprops) {
          return Halogen_HTML_Elements.button(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonMainClasses)(classes)) ])(iprops));
      };
  };
  var buttonClear = buttonBuilder(buttonClearClasses);
  var buttonDark = buttonBuilder(buttonDarkClasses);
  var buttonDark_ = buttonDark([  ]);
  var buttonPrimary = buttonBuilder(buttonPrimaryClasses);
  var buttonPrimary_ = buttonPrimary([  ]);
  var button = buttonBuilder(buttonClasses);
  var button_ = button([  ]);
  exports["buttonMainClasses"] = buttonMainClasses;
  exports["buttonClearClasses"] = buttonClearClasses;
  exports["button"] = button;
  exports["button_"] = button_;
  exports["buttonPrimary"] = buttonPrimary;
  exports["buttonPrimary_"] = buttonPrimary_;
  exports["buttonDark"] = buttonDark;
  exports["buttonDark_"] = buttonDark_;
  exports["buttonClear"] = buttonClear;
  exports["buttonGroup_"] = buttonGroup_;
  exports["buttonPrimaryCenter"] = buttonPrimaryCenter;
  exports["buttonPrimaryCenter_"] = buttonPrimaryCenter_;
  exports["buttonLeft"] = buttonLeft;
  exports["buttonLeft_"] = buttonLeft_;
  exports["buttonPrimaryLeft"] = buttonPrimaryLeft;
  exports["buttonPrimaryLeft_"] = buttonPrimaryLeft_;
  exports["buttonDarkLeft"] = buttonDarkLeft;
  exports["buttonDarkLeft_"] = buttonDarkLeft_;
  exports["buttonRight"] = buttonRight;
  exports["buttonRight_"] = buttonRight_;
  exports["buttonPrimaryRight"] = buttonPrimaryRight;
  exports["buttonPrimaryRight_"] = buttonPrimaryRight_;
  exports["buttonDarkRight"] = buttonDarkRight;
  exports["buttonDarkRight_"] = buttonDarkRight_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.Component.Button"] = $PS["UIGuide.Component.Button"] || {};
  var exports = $PS["UIGuide.Component.Button"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_Block_Button = $PS["Ocelot.Block.Button"];
  var Ocelot_Block_Format = $PS["Ocelot.Block.Format"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var UIGuide_Block_Backdrop = $PS["UIGuide.Block.Backdrop"];
  var UIGuide_Block_Documentation = $PS["UIGuide.Block.Documentation"];                
  var component = (function () {
      var render = function (v) {
          return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.block_({
              header: "Buttons",
              subheader: "Perform actions."
          })([ UIGuide_Block_Backdrop.backdrop_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6 flex") ])([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Standard") ]), Ocelot_Block_Button.button_([ Halogen_HTML_Core.text("Cancel") ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Disabled") ]), Ocelot_Block_Button.button([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Cancel") ]) ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6 flex") ])([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Primary") ]), Ocelot_Block_Button.buttonPrimary_([ Halogen_HTML_Core.text("Submit") ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Disabled") ]), Ocelot_Block_Button.buttonPrimary([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Submit") ]) ]) ]) ]) ]), UIGuide_Block_Backdrop.backdropWhite_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6 flex") ])([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Standard") ]), Ocelot_Block_Button.button_([ Halogen_HTML_Core.text("Cancel") ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Disabled") ]), Ocelot_Block_Button.button([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Cancel") ]) ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6 flex") ])([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Primary") ]), Ocelot_Block_Button.buttonPrimary_([ Halogen_HTML_Core.text("Submit") ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Disabled") ]), Ocelot_Block_Button.buttonPrimary([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Submit") ]) ]) ]) ]) ]), UIGuide_Block_Backdrop.backdropDark_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6 flex") ])([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Standard") ]), Ocelot_Block_Button.buttonDark_([ Halogen_HTML_Core.text("Cancel") ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Disabled") ]), Ocelot_Block_Button.buttonDark([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Cancel") ]) ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6 flex") ])([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Primary") ]), Ocelot_Block_Button.buttonPrimary_([ Halogen_HTML_Core.text("Submit") ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Disabled") ]), Ocelot_Block_Button.buttonPrimary([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Submit") ]) ]) ]) ]) ]) ]), UIGuide_Block_Documentation.customBlock_({
              header: "Button Groups",
              subheader: "Group related actions."
          })([ UIGuide_Block_Documentation.callout_([ UIGuide_Block_Backdrop.backdrop_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Two Buttons") ]), Ocelot_Block_Button.buttonGroup_([ Ocelot_Block_Button.buttonLeft_([ Halogen_HTML_Core.text("Back") ]), Ocelot_Block_Button.buttonRight_([ Halogen_HTML_Core.text("Forward") ]) ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Two Disabled Buttons") ]), Ocelot_Block_Button.buttonGroup_([ Ocelot_Block_Button.buttonLeft([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Back") ]), Ocelot_Block_Button.buttonRight([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Forward") ]) ]) ]) ]) ]), UIGuide_Block_Backdrop.backdropWhite_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Two Buttons") ]), Ocelot_Block_Button.buttonGroup_([ Ocelot_Block_Button.buttonLeft_([ Halogen_HTML_Core.text("Back") ]), Ocelot_Block_Button.buttonRight_([ Halogen_HTML_Core.text("Forward") ]) ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Two Disabled Buttons") ]), Ocelot_Block_Button.buttonGroup_([ Ocelot_Block_Button.buttonLeft([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Back") ]), Ocelot_Block_Button.buttonRight([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Forward") ]) ]) ]) ]) ]), UIGuide_Block_Backdrop.backdropDark_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Two Buttons") ]), Ocelot_Block_Button.buttonGroup_([ Ocelot_Block_Button.buttonDarkLeft_([ Halogen_HTML_Core.text("Back") ]), Ocelot_Block_Button.buttonDarkRight_([ Halogen_HTML_Core.text("Forward") ]) ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Two Disabled Buttons") ]), Ocelot_Block_Button.buttonGroup_([ Ocelot_Block_Button.buttonDarkLeft([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Back") ]), Ocelot_Block_Button.buttonDarkRight([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Forward") ]) ]) ]) ]) ]) ]), UIGuide_Block_Documentation.callout_([ UIGuide_Block_Backdrop.backdrop_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Three Buttons") ]), Ocelot_Block_Button.buttonGroup_([ Ocelot_Block_Button.buttonPrimaryLeft_([ Halogen_HTML_Core.text("Rewind") ]), Ocelot_Block_Button.buttonPrimaryCenter_([ Halogen_HTML_Core.text("Play") ]), Ocelot_Block_Button.buttonPrimaryRight_([ Halogen_HTML_Core.text("Fast-Forward") ]) ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Three Disabled Buttons") ]), Ocelot_Block_Button.buttonGroup_([ Ocelot_Block_Button.buttonPrimaryLeft([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Rewind") ]), Ocelot_Block_Button.buttonPrimaryCenter([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Play") ]), Ocelot_Block_Button.buttonPrimaryRight([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Fast-Forward") ]) ]) ]) ]) ]), UIGuide_Block_Backdrop.backdropWhite_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Three Buttons") ]), Ocelot_Block_Button.buttonGroup_([ Ocelot_Block_Button.buttonPrimaryLeft_([ Halogen_HTML_Core.text("Rewind") ]), Ocelot_Block_Button.buttonPrimaryCenter_([ Halogen_HTML_Core.text("Play") ]), Ocelot_Block_Button.buttonPrimaryRight_([ Halogen_HTML_Core.text("Fast-Forward") ]) ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Three Disabled Buttons") ]), Ocelot_Block_Button.buttonGroup_([ Ocelot_Block_Button.buttonPrimaryLeft([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Rewind") ]), Ocelot_Block_Button.buttonPrimaryCenter([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Play") ]), Ocelot_Block_Button.buttonPrimaryRight([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Fast-Forward") ]) ]) ]) ]) ]), UIGuide_Block_Backdrop.backdropDark_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Three Buttons") ]), Ocelot_Block_Button.buttonGroup_([ Ocelot_Block_Button.buttonPrimaryLeft_([ Halogen_HTML_Core.text("Rewind") ]), Ocelot_Block_Button.buttonPrimaryCenter_([ Halogen_HTML_Core.text("Play") ]), Ocelot_Block_Button.buttonPrimaryRight_([ Halogen_HTML_Core.text("Fast-Forward") ]) ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Three Disabled Buttons") ]), Ocelot_Block_Button.buttonGroup_([ Ocelot_Block_Button.buttonPrimaryLeft([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Rewind") ]), Ocelot_Block_Button.buttonPrimaryCenter([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Play") ]), Ocelot_Block_Button.buttonPrimaryRight([ Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Fast-Forward") ]) ]) ]) ]) ]) ]) ]) ]);
      };
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": Halogen_Component.mkEval(Halogen_Component.defaultEval)
      });
  })();
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Card"] = $PS["Ocelot.Block.Card"] || {};
  var exports = $PS["Ocelot.Block.Card"];
  var Data_Functor = $PS["Data.Functor"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];                
  var innerCardClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "m-6" ]);
  var innerCard = function (iprops) {
      return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(innerCardClasses) ])(iprops));
  };
  var innerCard_ = innerCard([  ]);
  var baseCardClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-white", "mb-6", "rounded", "clearfix" ]);
  var baseCard = function (iprops) {
      return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(baseCardClasses) ])(iprops));
  };                             
  var card = function (iprops) {
      return function (html) {
          return baseCard(iprops)([ innerCard_(html) ]);
      };
  };
  var card_ = card([  ]);
  exports["card"] = card;
  exports["card_"] = card_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.FormField"] = $PS["Ocelot.Block.FormField"] || {};
  var exports = $PS["Ocelot.Block.FormField"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_Block_Format = $PS["Ocelot.Block.Format"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];                
  var labelClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "block", "font-medium", "leading-loose", "text-black-20" ]);
  var helpTextClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(Ocelot_Block_Format.mutedClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "block", "font-light", "pt-3" ]));
  var helpText = function (iprops) {
      return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(helpTextClasses) ])(iprops));
  };
  var helpText_ = helpText([  ]);
  var fieldClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "w-full", "mb-10" ]);
  var errorTextClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "block", "text-red", "font-medium", "pt-3" ]);
  var error = function (iprops) {
      return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(errorTextClasses) ])(iprops));
  };
  var error_ = error([  ]);
  var field$prime = function (config) {
      return function (iprops) {
          return function (html) {
              return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(fieldClasses) ])(iprops))([ Halogen_HTML_Elements.label([ Halogen_HTML_Properties.classes(labelClasses), Halogen_HTML_Properties["for"](config.inputId) ])([ Halogen_HTML.fromPlainHTML(config.label) ]), html, error_(config.error), helpText_(config.helpText) ]);
          };
      };
  };
  var field = function (config) {
      return function (iprops) {
          return function (html) {
              return field$prime(config)(iprops)(Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("my-1") ])(html));
          };
      };
  };
  var field_ = function (config) {
      return field(config)([  ]);
  };
  var fieldMid = function (config) {
      return function (iprops) {
          return function (html) {
              return field$prime(config)(iprops)(Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("my-1 md:w-1/2") ])(html));
          };
      };
  };
  var fieldMid_ = function (config) {
      return fieldMid(config)([  ]);
  };
  var fieldSmall = function (config) {
      return function (iprops) {
          return function (html) {
              return field$prime(config)(iprops)(Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("my-1 md:w-1/4") ])(html));
          };
      };
  };
  var fieldSmall_ = function (config) {
      return fieldSmall(config)([  ]);
  };
  var fieldset = function (config) {
      return function (iprops) {
          return function (html) {
              return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(fieldClasses) ])(iprops))([ Halogen_HTML_Elements.fieldset([  ])([ Halogen_HTML_Elements.legend([ Halogen_HTML_Properties.classes(labelClasses) ])([ Halogen_HTML.fromPlainHTML(config.label) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("my-1") ])(html), error_(config.error), helpText_(config.helpText) ]) ]);
          };
      };
  };
  var fieldset_ = function (config) {
      return fieldset(config)([  ]);
  };
  exports["field"] = field;
  exports["field_"] = field_;
  exports["fieldSmall_"] = fieldSmall_;
  exports["fieldMid_"] = fieldMid_;
  exports["fieldset_"] = fieldset_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Icon"] = $PS["Ocelot.Block.Icon"] || {};
  var exports = $PS["Ocelot.Block.Icon"];
  var Data_Functor = $PS["Data.Functor"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_HTML_Properties_ARIA = $PS["Halogen.HTML.Properties.ARIA"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];                
  var icon = function (className) {
      return function (iprops) {
          return Halogen_HTML_Elements.span([ Halogen_HTML_Properties_ARIA.label(className), Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "inline-block" ])) ])([ Halogen_HTML_Elements.span(Ocelot_HTML_Properties.appendIProps(iprops)([ Halogen_HTML_Properties_ARIA.hidden("true"), Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ className, "inline-block" ])) ]))([  ]) ]);
      };
  };
  var info = icon("icon-info");
  var instagram = icon("icon-instagram");
  var linkedIn = icon("icon-linkedin");
  var menu = icon("icon-menu");
  var menu_ = menu([  ]);
  var navigate = icon("icon-navigate");
  var navigate_ = navigate([  ]);
  var options = icon("icon-options");
  var options_ = options([  ]);
  var pinterest = icon("icon-pinterest");
  var plus = icon("icon-plus");
  var plus_ = plus([  ]);
  var refresh = icon("icon-refresh");
  var refresh_ = refresh([  ]);
  var search = icon("icon-search");
  var search_ = search([  ]);
  var selected = icon("icon-selected");
  var settings = icon("icon-settings");
  var settings_ = settings([  ]);
  var share = icon("icon-share");
  var share_ = share([  ]);
  var snapchat = icon("icon-snapchat");
  var snapchat_ = snapchat([  ]);
  var success = icon("icon-success");
  var taboola = icon("icon-taboola");
  var tiktok = icon("icon-tiktok");
  var timeline = icon("icon-timeline");
  var timeline_ = timeline([  ]);
  var tip = icon("icon-tip");
  var twitter = icon("icon-twitter");
  var youtube = icon("icon-youtube");
  var google = icon("icon-google");
  var facebook = icon("icon-facebook");
  var expand = icon("icon-expand");
  var expand_ = expand([  ]);
  var error = icon("icon-error");
  var download = icon("icon-download");
  var download_ = download([  ]);
  var deleteCircle = icon("icon-delete-circle");
  var deleteCircle_ = deleteCircle([  ]);
  var $$delete = icon("icon-delete");
  var delete_ = $$delete([  ]);
  var dataSources = icon("icon-data-sources");
  var dataSources_ = dataSources([  ]);
  var collapse = icon("icon-collapse");
  var collapse_ = collapse([  ]);
  var close = icon("icon-close");
  var close_ = close([  ]);
  var chevronRight = icon("icon-chevron-right");
  var chevronRight_ = chevronRight([  ]);
  var chevronLeft = icon("icon-chevron-left");
  var chevronLeft_ = chevronLeft([  ]);
  var caratUp = icon("icon-carat-up");
  var caratUp_ = caratUp([  ]);
  var caratRight = icon("icon-carat-right");
  var caratRight_ = caratRight([  ]);
  var caratLeft = icon("icon-carat-left");
  var caratLeft_ = caratLeft([  ]);
  var caratDown = icon("icon-carat-down");
  var caratDown_ = caratDown([  ]);
  var back = icon("icon-back");
  var back_ = back([  ]);
  var arrowUp = icon("icon-arrow-up");
  var arrowUp_ = arrowUp([  ]);
  var arrowRight = icon("icon-arrow-right");
  var arrowRight_ = arrowRight([  ]);
  var arrowLeft = icon("icon-arrow-left");
  var arrowLeft_ = arrowLeft([  ]);
  var arrowDown = icon("icon-arrow-down");
  var arrowDown_ = arrowDown([  ]);
  var added = icon("icon-added");
  var add = icon("icon-add");
  var add_ = add([  ]);
  exports["add_"] = add_;
  exports["added"] = added;
  exports["arrowDown_"] = arrowDown_;
  exports["arrowLeft_"] = arrowLeft_;
  exports["arrowRight_"] = arrowRight_;
  exports["arrowUp_"] = arrowUp_;
  exports["back_"] = back_;
  exports["caratDown"] = caratDown;
  exports["caratDown_"] = caratDown_;
  exports["caratLeft_"] = caratLeft_;
  exports["caratRight_"] = caratRight_;
  exports["caratUp_"] = caratUp_;
  exports["chevronLeft_"] = chevronLeft_;
  exports["chevronRight_"] = chevronRight_;
  exports["close_"] = close_;
  exports["collapse"] = collapse;
  exports["collapse_"] = collapse_;
  exports["dataSources_"] = dataSources_;
  exports["delete_"] = delete_;
  exports["deleteCircle_"] = deleteCircle_;
  exports["download_"] = download_;
  exports["error"] = error;
  exports["expand"] = expand;
  exports["expand_"] = expand_;
  exports["facebook"] = facebook;
  exports["google"] = google;
  exports["info"] = info;
  exports["instagram"] = instagram;
  exports["linkedIn"] = linkedIn;
  exports["menu_"] = menu_;
  exports["navigate_"] = navigate_;
  exports["options_"] = options_;
  exports["pinterest"] = pinterest;
  exports["plus_"] = plus_;
  exports["refresh_"] = refresh_;
  exports["search"] = search;
  exports["search_"] = search_;
  exports["selected"] = selected;
  exports["settings_"] = settings_;
  exports["share_"] = share_;
  exports["snapchat_"] = snapchat_;
  exports["success"] = success;
  exports["taboola"] = taboola;
  exports["tiktok"] = tiktok;
  exports["timeline_"] = timeline_;
  exports["tip"] = tip;
  exports["twitter"] = twitter;
  exports["youtube"] = youtube;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Input"] = $PS["Ocelot.Block.Input"] || {};
  var exports = $PS["Ocelot.Block.Input"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];                
  var inputSharedClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-white", "border-t-2", "border-b-2", "font-light", "cc-blue-88", "border-grey-80", "disabled:bg-grey-95", "disabled:text-grey-70", "focus:no-outline", "py-2" ]);
  var leftClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(inputSharedClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "border-l-2", "pl-3", "pr-1" ]));
  var mainItemClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(inputSharedClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "w-full", "focus:border-blue-88", "focus:sibling:border-blue-88", "group-hover:!focus:!disabled:border-grey-70", "group-hover:!focus:!disabled:sibling:border-grey-70", "disabled:sibling:bg-grey-95" ]));
  var mainLeftClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(mainItemClasses)(leftClasses);
  var rightClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(inputSharedClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "border-r-2", "pr-3", "pl-1" ]));
  var mainRightClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(mainItemClasses)(rightClasses);
  var inputRight = function (iprops) {
      return Halogen_HTML_Elements.input(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(mainRightClasses) ])(iprops));
  };
  var inputLeft = function (iprops) {
      return Halogen_HTML_Elements.input(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(mainLeftClasses) ])(iprops));
  };
  var inputGroupClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "group", "w-full", "items-center" ]);
  var inputGroup$prime = function (elem) {
      return function (iprops) {
          return function (html) {
              return elem(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(inputGroupClasses) ])(iprops))(html);
          };
      };
  };
  var inputGroup = inputGroup$prime(Halogen_HTML_Elements.label);
  var inputGroup_ = inputGroup([  ]);
  var inputClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(inputSharedClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "border-l-2", "border-r-2", "w-full", "px-3", "focus:border-blue-88", "!focus:!disabled:hover:border-grey-70" ]));
  var textareaClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(inputClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "min-h-40" ]));
  var textarea = function (iprops) {
      return Halogen_HTML_Elements.textarea(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(textareaClasses) ])(iprops));
  };
  var input = function (iprops) {
      return Halogen_HTML_Elements.input(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(inputClasses) ])(iprops));
  };
  var centerClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(inputSharedClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "pl-1", "pr-1" ]));
  var mainCenterClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(mainItemClasses)(centerClasses);
  var inputCenter = function (iprops) {
      return Halogen_HTML_Elements.input(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(mainCenterClasses) ])(iprops));
  };
  var borderClasses = [  ];                                                                                                                                                                                    
  var borderRightClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(borderClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "border-l", "pl-3" ]));
  var addonClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(inputSharedClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "cursor-pointer", "text-grey-70" ]));
  var addonLeftClassess = Data_Semigroup.append(Data_Semigroup.semigroupArray)(addonClasses)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(leftClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "order-start" ])));
  var addonLeft = function (iprops) {
      return function (html) {
          return Halogen_HTML_Elements.span(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(addonLeftClassess) ])(iprops))(html);
      };
  };
  var addonLeft_ = addonLeft([  ]);  
  var currency = function (lprops) {
      return function (iprops) {
          return inputGroup(lprops)([ inputRight(iprops), addonLeft_([ Halogen_HTML_Core.text("$") ]) ]);
      };
  };
  var currency_ = currency([  ]);
  var addonRightClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(addonClasses)(rightClasses);
  var addonRight = function (iprops) {
      return function (html) {
          return Halogen_HTML_Elements.span(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(addonRightClasses) ])(iprops))(html);
      };
  };
  var addonRight_ = addonRight([  ]);
  var borderRight = function (iprops) {
      return function (html) {
          return addonRight_([ Halogen_HTML_Elements.span(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(borderRightClasses) ])(iprops))(html) ]);
      };
  };                                   
  var percentage = function (lprops) {
      return function (iprops) {
          return inputGroup(lprops)([ inputLeft(iprops), addonRight_([ Halogen_HTML_Core.text("%") ]) ]);
      };
  };
  var percentage_ = percentage([  ]);
  var addonCenterClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(addonClasses)(centerClasses);
  var addonCenter = function (iprops) {
      return function (html) {
          return Halogen_HTML_Elements.span(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(addonCenterClasses) ])(iprops))(html);
      };
  };
  var addonCenter_ = addonCenter([  ]);
  exports["mainLeftClasses"] = mainLeftClasses;
  exports["input"] = input;
  exports["inputGroup"] = inputGroup;
  exports["inputGroup'"] = inputGroup$prime;
  exports["inputGroup_"] = inputGroup_;
  exports["inputCenter"] = inputCenter;
  exports["addonCenter"] = addonCenter;
  exports["addonCenter_"] = addonCenter_;
  exports["addonLeft_"] = addonLeft_;
  exports["borderRight"] = borderRight;
  exports["percentage_"] = percentage_;
  exports["currency_"] = currency_;
  exports["textarea"] = textarea;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Layout"] = $PS["Ocelot.Block.Layout"] || {};
  var exports = $PS["Ocelot.Block.Layout"];
  var Data_Functor = $PS["Data.Functor"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Ocelot_Block_Builder = $PS["Ocelot.Block.Builder"];
  var popoverClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "absolute", "shadow", "z-50", "border", "border-grey-90", "rounded" ]);
  var popover = Ocelot_Block_Builder.blockBuilder(Halogen_HTML_Elements.div)(popoverClasses);
  exports["popover"] = popover;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Data.DateTime"] = $PS["Ocelot.Data.DateTime"] || {};
  var exports = $PS["Ocelot.Data.DateTime"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Date = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_DateTime = $PS["Data.DateTime"];
  var Data_DateTime_Instant = $PS["Data.DateTime.Instant"];
  var Data_Either = $PS["Data.Either"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Formatter_DateTime = $PS["Data.Formatter.DateTime"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Time = $PS["Data.Time"];
  var Data_Time_Component = $PS["Data.Time.Component"];
  var Data_Time_Duration = $PS["Data.Time.Duration"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var unsafeSucc = function (dictEnum) {
      var $26 = Data_Maybe.fromJust();
      var $27 = Data_Enum.succ(dictEnum);
      return function ($28) {
          return $26($27($28));
      };
  };
  var unsafePred = function (dictEnum) {
      var $29 = Data_Maybe.fromJust();
      var $30 = Data_Enum.pred(dictEnum);
      return function ($31) {
          return $29($30($31));
      };
  };
  var unsafeMkYear = (function () {
      var $32 = Data_Maybe.fromJust();
      var $33 = Data_Enum.toEnum(Data_Date_Component.boundedEnumYear);
      return function ($34) {
          return $32($33($34));
      };
  })();
  var unsafeMkSecond = (function () {
      var $35 = Data_Maybe.fromJust();
      var $36 = Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond);
      return function ($37) {
          return $35($36($37));
      };
  })();
  var unsafeMkMonth = (function () {
      var $38 = Data_Maybe.fromJust();
      var $39 = Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth);
      return function ($40) {
          return $38($39($40));
      };
  })();
  var unsafeMkMinute = (function () {
      var $41 = Data_Maybe.fromJust();
      var $42 = Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute);
      return function ($43) {
          return $41($42($43));
      };
  })();
  var unsafeMkMillisecond = (function () {
      var $44 = Data_Maybe.fromJust();
      var $45 = Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond);
      return function ($46) {
          return $44($45($46));
      };
  })();
  var unsafeMkHour = (function () {
      var $47 = Data_Maybe.fromJust();
      var $48 = Data_Enum.toEnum(Data_Time_Component.boundedEnumHour);
      return function ($49) {
          return $47($48($49));
      };
  })();
  var unsafeMkTime = function (h) {
      return function (m) {
          return function (s) {
              return function (ms) {
                  var second = unsafeMkSecond(s);
                  var minute = unsafeMkMinute(m);
                  var millisecond = unsafeMkMillisecond(ms);
                  var hour = unsafeMkHour(h);
                  return new Data_Time.Time(hour, minute, second, millisecond);
              };
          };
      };
  };
  var unsafeMkDay = (function () {
      var $50 = Data_Maybe.fromJust();
      var $51 = Data_Enum.toEnum(Data_Date_Component.boundedEnumDay);
      return function ($52) {
          return $50($51($52));
      };
  })();
  var unsafeMkDate = function (y) {
      return function (m) {
          return function (d) {
              var year = unsafeMkYear(y);
              var month = unsafeMkMonth(m);
              var day = unsafeMkDay(d);
              return Data_Date.canonicalDate(year)(month)(day);
          };
      };
  };
  var readableFormat = new Data_List_Types.Cons(Data_Formatter_DateTime.DayOfWeekNameShort.value, new Data_List_Types.Cons(new Data_Formatter_DateTime.Placeholder(", "), new Data_List_Types.Cons(Data_Formatter_DateTime.MonthShort.value, new Data_List_Types.Cons(new Data_Formatter_DateTime.Placeholder(" "), new Data_List_Types.Cons(Data_Formatter_DateTime.DayOfMonth.value, new Data_List_Types.Cons(new Data_Formatter_DateTime.Placeholder(" "), new Data_List_Types.Cons(Data_Formatter_DateTime.YearFull.value, Data_List_Types.Nil.value)))))));
  var prevYear = function (d) {
      return Data_Date.canonicalDate(unsafePred(Data_Date_Component.enumYear)(Data_Date.year(d)))(Data_Date.month(d))(Data_Date.day(d));
  };
  var prevMonth = function (d) {
      var v = Data_Date.month(d);
      if (v instanceof Data_Date_Component.January) {
          return Data_Date.canonicalDate(unsafePred(Data_Date_Component.enumYear)(Data_Date.year(d)))(Data_Date_Component.December.value)(Data_Date.day(d));
      };
      return Data_Date.canonicalDate(Data_Date.year(d))(unsafePred(Data_Date_Component.enumMonth)(Data_Date.month(d)))(Data_Date.day(d));
  };
  var prevMinute = (function () {
      var $53 = Data_Time.adjust(Data_Time_Duration.durationMinutes)(Data_Time_Duration.negateDuration(Data_Time_Duration.durationMinutes)(1.0));
      return function ($54) {
          return Data_Tuple.snd($53($54));
      };
  })();
  var nextYear = function (d) {
      return Data_Date.canonicalDate(unsafeSucc(Data_Date_Component.enumYear)(Data_Date.year(d)))(Data_Date.month(d))(Data_Date.day(d));
  };
  var yearsForward = function ($copy_n) {
      return function ($copy_d) {
          var $tco_var_n = $copy_n;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(n, d) {
              if (n <= 0) {
                  $tco_done = true;
                  return d;
              };
              if (Data_Boolean.otherwise) {
                  $tco_var_n = n - 1 | 0;
                  $copy_d = nextYear(d);
                  return;
              };
              throw new Error("Failed pattern match at Ocelot.Data.DateTime (line 132, column 1 - line 132, column 36): " + [ n.constructor.name, d.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_n, $copy_d);
          };
          return $tco_result;
      };
  };
  var nextMonth = function (d) {
      var v = Data_Date.month(d);
      if (v instanceof Data_Date_Component.December) {
          return Data_Date.canonicalDate(unsafeSucc(Data_Date_Component.enumYear)(Data_Date.year(d)))(Data_Date_Component.January.value)(Data_Date.day(d));
      };
      return Data_Date.canonicalDate(Data_Date.year(d))(unsafeSucc(Data_Date_Component.enumMonth)(Data_Date.month(d)))(Data_Date.day(d));
  };
  var nextHour = (function () {
      var $55 = Data_Time.adjust(Data_Time_Duration.durationHours)(1.0);
      return function ($56) {
          return Data_Tuple.snd($55($56));
      };
  })();
  var lastDateOfMonth = function (y) {
      return function (m) {
          return Data_Date.canonicalDate(y)(m)(Data_Date.lastDayOfMonth(y)(m));
      };
  };
  var hourRange = function (start) {
      return function (hrs) {
          var go = function ($copy_cur) {
              return function ($copy_count) {
                  return function ($copy_acc) {
                      var $tco_var_cur = $copy_cur;
                      var $tco_var_count = $copy_count;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(cur, count, acc) {
                          if (count === hrs) {
                              $tco_done = true;
                              return Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc)([ cur ]);
                          };
                          if (Data_Boolean.otherwise) {
                              $tco_var_cur = nextHour(cur);
                              $tco_var_count = count + 1 | 0;
                              $copy_acc = Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc)([ cur ]);
                              return;
                          };
                          throw new Error("Failed pattern match at Ocelot.Data.DateTime (line 42, column 5 - line 44, column 68): " + [ cur.constructor.name, count.constructor.name, acc.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_cur, $tco_var_count, $copy_acc);
                      };
                      return $tco_result;
                  };
              };
          };
          return go(start)(0)([  ]);
      };
  };
  var firstDateOfMonth = function (y) {
      return function (m) {
          return Data_Date.canonicalDate(y)(m)(Data_Bounded.bottom(Data_Date_Component.boundedDay));
      };
  };
  var defaultTime = unsafeMkTime(0)(0)(0)(0);
  var defaultTimeRange = Data_Semigroup.append(Data_Semigroup.semigroupArray)(hourRange(defaultTime)(23))([ prevMinute(defaultTime) ]);
  var formatDate = (function () {
      var $57 = Data_Formatter_DateTime.format(readableFormat);
      var $58 = Data_Function.flip(Data_DateTime.DateTime.create)(defaultTime);
      return function ($59) {
          return $57($58($59));
      };
  })();
  var defaultDate = unsafeMkDate(2000)(1)(1);
  var formatTime = (function () {
      var $60 = Data_Either.either(Data_Function["const"]("-"))(Control_Category.identity(Control_Category.categoryFn));
      var $61 = Data_Formatter_DateTime.formatDateTime("hh:mm a");
      var $62 = Data_DateTime.DateTime.create(defaultDate);
      return function ($63) {
          return $60($61($62($63)));
      };
  })();
  var adjustDaysBy = function (n) {
      var next = function (dur) {
          return function (d) {
              return Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime.date)(Data_DateTime.adjust(Data_Time_Duration.durationDays)(dur)(Data_DateTime_Instant.toDateTime(Data_DateTime_Instant.fromDate(d))));
          };
      };
      var $64 = Data_Maybe.fromJust();
      var $65 = next(n);
      return function ($66) {
          return $64($65($66));
      };
  };
  var nextDay = adjustDaysBy(1.0);
  var dateRange = (function () {
      var go = function (start) {
          return function (end) {
              return function (acc) {
                  if (Data_Eq.eq(Data_Date.eqDate)(start)(end)) {
                      return Data_Array.reverse(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ start ])(acc));
                  };
                  if (Data_Ord.greaterThan(Data_Date.ordDate)(start)(end)) {
                      return Data_Array.reverse(go(end)(start)(acc));
                  };
                  if (Data_Boolean.otherwise) {
                      return go(nextDay(start))(end)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ start ])(acc));
                  };
                  throw new Error("Failed pattern match at Ocelot.Data.DateTime (line 63, column 5 - line 66, column 63): " + [ start.constructor.name, end.constructor.name, acc.constructor.name ]);
              };
          };
      };
      return function (s) {
          return function (e) {
              return go(s)(e)([  ]);
          };
      };
  })();
  var prevDay = adjustDaysBy(-1.0);
  exports["defaultTimeRange"] = defaultTimeRange;
  exports["dateRange"] = dateRange;
  exports["firstDateOfMonth"] = firstDateOfMonth;
  exports["lastDateOfMonth"] = lastDateOfMonth;
  exports["nextDay"] = nextDay;
  exports["prevDay"] = prevDay;
  exports["adjustDaysBy"] = adjustDaysBy;
  exports["nextMonth"] = nextMonth;
  exports["prevMonth"] = prevMonth;
  exports["nextYear"] = nextYear;
  exports["prevYear"] = prevYear;
  exports["yearsForward"] = yearsForward;
  exports["formatTime"] = formatTime;
  exports["formatDate"] = formatDate;
  exports["unsafeMkDate"] = unsafeMkDate;
  exports["unsafeMkYear"] = unsafeMkYear;
  exports["unsafeMkMonth"] = unsafeMkMonth;
  exports["unsafeMkTime"] = unsafeMkTime;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Components.DatePicker.Utils"] = $PS["Ocelot.Components.DatePicker.Utils"] || {};
  var exports = $PS["Ocelot.Components.DatePicker.Utils"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Date = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_Either = $PS["Data.Either"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_FunctorWithIndex = $PS["Data.FunctorWithIndex"];
  var Data_Fuzzy = $PS["Data.Fuzzy"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ratio = $PS["Data.Ratio"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_Regex = $PS["Data.String.Regex"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Ocelot_Data_DateTime = $PS["Ocelot.Data.DateTime"];
  var toObject = function (d) {
      var sYearMonth = Data_Show.show(Data_Date_Component.showMonth)(Data_Date.month(d));
      var sYear = Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(d)));
      var sWeekDay = Data_Show.show(Data_Date_Component.showWeekday)(Data_Date.weekday(d));
      var sMonth = Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(d)));
      var sDay = Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(d)));
      return Foreign_Object.fromFoldable(Data_Foldable.foldableArray)([ Data_Tuple.Tuple.create("mdy1")(sYearMonth + (" " + (sDay + (" " + sYear)))), Data_Tuple.Tuple.create("mdy2")(sMonth + (" " + (sDay + (" " + sYear)))), Data_Tuple.Tuple.create("weekday")(sWeekDay), Data_Tuple.Tuple.create("wmdy1")(sWeekDay + (" " + (sYearMonth + (" " + (sDay + (" " + sYear)))))), Data_Tuple.Tuple.create("ymd")(sYear + (" " + (sMonth + (" " + sDay)))) ]);
  };
  var rowsFromArray = function (all) {
      var go = function ($copy_v) {
          return function ($copy_acc) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, acc) {
                  if (v.length === 0) {
                      $tco_done = true;
                      return Data_Array.reverse(acc);
                  };
                  $tco_var_v = Data_Array.drop(7)(v);
                  $copy_acc = Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Data_Array.take(7)(v) ])(acc);
                  return;
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_v, $copy_acc);
              };
              return $tco_result;
          };
      };
      return go(all)([  ]);
  };
  var padPrev = function (v) {
      if (v instanceof Data_Date_Component.Sunday) {
          return 0.0;
      };
      if (v instanceof Data_Date_Component.Monday) {
          return -1.0;
      };
      if (v instanceof Data_Date_Component.Tuesday) {
          return -2.0;
      };
      if (v instanceof Data_Date_Component.Wednesday) {
          return -3.0;
      };
      if (v instanceof Data_Date_Component.Thursday) {
          return -4.0;
      };
      if (v instanceof Data_Date_Component.Friday) {
          return -5.0;
      };
      if (v instanceof Data_Date_Component.Saturday) {
          return -6.0;
      };
      throw new Error("Failed pattern match at Ocelot.Components.DatePicker.Utils (line 67, column 1 - line 67, column 29): " + [ v.constructor.name ]);
  };
  var padNext = function (v) {
      if (v instanceof Data_Date_Component.Sunday) {
          return 6.0;
      };
      if (v instanceof Data_Date_Component.Monday) {
          return 5.0;
      };
      if (v instanceof Data_Date_Component.Tuesday) {
          return 4.0;
      };
      if (v instanceof Data_Date_Component.Wednesday) {
          return 3.0;
      };
      if (v instanceof Data_Date_Component.Thursday) {
          return 2.0;
      };
      if (v instanceof Data_Date_Component.Friday) {
          return 1.0;
      };
      if (v instanceof Data_Date_Component.Saturday) {
          return 0.0;
      };
      throw new Error("Failed pattern match at Ocelot.Components.DatePicker.Utils (line 80, column 1 - line 80, column 29): " + [ v.constructor.name ]);
  };
  var firstMatch = (function () {
      var match$prime = function (v) {
          return Data_Eq.eq(Data_Ratio.eqRatio(Data_Eq.eqInt))(v.value0.ratio)(Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(1)(1));
      };
      var $27 = Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($30) {
          return Data_Maybe.Just.create(Data_Tuple.fst($30));
      });
      var $28 = Data_Foldable.find(Data_Foldable.foldableArray)(match$prime);
      return function ($29) {
          return $27($28($29));
      };
  })();
  var guessDate = function (start) {
      return function (v) {
          return function (text) {
              var text$prime = Data_Either.either(Data_Function["const"](text))(function (r) {
                  return Data_String_Regex.replace(r)(" ")(text);
              })(Data_String_Regex.regex("-|\\/|,")(Data_String_Regex.parseFlags("g")));
              var text$prime$prime = Data_Either.either(Data_Function["const"](text$prime))(function (r) {
                  return Data_String_Regex.replace(r)(" ")(text$prime);
              })(Data_String_Regex.regex("\\s+")(Data_String_Regex.parseFlags("g")));
              var matcher = function (i) {
                  return function (d) {
                      return new Data_Tuple.Tuple(Data_Fuzzy.match(true)(toObject)(text$prime$prime)(d), i);
                  };
              };
              var guess = function (dates) {
                  return findIn(firstMatch(Data_Array.sort(Data_Tuple.ordTuple(Data_Fuzzy.ordFuzzy(Data_Date.eqDate))(Data_Ord.ordInt))(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(matcher)(dates))));
              };
              var findIn = function (v1) {
                  return function (v2) {
                      if (v1 instanceof Data_Maybe.Just) {
                          return new Data_Maybe.Just(v1.value0.original);
                      };
                      if (v1 instanceof Data_Maybe.Nothing) {
                          if (v2 > v) {
                              return Data_Maybe.Nothing.value;
                          };
                          if (Data_Boolean.otherwise) {
                              return guess(Ocelot_Data_DateTime.dateRange(Ocelot_Data_DateTime.yearsForward(v2)(start))(Ocelot_Data_DateTime.yearsForward(v2 + 1 | 0)(start)))(v2 + 1 | 0);
                          };
                      };
                      throw new Error("Failed pattern match at Ocelot.Components.DatePicker.Utils (line 116, column 7 - line 116, column 56): " + [ v1.constructor.name, v2.constructor.name ]);
                  };
              };
              return guess(Ocelot_Data_DateTime.dateRange(start)(Ocelot_Data_DateTime.nextYear(start)))(0);
          };
      };
  };
  var alignByWeek = function (y) {
      return function (m) {
          var start = Ocelot_Data_DateTime.firstDateOfMonth(y)(m);
          var pre = (function () {
              var pad = padPrev(Data_Date.weekday(start));
              var $25 = pad === 0.0;
              if ($25) {
                  return [  ];
              };
              return Ocelot_Data_DateTime.dateRange(Ocelot_Data_DateTime.adjustDaysBy(pad)(start))(Ocelot_Data_DateTime.prevDay(start));
          })();
          var end = Ocelot_Data_DateTime.lastDateOfMonth(y)(m);
          var post = (function () {
              var pad = padNext(Data_Date.weekday(end));
              var $26 = pad === 0.0;
              if ($26) {
                  return [  ];
              };
              return Ocelot_Data_DateTime.dateRange(Ocelot_Data_DateTime.nextDay(end))(Ocelot_Data_DateTime.adjustDaysBy(pad)(end));
          })();
          var body = Ocelot_Data_DateTime.dateRange(start)(end);
          return {
              pre: pre,
              body: body,
              post: post,
              all: Data_Semigroup.append(Data_Semigroup.semigroupArray)(pre)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(body)(post))
          };
      };
  };
  exports["rowsFromArray"] = rowsFromArray;
  exports["alignByWeek"] = alignByWeek;
  exports["guessDate"] = guessDate;
})(PS);
(function(exports) {
  "use strict";

  exports.copyRecord = function(rec) {
    var copy = {};
    for (var key in rec) {
      if ({}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }
    return copy;
  };

  exports.unsafeInsert = function(l) {
    return function(a) {
      return function(rec) {
        rec[l] = a;
        return rec;
      };
    };
  };

  exports.unsafeModify = function(l) {
    return function (f) {
      return function(rec) {
        rec[l] = f(rec[l]);
        return rec;
      };
    };
  };
})(PS["Record.Builder"] = PS["Record.Builder"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Record.Builder"] = $PS["Record.Builder"] || {};
  var exports = $PS["Record.Builder"];
  var $foreign = $PS["Record.Builder"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Symbol = $PS["Data.Symbol"];
  var semigroupoidBuilder = Control_Semigroupoid.semigroupoidFn;
  var modify = function (dictCons) {
      return function (dictCons1) {
          return function (dictIsSymbol) {
              return function (l) {
                  return function (f) {
                      return function (r1) {
                          return $foreign.unsafeModify(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(f)(r1);
                      };
                  };
              };
          };
      };
  };
  var insert = function (dictCons) {
      return function (dictLacks) {
          return function (dictIsSymbol) {
              return function (l) {
                  return function (a) {
                      return function (r1) {
                          return $foreign.unsafeInsert(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r1);
                      };
                  };
              };
          };
      };
  };                                                
  var build = function (v) {
      return function (r1) {
          return v($foreign.copyRecord(r1));
      };
  };
  exports["build"] = build;
  exports["insert"] = insert;
  exports["modify"] = modify;
  exports["semigroupoidBuilder"] = semigroupoidBuilder;
})(PS);
(function(exports) {
  "use strict";

  exports.key = function (e) {
    return e.key;
  };

  exports.code = function (e) {
    return e.code;
  };
})(PS["Web.UIEvent.KeyboardEvent"] = PS["Web.UIEvent.KeyboardEvent"] || {});
(function(exports) {
  "use strict";

  exports._unsafeReadProtoTagged = function (nothing, just, name, value) {
    if (typeof window !== "undefined") {
      var ty = window[name];
      if (ty != null && value instanceof ty) {
        return just(value);
      }
      return nothing;
    } 
    var obj = value;
    while (obj != null) {
      var proto = Object.getPrototypeOf(obj);
      var constructorName = proto.constructor.name;
      if (constructorName === name) {
        return just(value);
      } else if (constructorName === "Object") {
        return nothing;
      }
      obj = proto;
    }
    return nothing;
  };
})(PS["Web.Internal.FFI"] = PS["Web.Internal.FFI"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.Internal.FFI"] = $PS["Web.Internal.FFI"] || {};
  var exports = $PS["Web.Internal.FFI"];
  var $foreign = $PS["Web.Internal.FFI"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var unsafeReadProtoTagged = function (name) {
      return function (value) {
          return $foreign["_unsafeReadProtoTagged"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, name, value);
      };
  };
  exports["unsafeReadProtoTagged"] = unsafeReadProtoTagged;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.UIEvent.KeyboardEvent"] = $PS["Web.UIEvent.KeyboardEvent"] || {};
  var exports = $PS["Web.UIEvent.KeyboardEvent"];
  var $foreign = $PS["Web.UIEvent.KeyboardEvent"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Internal_FFI = $PS["Web.Internal.FFI"];
  var toEvent = Unsafe_Coerce.unsafeCoerce;                                 
  var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("KeyboardEvent");
  exports["fromEvent"] = fromEvent;
  exports["toEvent"] = toEvent;
  exports["key"] = $foreign.key;
  exports["code"] = $foreign.code;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.UIEvent.MouseEvent"] = $PS["Web.UIEvent.MouseEvent"] || {};
  var exports = $PS["Web.UIEvent.MouseEvent"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];  
  var toEvent = Unsafe_Coerce.unsafeCoerce;
  exports["toEvent"] = toEvent;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Select"] = $PS["Select"] || {};
  var exports = $PS["Select"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Time_Duration = $PS["Data.Time.Duration"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_AVar = $PS["Effect.Aff.AVar"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Record_Builder = $PS["Record.Builder"];
  var Web_Event_Event = $PS["Web.Event.Event"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_UIEvent_KeyboardEvent = $PS["Web.UIEvent.KeyboardEvent"];
  var Web_UIEvent_MouseEvent = $PS["Web.UIEvent.MouseEvent"];                
  var Off = (function () {
      function Off() {

      };
      Off.value = new Off();
      return Off;
  })();
  var On = (function () {
      function On() {

      };
      On.value = new On();
      return On;
  })();
  var Prev = (function () {
      function Prev() {

      };
      Prev.value = new Prev();
      return Prev;
  })();
  var Next = (function () {
      function Next() {

      };
      Next.value = new Next();
      return Next;
  })();
  var Index = (function () {
      function Index(value0) {
          this.value0 = value0;
      };
      Index.create = function (value0) {
          return new Index(value0);
      };
      return Index;
  })();
  var Send = (function () {
      function Send(value0) {
          this.value0 = value0;
      };
      Send.create = function (value0) {
          return new Send(value0);
      };
      return Send;
  })();
  var Query = (function () {
      function Query(value0) {
          this.value0 = value0;
      };
      Query.create = function (value0) {
          return new Query(value0);
      };
      return Query;
  })();
  var Text = (function () {
      function Text() {

      };
      Text.value = new Text();
      return Text;
  })();
  var Toggle = (function () {
      function Toggle() {

      };
      Toggle.value = new Toggle();
      return Toggle;
  })();
  var Searched = (function () {
      function Searched(value0) {
          this.value0 = value0;
      };
      Searched.create = function (value0) {
          return new Searched(value0);
      };
      return Searched;
  })();
  var Selected = (function () {
      function Selected(value0) {
          this.value0 = value0;
      };
      Selected.create = function (value0) {
          return new Selected(value0);
      };
      return Selected;
  })();
  var VisibilityChanged = (function () {
      function VisibilityChanged(value0) {
          this.value0 = value0;
      };
      VisibilityChanged.create = function (value0) {
          return new VisibilityChanged(value0);
      };
      return VisibilityChanged;
  })();
  var Search = (function () {
      function Search(value0) {
          this.value0 = value0;
      };
      Search.create = function (value0) {
          return new Search(value0);
      };
      return Search;
  })();
  var Highlight = (function () {
      function Highlight(value0) {
          this.value0 = value0;
      };
      Highlight.create = function (value0) {
          return new Highlight(value0);
      };
      return Highlight;
  })();
  var Select = (function () {
      function Select(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Select.create = function (value0) {
          return function (value1) {
              return new Select(value0, value1);
          };
      };
      return Select;
  })();
  var ToggleClick = (function () {
      function ToggleClick(value0) {
          this.value0 = value0;
      };
      ToggleClick.create = function (value0) {
          return new ToggleClick(value0);
      };
      return ToggleClick;
  })();
  var Focus = (function () {
      function Focus(value0) {
          this.value0 = value0;
      };
      Focus.create = function (value0) {
          return new Focus(value0);
      };
      return Focus;
  })();
  var Key = (function () {
      function Key(value0) {
          this.value0 = value0;
      };
      Key.create = function (value0) {
          return new Key(value0);
      };
      return Key;
  })();
  var PreventClick = (function () {
      function PreventClick(value0) {
          this.value0 = value0;
      };
      PreventClick.create = function (value0) {
          return new PreventClick(value0);
      };
      return PreventClick;
  })();
  var SetVisibility = (function () {
      function SetVisibility(value0) {
          this.value0 = value0;
      };
      SetVisibility.create = function (value0) {
          return new SetVisibility(value0);
      };
      return SetVisibility;
  })();
  var Initialize = (function () {
      function Initialize(value0) {
          this.value0 = value0;
      };
      Initialize.create = function (value0) {
          return new Initialize(value0);
      };
      return Initialize;
  })();
  var Action = (function () {
      function Action(value0) {
          this.value0 = value0;
      };
      Action.create = function (value0) {
          return new Action(value0);
      };
      return Action;
  })();
  var handleQuery = function (dictMonadAff) {
      return function (handleQuery$prime) {
          return function (v) {
              if (v instanceof Send) {
                  return Halogen_Query_HalogenM.HalogenM(Control_Monad_Free.liftF(new Halogen_Query_HalogenM.ChildQuery(v.value0)));
              };
              if (v instanceof Query) {
                  return handleQuery$prime(v.value0);
              };
              throw new Error("Failed pattern match at Select (line 207, column 28 - line 212, column 23): " + [ v.constructor.name ]);
          };
      };
  };
  var eqVisibility = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Off && y instanceof Off) {
              return true;
          };
          if (x instanceof On && y instanceof On) {
              return true;
          };
          return false;
      };
  });
  var handleAction = function (dictMonadAff) {
      return function (dictLacks) {
          return function (dictLacks1) {
              return function (dictLacks2) {
                  return function (handleAction$prime) {
                      return function (handleEvent) {
                          var handle = function (act) {
                              return handleAction(dictMonadAff)()()()(handleAction$prime)(handleEvent)(act);
                          };
                          var getTargetIndex = function (st) {
                              var lastIndex = function ($79) {
                                  return (function (v) {
                                      return v - 1 | 0;
                                  })(st.getItemCount($79));
                              };
                              return function (v) {
                                  if (v instanceof Index) {
                                      return v.value0;
                                  };
                                  if (v instanceof Prev) {
                                      if (st.highlightedIndex instanceof Data_Maybe.Just && st.highlightedIndex.value0 !== 0) {
                                          return st.highlightedIndex.value0 - 1 | 0;
                                      };
                                      return lastIndex(st);
                                  };
                                  if (v instanceof Next) {
                                      if (st.highlightedIndex instanceof Data_Maybe.Just && st.highlightedIndex.value0 !== lastIndex(st)) {
                                          return st.highlightedIndex.value0 + 1 | 0;
                                      };
                                      return 0;
                                  };
                                  throw new Error("Failed pattern match at Select (line 330, column 23 - line 337, column 13): " + [ v.constructor.name ]);
                              };
                          };
                          return function (v) {
                              if (v instanceof Initialize) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (ref) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                          var $39 = {};
                                          for (var $40 in v1) {
                                              if ({}.hasOwnProperty.call(v1, $40)) {
                                                  $39[$40] = v1[$40];
                                              };
                                          };
                                          $39.debounceRef = new Data_Maybe.Just(ref);
                                          return $39;
                                      }))(function () {
                                          return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v.value0)(handleAction$prime);
                                      });
                                  });
                              };
                              if (v instanceof Search) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Functor.map(Effect.functorEffect)(Control_Bind.join(Data_Maybe.bindMaybe))(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Effect.applicativeEffect)(Effect_Ref.read)(st.debounceRef))))(function (ref) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                              var $43 = {};
                                              for (var $44 in v1) {
                                                  if ({}.hasOwnProperty.call(v1, $44)) {
                                                      $43[$44] = v1[$44];
                                                  };
                                              };
                                              $43.search = v.value0;
                                              return $43;
                                          }))(function () {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.fork(handle(new SetVisibility(On.value)))))(function () {
                                                  if (st.inputType instanceof Text && ref instanceof Data_Maybe.Nothing) {
                                                      return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(Data_Unit.unit)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff_AVar.empty))(function ($$var) {
                                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff.forkAff(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(st.debounceTime))(function () {
                                                              return Effect_Aff_AVar.put(Data_Unit.unit)($$var);
                                                          }))))(function (fiber) {
                                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.fork(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff_AVar.take($$var))))(function () {
                                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Effect_Ref.write(Data_Maybe.Nothing.value))(st.debounceRef))))(function () {
                                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                                          var $48 = {};
                                                                          for (var $49 in v1) {
                                                                              if ({}.hasOwnProperty.call(v1, $49)) {
                                                                                  $48[$49] = v1[$49];
                                                                              };
                                                                          };
                                                                          $48.highlightedIndex = new Data_Maybe.Just(0);
                                                                          return $48;
                                                                      }))(function () {
                                                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (newState) {
                                                                              return handleEvent(new Searched(newState.search));
                                                                          });
                                                                      });
                                                                  });
                                                              }))))(function () {
                                                                  return Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Effect_Ref.write(new Data_Maybe.Just({
                                                                      "var": $$var,
                                                                      fiber: fiber
                                                                  })))(st.debounceRef)));
                                                              });
                                                          });
                                                      }));
                                                  };
                                                  if (st.inputType instanceof Text && ref instanceof Data_Maybe.Just) {
                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff.killFiber(Effect_Exception.error("Time's up!"))(ref.value0.fiber))))(function () {
                                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff.forkAff(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(st.debounceTime))(function () {
                                                              return Effect_Aff_AVar.put(Data_Unit.unit)(ref["value0"]["var"]);
                                                          }))))(function (fiber) {
                                                              return Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Effect_Ref.write(new Data_Maybe.Just({
                                                                  "var": ref["value0"]["var"],
                                                                  fiber: fiber
                                                              })))(st.debounceRef)));
                                                          });
                                                      });
                                                  };
                                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                              });
                                          });
                                      });
                                  });
                              };
                              if (v instanceof Highlight) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                                      return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.eq(eqVisibility)(st.visibility)(On.value))(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                          var $53 = {};
                                          for (var $54 in v1) {
                                              if ({}.hasOwnProperty.call(v1, $54)) {
                                                  $53[$54] = v1[$54];
                                              };
                                          };
                                          $53.highlightedIndex = Data_Maybe.Just.create(getTargetIndex(st)(v.value0));
                                          return $53;
                                      }));
                                  });
                              };
                              if (v instanceof Select) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v.value1)((function () {
                                      var $80 = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()));
                                      return function ($81) {
                                          return $80(Web_Event_Event.preventDefault(Web_UIEvent_MouseEvent.toEvent($81)));
                                      };
                                  })()))(function () {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                                          return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.eq(eqVisibility)(st.visibility)(On.value))((function () {
                                              if (v.value0 instanceof Index) {
                                                  return handleEvent(new Selected(v.value0.value0));
                                              };
                                              if (v.value0 instanceof Next) {
                                                  return handleEvent(Selected.create(getTargetIndex(st)(v.value0)));
                                              };
                                              if (v.value0 instanceof Prev) {
                                                  return handleEvent(Selected.create(getTargetIndex(st)(v.value0)));
                                              };
                                              throw new Error("Failed pattern match at Select (line 274, column 32 - line 277, column 64): " + [ v.value0.constructor.name ]);
                                          })());
                                      });
                                  });
                              };
                              if (v instanceof ToggleClick) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_Event_Event.preventDefault(Web_UIEvent_MouseEvent.toEvent(v.value0))))(function () {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                                          if (st.visibility instanceof On) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handle(new Focus(false)))(function () {
                                                  return handle(new SetVisibility(Off.value));
                                              });
                                          };
                                          if (st.visibility instanceof Off) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handle(new Focus(true)))(function () {
                                                  return handle(new SetVisibility(On.value));
                                              });
                                          };
                                          throw new Error("Failed pattern match at Select (line 282, column 5 - line 288, column 34): " + [ st.visibility.constructor.name ]);
                                      });
                                  });
                              };
                              if (v instanceof Focus) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("select-input"))(function (inputElement) {
                                      return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(inputElement)(function (el) {
                                          return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))((function () {
                                              if (v.value0) {
                                                  return Web_HTML_HTMLElement.focus(el);
                                              };
                                              return Web_HTML_HTMLElement.blur(el);
                                          })());
                                      });
                                  });
                              };
                              if (v instanceof Key) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.fork(handle(new SetVisibility(On.value)))))(function () {
                                      var preventIt = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_Event_Event.preventDefault(Web_UIEvent_KeyboardEvent.toEvent(v.value0)));
                                      var v1 = Web_UIEvent_KeyboardEvent.key(v.value0);
                                      if (v1 === "ArrowUp" || v1 === "Up") {
                                          return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(preventIt)(handle(new Highlight(Prev.value)));
                                      };
                                      if (v1 === "ArrowDown" || v1 === "Down") {
                                          return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(preventIt)(handle(new Highlight(Next.value)));
                                      };
                                      if (v1 === "Escape" || v1 === "Esc") {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("select-input"))(function (inputElement) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(preventIt)(function () {
                                                  return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(inputElement)((function () {
                                                      var $82 = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()));
                                                      return function ($83) {
                                                          return $82(Web_HTML_HTMLElement.blur($83));
                                                      };
                                                  })());
                                              });
                                          });
                                      };
                                      if (v1 === "Enter") {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(preventIt)(function () {
                                                  return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(st.highlightedIndex)(function (ix) {
                                                      return handle(new Select(new Index(ix), Data_Maybe.Nothing.value));
                                                  });
                                              });
                                          });
                                      };
                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                  });
                              };
                              if (v instanceof PreventClick) {
                                  return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_Event_Event.preventDefault(Web_UIEvent_MouseEvent.toEvent(v.value0)));
                              };
                              if (v instanceof SetVisibility) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                                      return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(eqVisibility)(st.visibility)(v.value0))(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                          var $68 = {};
                                          for (var $69 in v2) {
                                              if ({}.hasOwnProperty.call(v2, $69)) {
                                                  $68[$69] = v2[$69];
                                              };
                                          };
                                          $68.visibility = v.value0;
                                          $68.highlightedIndex = new Data_Maybe.Just(0);
                                          return $68;
                                      }))(function () {
                                          return handleEvent(new VisibilityChanged(v.value0));
                                      }));
                                  });
                              };
                              if (v instanceof Action) {
                                  return handleAction$prime(v.value0);
                              };
                              throw new Error("Failed pattern match at Select (line 224, column 42 - line 324, column 34): " + [ v.constructor.name ]);
                          };
                      };
                  };
              };
          };
      };
  }; 
  var defaultSpec = {
      render: Data_Function["const"](Halogen_HTML_Core.text(Data_Monoid.mempty(Data_Monoid.monoidString))),
      handleAction: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),
      handleQuery: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value)),
      handleEvent: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),
      receive: Data_Function["const"](Data_Maybe.Nothing.value),
      initialize: Data_Maybe.Nothing.value,
      finalize: Data_Maybe.Nothing.value
  };
  var component = function (dictMonadAff) {
      return function (dictLacks) {
          return function (dictLacks1) {
              return function (dictLacks2) {
                  return function (mkInput) {
                      return function (spec) {
                          var initialState = (function () {
                              var pipeline = Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.modify()()(new Data_Symbol.IsSymbol(function () {
                                  return "search";
                              }))(Data_Symbol.SProxy.value)(Data_Maybe.fromMaybe("")))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.modify()()(new Data_Symbol.IsSymbol(function () {
                                  return "debounceTime";
                              }))(Data_Symbol.SProxy.value)(Data_Maybe.fromMaybe(Data_Monoid.mempty(Data_Time_Duration.monoidMilliseconds))))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()()(new Data_Symbol.IsSymbol(function () {
                                  return "debounceRef";
                              }))(Data_Symbol.SProxy.value)(Data_Maybe.Nothing.value))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()()(new Data_Symbol.IsSymbol(function () {
                                  return "visibility";
                              }))(Data_Symbol.SProxy.value)(Off.value))(Record_Builder.insert()()(new Data_Symbol.IsSymbol(function () {
                                  return "highlightedIndex";
                              }))(Data_Symbol.SProxy.value)(Data_Maybe.Nothing.value)))));
                              return Record_Builder.build(pipeline);
                          })();
                          return Halogen_Component.mkComponent({
                              initialState: function ($84) {
                                  return initialState(mkInput($84));
                              },
                              render: spec.render,
                              "eval": Halogen_Component.mkEval({
                                  handleQuery: handleQuery(dictMonadAff)(spec.handleQuery),
                                  handleAction: handleAction(dictMonadAff)()()()(spec.handleAction)(spec.handleEvent),
                                  initialize: new Data_Maybe.Just(new Initialize(spec.initialize)),
                                  receive: (function () {
                                      var $85 = Data_Functor.map(Data_Maybe.functorMaybe)(Action.create);
                                      return function ($86) {
                                          return $85(spec.receive($86));
                                      };
                                  })(),
                                  finalize: Data_Functor.map(Data_Maybe.functorMaybe)(Action.create)(spec.finalize)
                              })
                          });
                      };
                  };
              };
          };
      };
  };
  exports["Search"] = Search;
  exports["Highlight"] = Highlight;
  exports["Select"] = Select;
  exports["ToggleClick"] = ToggleClick;
  exports["Key"] = Key;
  exports["PreventClick"] = PreventClick;
  exports["SetVisibility"] = SetVisibility;
  exports["Action"] = Action;
  exports["Query"] = Query;
  exports["Searched"] = Searched;
  exports["Selected"] = Selected;
  exports["VisibilityChanged"] = VisibilityChanged;
  exports["Index"] = Index;
  exports["Off"] = Off;
  exports["On"] = On;
  exports["Text"] = Text;
  exports["Toggle"] = Toggle;
  exports["defaultSpec"] = defaultSpec;
  exports["component"] = component;
  exports["eqVisibility"] = eqVisibility;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Select.Setters"] = $PS["Select.Setters"] || {};
  var exports = $PS["Select.Setters"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Select = $PS["Select"];                
  var setToggleProps = Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Events.onFocus(function (v) {
      return Data_Maybe.Just.create(new Select.SetVisibility(Select.On.value));
  }), Halogen_HTML_Events.onMouseDown(function ($6) {
      return Data_Maybe.Just.create(Select.ToggleClick.create($6));
  }), Halogen_HTML_Events.onKeyDown(function ($7) {
      return Data_Maybe.Just.create(Select.Key.create($7));
  }), Halogen_HTML_Events.onBlur(function (v) {
      return Data_Maybe.Just.create(new Select.SetVisibility(Select.Off.value));
  }), Halogen_HTML_Properties.tabIndex(0), Halogen_HTML_Properties.ref("select-input") ]);
  var setItemProps = function (index) {
      return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Events.onMouseDown(function (ev) {
          return new Data_Maybe.Just(new Select.Select(new Select.Index(index), new Data_Maybe.Just(ev)));
      }), Halogen_HTML_Events.onMouseOver(function (v) {
          return Data_Maybe.Just.create(new Select.Highlight(new Select.Index(index)));
      }) ]);
  };
  var setInputProps = Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Events.onFocus(function (v) {
      return Data_Maybe.Just.create(new Select.SetVisibility(Select.On.value));
  }), Halogen_HTML_Events.onKeyDown(function ($8) {
      return Data_Maybe.Just.create(Select.Key.create($8));
  }), Halogen_HTML_Events.onValueInput(function ($9) {
      return Data_Maybe.Just.create(Select.Search.create($9));
  }), Halogen_HTML_Events.onMouseDown(function (v) {
      return Data_Maybe.Just.create(new Select.SetVisibility(Select.On.value));
  }), Halogen_HTML_Events.onBlur(function (v) {
      return Data_Maybe.Just.create(new Select.SetVisibility(Select.Off.value));
  }), Halogen_HTML_Properties.tabIndex(0), Halogen_HTML_Properties.ref("select-input") ]);
  var setContainerProps = Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Events.onMouseDown(function ($10) {
      return Data_Maybe.Just.create(Select.PreventClick.create($10));
  }) ]);
  exports["setToggleProps"] = setToggleProps;
  exports["setInputProps"] = setInputProps;
  exports["setItemProps"] = setItemProps;
  exports["setContainerProps"] = setContainerProps;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Components.DatePicker.Component"] = $PS["Ocelot.Components.DatePicker.Component"] || {};
  var exports = $PS["Ocelot.Components.DatePicker.Component"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Date = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_DateTime_Instant = $PS["Data.DateTime.Instant"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Formatter_DateTime = $PS["Data.Formatter.DateTime"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Now = $PS["Effect.Now"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Ocelot_Block_Button = $PS["Ocelot.Block.Button"];
  var Ocelot_Block_Format = $PS["Ocelot.Block.Format"];
  var Ocelot_Block_Icon = $PS["Ocelot.Block.Icon"];
  var Ocelot_Block_Input = $PS["Ocelot.Block.Input"];
  var Ocelot_Block_Layout = $PS["Ocelot.Block.Layout"];
  var Ocelot_Components_DatePicker_Utils = $PS["Ocelot.Components.DatePicker.Utils"];
  var Ocelot_Data_DateTime = $PS["Ocelot.Data.DateTime"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var Select = $PS["Select"];
  var Select_Setters = $PS["Select.Setters"];
  var Web_Event_Event = $PS["Web.Event.Event"];
  var Web_UIEvent_KeyboardEvent = $PS["Web.UIEvent.KeyboardEvent"];                
  var NotSelected = (function () {
      function NotSelected() {

      };
      NotSelected.value = new NotSelected();
      return NotSelected;
  })();
  var Selected = (function () {
      function Selected() {

      };
      Selected.value = new Selected();
      return Selected;
  })();
  var NotSelectable = (function () {
      function NotSelectable() {

      };
      NotSelectable.value = new NotSelectable();
      return NotSelectable;
  })();
  var Selectable = (function () {
      function Selectable() {

      };
      Selectable.value = new Selectable();
      return Selectable;
  })();
  var GetSelection = (function () {
      function GetSelection(value0) {
          this.value0 = value0;
      };
      GetSelection.create = function (value0) {
          return new GetSelection(value0);
      };
      return GetSelection;
  })();
  var SetSelection = (function () {
      function SetSelection(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetSelection.create = function (value0) {
          return function (value1) {
              return new SetSelection(value0, value1);
          };
      };
      return SetSelection;
  })();
  var SelectionChanged = (function () {
      function SelectionChanged(value0) {
          this.value0 = value0;
      };
      SelectionChanged.create = function (value0) {
          return new SelectionChanged(value0);
      };
      return SelectionChanged;
  })();
  var VisibilityChanged = (function () {
      function VisibilityChanged(value0) {
          this.value0 = value0;
      };
      VisibilityChanged.create = function (value0) {
          return new VisibilityChanged(value0);
      };
      return VisibilityChanged;
  })();
  var Searched = (function () {
      function Searched(value0) {
          this.value0 = value0;
      };
      Searched.create = function (value0) {
          return new Searched(value0);
      };
      return Searched;
  })();
  var Prev = (function () {
      function Prev() {

      };
      Prev.value = new Prev();
      return Prev;
  })();
  var Next = (function () {
      function Next() {

      };
      Next.value = new Next();
      return Next;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var Key = (function () {
      function Key(value0) {
          this.value0 = value0;
      };
      Key.create = function (value0) {
          return new Key(value0);
      };
      return Key;
  })();
  var ToggleMonth = (function () {
      function ToggleMonth(value0) {
          this.value0 = value0;
      };
      ToggleMonth.create = function (value0) {
          return new ToggleMonth(value0);
      };
      return ToggleMonth;
  })();
  var ToggleYear = (function () {
      function ToggleYear(value0) {
          this.value0 = value0;
      };
      ToggleYear.create = function (value0) {
          return new ToggleYear(value0);
      };
      return ToggleYear;
  })();
  var OutOfBounds = (function () {
      function OutOfBounds() {

      };
      OutOfBounds.value = new OutOfBounds();
      return OutOfBounds;
  })();
  var InBounds = (function () {
      function InBounds() {

      };
      InBounds.value = new InBounds();
      return InBounds;
  })();
  var CalendarItem = (function () {
      function CalendarItem(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      CalendarItem.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new CalendarItem(value0, value1, value2, value3);
                  };
              };
          };
      };
      return CalendarItem;
  })();
  var PassingOutput = (function () {
      function PassingOutput(value0) {
          this.value0 = value0;
      };
      PassingOutput.create = function (value0) {
          return new PassingOutput(value0);
      };
      return PassingOutput;
  })();
  var renderSearch = function (search) {
      return Ocelot_Block_Input.input(Select_Setters.setInputProps([ Halogen_HTML_Events.onKeyDown(function ($172) {
          return Data_Maybe.Just.create(Select.Action.create(Key.create($172)));
      }), Halogen_HTML_Properties.value(search) ]));
  };
  var renderItem = function (index) {
      return function (item) {
          var printDay = function (v) {
              var printDay$prime = (function () {
                  var $173 = Data_Either.either(Data_Function["const"]("-"))(Control_Category.identity(Control_Category.categoryFn));
                  var $174 = Data_Formatter_DateTime.formatDateTime("D");
                  return function ($175) {
                      return $173($174(Data_DateTime_Instant.toDateTime(Data_DateTime_Instant.fromDate($175))));
                  };
              })();
              return printDay$prime(v.value3);
          };
          var maybeSetItemProps = function (v) {
              return function (v1) {
                  return function (props) {
                      if (v1.value0 instanceof Selectable) {
                          return Select_Setters.setItemProps(v)(props);
                      };
                      return props;
                  };
              };
          };
          var getCalendarStyles = function (i) {
              var getSelectedStyles = function (v) {
                  if (v.value1 instanceof Selected) {
                      return "bg-blue-88 text-white before:scale-1";
                  };
                  return "before:scale-0";
              };
              var getSelectableStyles = function (v) {
                  if (v.value0 instanceof NotSelectable) {
                      return Data_Monoid.mempty(Data_Monoid.monoidString);
                  };
                  return "cursor-pointer hover:border hover:border-blue-88";
              };
              var getBoundaryStyles = function (v) {
                  if (v.value2 instanceof OutOfBounds) {
                      return "text-grey-90";
                  };
                  return Data_Monoid.mempty(Data_Monoid.monoidString);
              };
              return Data_String_Common.trim(getSelectableStyles(i) + (" " + (getSelectedStyles(i) + (" " + getBoundaryStyles(i)))));
          };
          return Halogen_HTML_Elements.div(maybeSetItemProps(index)(item)([ Ocelot_HTML_Properties.css(Data_String_Common.trim("w-14 h-14 rounded-full relative " + ("flex items-center justify-center " + ("transition-1/4 border border-white " + ("before:no-content before:transition-1/4 " + ("before:w-full before:h-full " + ("before:absolute before:pin-t before:pin-l " + getCalendarStyles(item)))))))) ]))([ Halogen_HTML_Core.text(printDay(item)) ]);
      };
  };
  var renderRows = (function () {
      var renderRow = function (offset) {
          return function (items) {
              return Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex font-light") ])(Data_Array.mapWithIndex(function (column) {
                  return function (item) {
                      return renderItem(column + offset | 0)(item);
                  };
              })(items));
          };
      };
      return Data_Array.mapWithIndex(function (row) {
          return function (subArr) {
              return renderRow(row * 7 | 0)(subArr);
          };
      });
  })();
  var handleAction = function (v) {
      return Halogen_Query_HalogenM.raise(v.value0);
  };
  var generateCalendarItem = function (v) {
      return function (bound) {
          return function (i) {
              if (v instanceof Data_Maybe.Nothing) {
                  return new CalendarItem(Selectable.value, NotSelected.value, bound, i);
              };
              if (v instanceof Data_Maybe.Just) {
                  if (Data_Eq.eq(Data_Date.eqDate)(v.value0)(i)) {
                      return new CalendarItem(Selectable.value, Selected.value, bound, i);
                  };
                  if (Data_Boolean.otherwise) {
                      return new CalendarItem(Selectable.value, NotSelected.value, bound, i);
                  };
              };
              throw new Error("Failed pattern match at Ocelot.Components.DatePicker.Component (line 208, column 1 - line 212, column 18): " + [ v.constructor.name, bound.constructor.name, i.constructor.name ]);
          };
      };
  };
  var generateCalendarRows = function (selection) {
      return function (y) {
          return function (m) {
              var v = Ocelot_Components_DatePicker_Utils.alignByWeek(y)(m);
              var thisMonth = Data_Functor.mapFlipped(Data_Functor.functorArray)(v.body)(generateCalendarItem(selection)(InBounds.value));
              var outOfBounds = Data_Functor.map(Data_Functor.functorArray)(generateCalendarItem(selection)(OutOfBounds.value));
              var nextMonth = outOfBounds(v.post);
              var lastMonth = outOfBounds(v.pre);
              return Data_Semigroup.append(Data_Semigroup.semigroupArray)(lastMonth)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(thisMonth)(nextMonth));
          };
      };
  };
  var initialState = function (v) {
      var targetDate$prime = Data_Maybe.fromMaybe(new Data_Tuple.Tuple(Ocelot_Data_DateTime.unsafeMkYear(2001), Ocelot_Data_DateTime.unsafeMkMonth(1)))(v.targetDate);
      return {
          targetDate: targetDate$prime,
          selection: v.selection,
          calendarItems: generateCalendarRows(v.selection)(Data_Tuple.fst(targetDate$prime))(Data_Tuple.snd(targetDate$prime)),
          disabled: v.disabled
      };
  };
  var synchronize = function (dictMonadAff) {
      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v) {
          var calendarItems = generateCalendarRows(v.selection)(v.targetDate.value0)(v.targetDate.value1);
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
              var $89 = {};
              for (var $90 in v1) {
                  if ({}.hasOwnProperty.call(v1, $90)) {
                      $89[$90] = v1[$90];
                  };
              };
              $89.calendarItems = calendarItems;
              $89.highlightedIndex = Data_Maybe.Nothing.value;
              return $89;
          }))(function () {
              var update = (function () {
                  if (v.selection instanceof Data_Maybe.Nothing) {
                      return Control_Category.identity(Control_Category.categoryFn);
                  };
                  if (v.selection instanceof Data_Maybe.Just) {
                      return function (v1) {
                          var $93 = {};
                          for (var $94 in v1) {
                              if ({}.hasOwnProperty.call(v1, $94)) {
                                  $93[$94] = v1[$94];
                              };
                          };
                          $93.search = Ocelot_Data_DateTime.formatDate(v.selection.value0);
                          return $93;
                      };
                  };
                  throw new Error("Failed pattern match at Ocelot.Components.DatePicker.Component (line 227, column 16 - line 229, column 56): " + [ v.selection.constructor.name ]);
              })();
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function ($176) {
                  return update((function (v1) {
                      var $97 = {};
                      for (var $98 in v1) {
                          if ({}.hasOwnProperty.call(v1, $98)) {
                              $97[$98] = v1[$98];
                          };
                      };
                      $97.calendarItems = calendarItems;
                      return $97;
                  })($176));
              });
          });
      });
  };
  var setSelection = function (dictMonadAff) {
      return function (selection) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
              var targetDate = Data_Maybe.maybe(st.targetDate)(function (d) {
                  return new Data_Tuple.Tuple(Data_Date.year(d), Data_Date.month(d));
              })(selection);
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
                  var $104 = {};
                  for (var $105 in v) {
                      if ({}.hasOwnProperty.call(v, $105)) {
                          $104[$105] = v[$105];
                      };
                  };
                  $104.selection = selection;
                  $104.targetDate = targetDate;
                  return $104;
              }))(function () {
                  return synchronize(dictMonadAff);
              });
          });
      };
  };
  var embeddedInput = function (v) {
      return {
          inputType: Select.Text.value,
          search: Data_Maybe.Nothing.value,
          debounceTime: Data_Maybe.Nothing.value,
          getItemCount: function ($177) {
              return Data_Array.length((function (v1) {
                  return v1.calendarItems;
              })($177));
          },
          targetDate: v.targetDate,
          selection: v.selection,
          calendarItems: v.calendarItems,
          disabled: v.disabled
      };
  };
  var embeddedInitialize = new Data_Maybe.Just(Initialize.value);
  var embeddedHandleQuery = function (dictMonadAff) {
      return function (v) {
          if (v instanceof GetSelection) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Functor.map(Data_Maybe.functorMaybe)(v.value0)(v1.selection));
              });
          };
          if (v instanceof SetSelection) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(setSelection(dictMonadAff)(v.value0));
          };
          throw new Error("Failed pattern match at Ocelot.Components.DatePicker.Component (line 302, column 23 - line 307, column 27): " + [ v.constructor.name ]);
      };
  };
  var embeddedHandleMessage = function (dictMonadAff) {
      return function (v) {
          if (v instanceof Select.Selected) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  var v2 = Data_Array.index(v1.calendarItems)(v.value0);
                  if (v2 instanceof Data_Maybe.Nothing) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v2 instanceof Data_Maybe.Just) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                          var $121 = {};
                          for (var $122 in v3) {
                              if ({}.hasOwnProperty.call(v3, $122)) {
                                  $121[$122] = v3[$122];
                              };
                          };
                          $121.selection = new Data_Maybe.Just(v2.value0.value3);
                          $121.visibility = Select.Off.value;
                          return $121;
                      }))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(SelectionChanged.create(new Data_Maybe.Just(v2.value0.value3))))(function () {
                              return synchronize(dictMonadAff);
                          });
                      });
                  };
                  throw new Error("Failed pattern match at Ocelot.Components.DatePicker.Component (line 318, column 5 - line 326, column 20): " + [ v2.constructor.name ]);
              });
          };
          if (v instanceof Select.Searched) {
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  var $131 = {};
                  for (var $132 in v1) {
                      if ({}.hasOwnProperty.call(v1, $132)) {
                          $131[$132] = v1[$132];
                      };
                  };
                  $131.search = v.value0;
                  return $131;
              });
          };
          if (v instanceof Select.VisibilityChanged) {
              return Halogen_Query_HalogenM.raise(new VisibilityChanged(v.value0));
          };
          throw new Error("Failed pattern match at Ocelot.Components.DatePicker.Component (line 313, column 25 - line 334, column 43): " + [ v.constructor.name ]);
      };
  };
  var embeddedHandleAction = function (dictMonadAff) {
      return function (v) {
          if (v instanceof Initialize) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Now.nowDate))(function (d) {
                      var d$prime = Data_Maybe.fromMaybe(d)(v1.selection);
                      var targetDate = new Data_Tuple.Tuple(Data_Date.year(d$prime), Data_Date.month(d$prime));
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                          var $138 = {};
                          for (var $139 in v2) {
                              if ({}.hasOwnProperty.call(v2, $139)) {
                                  $138[$139] = v2[$139];
                              };
                          };
                          $138.targetDate = targetDate;
                          $138.calendarItems = generateCalendarRows(v1.selection)(Data_Tuple.fst(targetDate))(Data_Tuple.snd(targetDate));
                          return $138;
                      }))(function () {
                          return synchronize(dictMonadAff);
                      });
                  });
              });
          };
          if (v instanceof ToggleMonth) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                  var y = Data_Tuple.fst(st.targetDate);
                  var m = Data_Tuple.snd(st.targetDate);
                  var newDate = (function () {
                      if (v.value0 instanceof Next) {
                          return Ocelot_Data_DateTime.nextMonth(Data_Date.canonicalDate(y)(m)(Data_Bounded.bottom(Data_Date_Component.boundedDay)));
                      };
                      if (v.value0 instanceof Prev) {
                          return Ocelot_Data_DateTime.prevMonth(Data_Date.canonicalDate(y)(m)(Data_Bounded.bottom(Data_Date_Component.boundedDay)));
                      };
                      throw new Error("Failed pattern match at Ocelot.Components.DatePicker.Component (line 261, column 19 - line 263, column 61): " + [ v.value0.constructor.name ]);
                  })();
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $143 = {};
                      for (var $144 in v1) {
                          if ({}.hasOwnProperty.call(v1, $144)) {
                              $143[$144] = v1[$144];
                          };
                      };
                      $143.targetDate = new Data_Tuple.Tuple(Data_Date.year(newDate), Data_Date.month(newDate));
                      return $143;
                  }))(function () {
                      return synchronize(dictMonadAff);
                  });
              });
          };
          if (v instanceof Key) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  var $147 = {};
                  for (var $148 in v1) {
                      if ({}.hasOwnProperty.call(v1, $148)) {
                          $147[$148] = v1[$148];
                      };
                  };
                  $147.visibility = Select.On.value;
                  return $147;
              }))(function () {
                  var preventIt = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_Event_Event.preventDefault(Web_UIEvent_KeyboardEvent.toEvent(v.value0)));
                  var v1 = Web_UIEvent_KeyboardEvent.code(v.value0);
                  if (v1 === "Enter") {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(preventIt)(function () {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                              return v2.search;
                          }))(function (search) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Now.nowDate))(function (today) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                      if (search === "") {
                                          return setSelection(dictMonadAff)(Data_Maybe.Nothing.value);
                                      };
                                      var v2 = Ocelot_Components_DatePicker_Utils.guessDate(today)(5)(search);
                                      if (v2 instanceof Data_Maybe.Nothing) {
                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                      };
                                      if (v2 instanceof Data_Maybe.Just) {
                                          return setSelection(dictMonadAff)(new Data_Maybe.Just(v2.value0));
                                      };
                                      throw new Error("Failed pattern match at Ocelot.Components.DatePicker.Component (line 277, column 17 - line 280, column 36): " + [ v2.constructor.name ]);
                                  })())(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                          var $154 = {};
                                          for (var $155 in v2) {
                                              if ({}.hasOwnProperty.call(v2, $155)) {
                                                  $154[$155] = v2[$155];
                                              };
                                          };
                                          $154.visibility = Select.Off.value;
                                          return $154;
                                      }))(function () {
                                          return Halogen_Query_HalogenM.raise(new Searched(search));
                                      });
                                  });
                              });
                          });
                      });
                  };
                  if (v1 === "Escape") {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(preventIt)(function () {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                              var $157 = {};
                              for (var $158 in v2) {
                                  if ({}.hasOwnProperty.call(v2, $158)) {
                                      $157[$158] = v2[$158];
                                  };
                              };
                              $157.visibility = Select.Off.value;
                              return $157;
                          });
                      });
                  };
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              });
          };
          if (v instanceof ToggleYear) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                  var y = Data_Tuple.fst(st.targetDate);
                  var m = Data_Tuple.snd(st.targetDate);
                  var newDate = (function () {
                      if (v.value0 instanceof Next) {
                          return Ocelot_Data_DateTime.nextYear(Data_Date.canonicalDate(y)(m)(Data_Bounded.bottom(Data_Date_Component.boundedDay)));
                      };
                      if (v.value0 instanceof Prev) {
                          return Ocelot_Data_DateTime.prevYear(Data_Date.canonicalDate(y)(m)(Data_Bounded.bottom(Data_Date_Component.boundedDay)));
                      };
                      throw new Error("Failed pattern match at Ocelot.Components.DatePicker.Component (line 292, column 19 - line 294, column 60): " + [ v.value0.constructor.name ]);
                  })();
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $162 = {};
                      for (var $163 in v1) {
                          if ({}.hasOwnProperty.call(v1, $163)) {
                              $162[$163] = v1[$163];
                          };
                      };
                      $162.targetDate = new Data_Tuple.Tuple(Data_Date.year(newDate), Data_Date.month(newDate));
                      return $162;
                  }))(function () {
                      return synchronize(dictMonadAff);
                  });
              });
          };
          throw new Error("Failed pattern match at Ocelot.Components.DatePicker.Component (line 243, column 24 - line 296, column 16): " + [ v.constructor.name ]);
      };
  };
  var calendarNav = function (y) {
      return function (m) {
          var fmtMonthYear = (function () {
              var $178 = Data_Either.either(Data_Function["const"]("-"))(Control_Category.identity(Control_Category.categoryFn));
              var $179 = Data_Formatter_DateTime.formatDateTime("MMMM YYYY");
              return function ($180) {
                  return $178($179(Data_DateTime_Instant.toDateTime(Data_DateTime_Instant.fromDate($180))));
              };
          })();
          var monthYear = fmtMonthYear(Data_Date.canonicalDate(y)(m)(Data_Bounded.bottom(Data_Date_Component.boundedDay)));
          var dateHeader = Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Halogen_HTML_Core.text(monthYear) ]);
          var arrowButton = function (q) {
              return Ocelot_Block_Button.buttonClear([ Halogen_HTML_Events.onClick((function () {
                  var $181 = Data_Function["const"](q);
                  return function ($182) {
                      return Data_Maybe.Just.create(Select.Action.create($181($182)));
                  };
              })()), Ocelot_HTML_Properties.css("text-grey-70 p-3") ]);
          };
          return Ocelot_Block_Format.contentHeading([ Ocelot_HTML_Properties.css("flex") ])([ arrowButton(new ToggleMonth(Prev.value))([ Ocelot_Block_Icon.chevronLeft_ ]), dateHeader, arrowButton(new ToggleMonth(Next.value))([ Ocelot_Block_Icon.chevronRight_ ]) ]);
      };
  };
  var calendarHeader = (function () {
      var headers = [ "S", "M", "T", "W", "T", "F", "S" ];
      return Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex text-grey-70") ])(Data_Functor.mapFlipped(Data_Functor.functorArray)(headers)(function (day) {
          return Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("w-14 h-14 flex items-center justify-center") ])([ Halogen_HTML_Core.text(day) ]);
      }));
  })();
  var renderCalendar = function (y) {
      return function (m) {
          return function (calendarItems) {
              var dropdownClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "pin-t", "pin-l", "p-6", "bg-white", "text-center", "text-lg" ]);
              return Ocelot_Block_Layout.popover(Select_Setters.setContainerProps([ Halogen_HTML_Properties.classes(dropdownClasses) ]))([ calendarNav(y)(m), calendarHeader, Halogen_HTML_Elements.div_(renderRows(Ocelot_Components_DatePicker_Utils.rowsFromArray(calendarItems))) ]);
          };
      };
  };
  var renderSelect = function (y) {
      return function (m) {
          return function (visibility) {
              return function (calendarItems) {
                  return Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("relative") ])((function () {
                      var $166 = Data_Eq.eq(Select.eqVisibility)(visibility)(Select.On.value);
                      if ($166) {
                          return [ renderCalendar(y)(m)(calendarItems) ];
                      };
                      return [  ];
                  })());
              };
          };
      };
  };
  var embeddedRender = function (st) {
      if (st.disabled) {
          return Ocelot_Block_Input.input([ Halogen_HTML_Properties.disabled(true), Halogen_HTML_Properties.value(st.search) ]);
      };
      return Halogen_HTML_Elements.div_([ renderSearch(st.search), renderSelect(Data_Tuple.fst(st.targetDate))(Data_Tuple.snd(st.targetDate))(st.visibility)(st.calendarItems) ]);
  };
  var spec = function (dictMonadAff) {
      return {
          render: embeddedRender,
          handleAction: embeddedHandleAction(dictMonadAff),
          handleQuery: embeddedHandleQuery(dictMonadAff),
          handleEvent: embeddedHandleMessage(dictMonadAff),
          receive: Select.defaultSpec.receive,
          initialize: embeddedInitialize,
          finalize: Select.defaultSpec.finalize
      };
  };
  var _select = Data_Symbol.SProxy.value;
  var handleQuery = function (v) {
      if (v instanceof GetSelection) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
              return "select";
          }))(Data_Ord.ordUnit)(_select)(Data_Unit.unit)(Select.Query.create(Halogen_Query.request(GetSelection.create))))(function (response) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Functor.map(Data_Maybe.functorMaybe)(v.value0)(response));
          });
      };
      if (v instanceof SetSelection) {
          return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
              return "select";
          }))(Data_Ord.ordUnit)(_select)(Data_Unit.unit)(Select.Query.create(Halogen_Query.tell(SetSelection.create(v.value0)))));
      };
      throw new Error("Failed pattern match at Ocelot.Components.DatePicker.Component (line 183, column 15 - line 188, column 69): " + [ v.constructor.name ]);
  };
  var render = function (dictMonadAff) {
      return function (st) {
          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "select";
          }))(Data_Ord.ordUnit)(_select)(Data_Unit.unit)(Select.component(dictMonadAff)()()()(Control_Category.identity(Control_Category.categoryFn))(spec(dictMonadAff)))(embeddedInput(st))(function ($183) {
              return Data_Maybe.Just.create(PassingOutput.create($183));
          });
      };
  };
  var component = function (dictMonadAff) {
      return Halogen_Component.mkComponent({
          initialState: initialState,
          render: render(dictMonadAff),
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction,
              handleQuery: handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["SetSelection"] = SetSelection;
  exports["SelectionChanged"] = SelectionChanged;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Components.TimePicker.Utils"] = $PS["Ocelot.Components.TimePicker.Utils"] || {};
  var exports = $PS["Ocelot.Components.TimePicker.Utils"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_DateTime = $PS["Data.DateTime"];
  var Data_Either = $PS["Data.Either"];
  var Data_Formatter_DateTime = $PS["Data.Formatter.DateTime"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_String_Regex = $PS["Data.String.Regex"];                
  var guessTime = function (v) {
      if (v === "") {
          return Data_Maybe.Nothing.value;
      };
      var meridian = Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(function (r) {
          return Control_Bind.join(Data_Maybe.bindMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Array_NonEmpty.head)(Data_String_Regex.match(r)(v)));
      })(Data_String_Regex.regex("p")(Data_String_Regex.parseFlags("i")));
      var format = Data_Maybe.maybe("HHmm")(Data_Function["const"]("hhmm a"))(meridian);
      var digits = Data_Either.either(Data_Function["const"]([  ]))(function (r) {
          return Data_Maybe.fromMaybe([  ])(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Array_NonEmpty.catMaybes)(Data_String_Regex.match(r)(v)));
      })(Data_String_Regex.regex("\\d")(Data_String_Regex.parseFlags("g")));
      var digits$prime = Data_String_Common.joinWith("")(digits);
      var hourMin = (function () {
          var v1 = Data_Array.length(digits);
          if (v1 === 1) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)("0" + (digits$prime + "00"));
          };
          if (v1 === 2) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(digits$prime + "00");
          };
          if (v1 === 3) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)("0" + digits$prime);
          };
          if (v1 === 4) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(digits$prime);
          };
          return Data_Maybe.Nothing.value;
      })();
      var guess = Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
          return v1 + Data_Maybe.maybe("")(Data_Function["const"](" PM"))(meridian);
      })(hourMin);
      return Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime.time)(Control_Bind.join(Data_Maybe.bindMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)((function () {
          var $5 = Data_Formatter_DateTime.unformatDateTime(format);
          return function ($6) {
              return Data_Either.hush($5($6));
          };
      })())(guess)));
  };
  exports["guessTime"] = guessTime;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Components.TimePicker.Component"] = $PS["Ocelot.Components.TimePicker.Component"] || {};
  var exports = $PS["Ocelot.Components.TimePicker.Component"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_FunctorWithIndex = $PS["Data.FunctorWithIndex"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Time = $PS["Data.Time"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Ocelot_Block_Input = $PS["Ocelot.Block.Input"];
  var Ocelot_Block_Layout = $PS["Ocelot.Block.Layout"];
  var Ocelot_Components_TimePicker_Utils = $PS["Ocelot.Components.TimePicker.Utils"];
  var Ocelot_Data_DateTime = $PS["Ocelot.Data.DateTime"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var Select = $PS["Select"];
  var Select_Setters = $PS["Select.Setters"];
  var Web_Event_Event = $PS["Web.Event.Event"];
  var Web_UIEvent_KeyboardEvent = $PS["Web.UIEvent.KeyboardEvent"];                
  var NotSelected = (function () {
      function NotSelected() {

      };
      NotSelected.value = new NotSelected();
      return NotSelected;
  })();
  var Selected = (function () {
      function Selected() {

      };
      Selected.value = new Selected();
      return Selected;
  })();
  var NotSelectable = (function () {
      function NotSelectable() {

      };
      NotSelectable.value = new NotSelectable();
      return NotSelectable;
  })();
  var Selectable = (function () {
      function Selectable() {

      };
      Selectable.value = new Selectable();
      return Selectable;
  })();
  var TimeUnit = (function () {
      function TimeUnit(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TimeUnit.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TimeUnit(value0, value1, value2);
              };
          };
      };
      return TimeUnit;
  })();
  var GetSelection = (function () {
      function GetSelection(value0) {
          this.value0 = value0;
      };
      GetSelection.create = function (value0) {
          return new GetSelection(value0);
      };
      return GetSelection;
  })();
  var SetSelection = (function () {
      function SetSelection(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetSelection.create = function (value0) {
          return function (value1) {
              return new SetSelection(value0, value1);
          };
      };
      return SetSelection;
  })();
  var SelectionChanged = (function () {
      function SelectionChanged(value0) {
          this.value0 = value0;
      };
      SelectionChanged.create = function (value0) {
          return new SelectionChanged(value0);
      };
      return SelectionChanged;
  })();
  var VisibilityChanged = (function () {
      function VisibilityChanged(value0) {
          this.value0 = value0;
      };
      VisibilityChanged.create = function (value0) {
          return new VisibilityChanged(value0);
      };
      return VisibilityChanged;
  })();
  var Searched = (function () {
      function Searched(value0) {
          this.value0 = value0;
      };
      Searched.create = function (value0) {
          return new Searched(value0);
      };
      return Searched;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var Search = (function () {
      function Search(value0) {
          this.value0 = value0;
      };
      Search.create = function (value0) {
          return new Search(value0);
      };
      return Search;
  })();
  var Key = (function () {
      function Key(value0) {
          this.value0 = value0;
      };
      Key.create = function (value0) {
          return new Key(value0);
      };
      return Key;
  })();
  var PassingOutput = (function () {
      function PassingOutput(value0) {
          this.value0 = value0;
      };
      PassingOutput.create = function (value0) {
          return new PassingOutput(value0);
      };
      return PassingOutput;
  })();
  var renderSearch = function (search) {
      return Ocelot_Block_Input.input(Select_Setters.setInputProps([ Halogen_HTML_Events.onKeyDown(function ($125) {
          return Data_Maybe.Just.create(Select.Action.create(Key.create($125)));
      }), Halogen_HTML_Properties.value(search) ]));
  };
  var renderItem = function (index) {
      return function (item) {
          var printTime = function (v) {
              return Ocelot_Data_DateTime.formatTime(v.value2);
          };
          var maybeSetItemProps = function (v) {
              return function (v1) {
                  return function (props) {
                      if (v1.value0 instanceof Selectable) {
                          return Select_Setters.setItemProps(v)(props);
                      };
                      return props;
                  };
              };
          };
          var getTimeStyles = function (i) {
              var getSelectedStyles = function (v) {
                  if (v.value1 instanceof Selected) {
                      return "text-blue-88";
                  };
                  return Data_Monoid.mempty(Data_Monoid.monoidString);
              };
              var getSelectableStyles = function (v) {
                  if (v.value0 instanceof NotSelectable) {
                      return Data_Monoid.mempty(Data_Monoid.monoidString);
                  };
                  return "cursor-pointer hover:bg-grey-97";
              };
              return Data_String_Common.trim(getSelectableStyles(i) + (" " + getSelectedStyles(i)));
          };
          return Halogen_HTML_Elements.div(maybeSetItemProps(index)(item)([ Ocelot_HTML_Properties.css(Data_String_Common.trim("relative p-3 transition-1/4 " + getTimeStyles(item))) ]))([ Halogen_HTML_Core.text(printTime(item)) ]);
      };
  };
  var handleAction = function (v) {
      return Halogen_Query_HalogenM.raise(v.value0);
  };
  var generateTimeUnit = function (v) {
      return function (i) {
          if (v instanceof Data_Maybe.Nothing) {
              return new TimeUnit(Selectable.value, NotSelected.value, i);
          };
          if (v instanceof Data_Maybe.Just) {
              if (Data_Eq.eq(Data_Time.eqTime)(v.value0)(i)) {
                  return new TimeUnit(Selectable.value, Selected.value, i);
              };
              if (Data_Boolean.otherwise) {
                  return new TimeUnit(Selectable.value, NotSelected.value, i);
              };
          };
          throw new Error("Failed pattern match at Ocelot.Components.TimePicker.Component (line 320, column 1 - line 323, column 14): " + [ v.constructor.name, i.constructor.name ]);
      };
  };
  var generateTimes = function (selection) {
      return Data_Functor.mapFlipped(Data_Functor.functorArray)(Ocelot_Data_DateTime.defaultTimeRange)(generateTimeUnit(selection));
  };
  var initialState = function (v) {
      return {
          selection: v.selection,
          timeUnits: generateTimes(v.selection),
          disabled: v.disabled
      };
  };
  var synchronize = Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
          var $62 = {};
          for (var $63 in v1) {
              if ({}.hasOwnProperty.call(v1, $63)) {
                  $62[$63] = v1[$63];
              };
          };
          $62.timeUnits = generateTimes(v.selection);
          return $62;
      }))(function () {
          if (v.selection instanceof Data_Maybe.Nothing) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
          };
          if (v.selection instanceof Data_Maybe.Just) {
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  var $66 = {};
                  for (var $67 in v1) {
                      if ({}.hasOwnProperty.call(v1, $67)) {
                          $66[$67] = v1[$67];
                      };
                  };
                  $66.search = Ocelot_Data_DateTime.formatTime(v.selection.value0);
                  return $66;
              });
          };
          throw new Error("Failed pattern match at Ocelot.Components.TimePicker.Component (line 334, column 3 - line 336, column 62): " + [ v.selection.constructor.name ]);
      });
  });
  var setSelection = function (selection) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
          var $71 = {};
          for (var $72 in v) {
              if ({}.hasOwnProperty.call(v, $72)) {
                  $71[$72] = v[$72];
              };
          };
          $71.selection = selection;
          return $71;
      }))(function () {
          return synchronize;
      });
  };
  var embeddedInput = function (v) {
      return {
          inputType: Select.Text.value,
          search: Data_Maybe.Nothing.value,
          debounceTime: Data_Maybe.Nothing.value,
          getItemCount: function ($126) {
              return Data_Array.length((function (v1) {
                  return v1.timeUnits;
              })($126));
          },
          selection: v.selection,
          timeUnits: v.timeUnits,
          disabled: v.disabled
      };
  };
  var embeddedHandleQuery = function (v) {
      if (v instanceof GetSelection) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Functor.map(Data_Maybe.functorMaybe)(v.value0)(v1.selection));
          });
      };
      if (v instanceof SetSelection) {
          return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(setSelection(v.value0));
      };
      throw new Error("Failed pattern match at Ocelot.Components.TimePicker.Component (line 218, column 23 - line 224, column 27): " + [ v.constructor.name ]);
  };
  var embeddedHandleMessage = function (v) {
      if (v instanceof Select.Selected) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
              var v2 = Data_Array.index(v1.timeUnits)(v.value0);
              if (v2 instanceof Data_Maybe.Nothing) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              };
              if (v2 instanceof Data_Maybe.Just) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                      var $87 = {};
                      for (var $88 in v3) {
                          if ({}.hasOwnProperty.call(v3, $88)) {
                              $87[$88] = v3[$88];
                          };
                      };
                      $87.selection = new Data_Maybe.Just(v2.value0.value2);
                      $87.visibility = Select.Off.value;
                      return $87;
                  }))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(SelectionChanged.create(new Data_Maybe.Just(v2.value0.value2))))(function () {
                          return synchronize;
                      });
                  });
              };
              throw new Error("Failed pattern match at Ocelot.Components.TimePicker.Component (line 202, column 5 - line 207, column 20): " + [ v2.constructor.name ]);
          });
      };
      if (v instanceof Select.Searched) {
          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
              var $96 = {};
              for (var $97 in v1) {
                  if ({}.hasOwnProperty.call(v1, $97)) {
                      $96[$97] = v1[$97];
                  };
              };
              $96.search = v.value0;
              return $96;
          });
      };
      if (v instanceof Select.VisibilityChanged) {
          return Halogen_Query_HalogenM.raise(new VisibilityChanged(v.value0));
      };
      throw new Error("Failed pattern match at Ocelot.Components.TimePicker.Component (line 197, column 25 - line 215, column 43): " + [ v.constructor.name ]);
  };
  var embeddedHandleAction = function (dictMonadAff) {
      return function (v) {
          if (v instanceof Initialize) {
              return synchronize;
          };
          if (v instanceof Search) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                  if (v.value0 === "") {
                      return setSelection(Data_Maybe.Nothing.value);
                  };
                  var v1 = Ocelot_Components_TimePicker_Utils.guessTime(v.value0);
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(setSelection(new Data_Maybe.Just(v1.value0)))(function () {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                              var $104 = {};
                              for (var $105 in v2) {
                                  if ({}.hasOwnProperty.call(v2, $105)) {
                                      $104[$105] = v2[$105];
                                  };
                              };
                              $104.visibility = Select.Off.value;
                              return $104;
                          });
                      });
                  };
                  throw new Error("Failed pattern match at Ocelot.Components.TimePicker.Component (line 173, column 13 - line 177, column 45): " + [ v1.constructor.name ]);
              })())(function () {
                  return Halogen_Query_HalogenM.raise(new Searched(v.value0));
              });
          };
          if (v instanceof Key) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  var $109 = {};
                  for (var $110 in v1) {
                      if ({}.hasOwnProperty.call(v1, $110)) {
                          $109[$110] = v1[$110];
                      };
                  };
                  $109.visibility = Select.Off.value;
                  return $109;
              }))(function () {
                  var preventIt = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_Event_Event.preventDefault(Web_UIEvent_KeyboardEvent.toEvent(v.value0)));
                  var v1 = Web_UIEvent_KeyboardEvent.code(v.value0);
                  if (v1 === "Enter") {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(preventIt)(function () {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v2) {
                              return embeddedHandleAction(dictMonadAff)(new Search(v2.search));
                          });
                      });
                  };
                  if (v1 === "Escape") {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(preventIt)(function () {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                              var $115 = {};
                              for (var $116 in v2) {
                                  if ({}.hasOwnProperty.call(v2, $116)) {
                                      $115[$116] = v2[$116];
                                  };
                              };
                              $115.visibility = Select.Off.value;
                              return $115;
                          });
                      });
                  };
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              });
          };
          throw new Error("Failed pattern match at Ocelot.Components.TimePicker.Component (line 166, column 24 - line 191, column 29): " + [ v.constructor.name ]);
      };
  };
  var dropdownClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "max-h-80", "w-full", "overflow-y-scroll", "pin-t", "pin-l", "bg-white", "text-center" ]);
  var renderSelect = function (visibility) {
      return function (timeUnits) {
          var renderTimes = Ocelot_Block_Layout.popover(Select_Setters.setContainerProps([ Halogen_HTML_Properties.classes(dropdownClasses) ]))(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(renderItem)(timeUnits));
          return Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("relative") ])((function () {
              var $119 = Data_Eq.eq(Select.eqVisibility)(visibility)(Select.On.value);
              if ($119) {
                  return [ renderTimes ];
              };
              return [  ];
          })());
      };
  };
  var embeddedRender = function (s) {
      if (s.disabled) {
          return Ocelot_Block_Input.input([ Halogen_HTML_Properties.disabled(true), Halogen_HTML_Properties.value(s.search) ]);
      };
      return Halogen_HTML_Elements.div_([ renderSearch(s.search), renderSelect(s.visibility)(s.timeUnits) ]);
  };
  var spec = function (dictMonadAff) {
      return {
          render: embeddedRender,
          handleAction: embeddedHandleAction(dictMonadAff),
          handleQuery: embeddedHandleQuery,
          handleEvent: embeddedHandleMessage,
          receive: Select.defaultSpec.receive,
          initialize: new Data_Maybe.Just(Initialize.value),
          finalize: Select.defaultSpec.finalize
      };
  };
  var _select = Data_Symbol.SProxy.value;
  var handleQuery = function (v) {
      if (v instanceof GetSelection) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
              return "select";
          }))(Data_Ord.ordUnit)(_select)(Data_Unit.unit)(Select.Query.create(Halogen_Query.request(GetSelection.create))))(function (response) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Functor.map(Data_Maybe.functorMaybe)(v.value0)(response));
          });
      };
      if (v instanceof SetSelection) {
          return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
              return "select";
          }))(Data_Ord.ordUnit)(_select)(Data_Unit.unit)(Select.Query.create(Halogen_Query.tell(SetSelection.create(v.value0)))));
      };
      throw new Error("Failed pattern match at Ocelot.Components.TimePicker.Component (line 145, column 15 - line 151, column 69): " + [ v.constructor.name ]);
  };
  var render = function (dictMonadAff) {
      return function (st) {
          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "select";
          }))(Data_Ord.ordUnit)(_select)(Data_Unit.unit)(Select.component(dictMonadAff)()()()(Control_Category.identity(Control_Category.categoryFn))(spec(dictMonadAff)))(embeddedInput(st))(function ($127) {
              return Data_Maybe.Just.create(PassingOutput.create($127));
          });
      };
  };
  var component = function (dictMonadAff) {
      return Halogen_Component.mkComponent({
          initialState: initialState,
          render: render(dictMonadAff),
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction,
              handleQuery: handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["SetSelection"] = SetSelection;
  exports["SelectionChanged"] = SelectionChanged;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Components.DateTimePicker.Component"] = $PS["Ocelot.Components.DateTimePicker.Component"] || {};
  var exports = $PS["Ocelot.Components.DateTimePicker.Component"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_DateTime = $PS["Data.DateTime"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Ocelot_Components_DatePicker_Component = $PS["Ocelot.Components.DatePicker.Component"];
  var Ocelot_Components_TimePicker_Component = $PS["Ocelot.Components.TimePicker.Component"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];                
  var GetSelection = (function () {
      function GetSelection(value0) {
          this.value0 = value0;
      };
      GetSelection.create = function (value0) {
          return new GetSelection(value0);
      };
      return GetSelection;
  })();
  var SetSelection = (function () {
      function SetSelection(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetSelection.create = function (value0) {
          return function (value1) {
              return new SetSelection(value0, value1);
          };
      };
      return SetSelection;
  })();
  var SendDateQuery = (function () {
      function SendDateQuery(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SendDateQuery.create = function (value0) {
          return function (value1) {
              return new SendDateQuery(value0, value1);
          };
      };
      return SendDateQuery;
  })();
  var SendTimeQuery = (function () {
      function SendTimeQuery(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SendTimeQuery.create = function (value0) {
          return function (value1) {
              return new SendTimeQuery(value0, value1);
          };
      };
      return SendTimeQuery;
  })();
  var SelectionChanged = (function () {
      function SelectionChanged(value0) {
          this.value0 = value0;
      };
      SelectionChanged.create = function (value0) {
          return new SelectionChanged(value0);
      };
      return SelectionChanged;
  })();
  var DateOutput = (function () {
      function DateOutput(value0) {
          this.value0 = value0;
      };
      DateOutput.create = function (value0) {
          return new DateOutput(value0);
      };
      return DateOutput;
  })();
  var TimeOutput = (function () {
      function TimeOutput(value0) {
          this.value0 = value0;
      };
      TimeOutput.create = function (value0) {
          return new TimeOutput(value0);
      };
      return TimeOutput;
  })();
  var HandleDate = (function () {
      function HandleDate(value0) {
          this.value0 = value0;
      };
      HandleDate.create = function (value0) {
          return new HandleDate(value0);
      };
      return HandleDate;
  })();
  var HandleTime = (function () {
      function HandleTime(value0) {
          this.value0 = value0;
      };
      HandleTime.create = function (value0) {
          return new HandleTime(value0);
      };
      return HandleTime;
  })();
  var initialState = function (v) {
      return {
          date: Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime.date)(v.selection),
          time: Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime.time)(v.selection),
          targetDate: v.targetDate,
          disabled: v.disabled
      };
  };
  var handleAction = function (v) {
      if (v instanceof HandleDate) {
          if (v.value0 instanceof Ocelot_Components_DatePicker_Component.SelectionChanged) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  return v1.time;
              }))(function (time$prime) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new SelectionChanged(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime.DateTime.create)(v.value0.value0))(time$prime))))(function () {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $19 = {};
                          for (var $20 in v1) {
                              if ({}.hasOwnProperty.call(v1, $20)) {
                                  $19[$20] = v1[$20];
                              };
                          };
                          $19.date = v.value0.value0;
                          return $19;
                      });
                  });
              });
          };
          return Halogen_Query_HalogenM.raise(new DateOutput(v.value0));
      };
      if (v instanceof HandleTime) {
          if (v.value0 instanceof Ocelot_Components_TimePicker_Component.SelectionChanged) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  return v1.date;
              }))(function (date$prime) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new SelectionChanged(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime.DateTime.create)(date$prime))(v.value0.value0))))(function () {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $25 = {};
                          for (var $26 in v1) {
                              if ({}.hasOwnProperty.call(v1, $26)) {
                                  $25[$26] = v1[$26];
                              };
                          };
                          $25.time = v.value0.value0;
                          return $25;
                      });
                  });
              });
          };
          return Halogen_Query_HalogenM.raise(new TimeOutput(v.value0));
      };
      throw new Error("Failed pattern match at Ocelot.Components.DateTimePicker.Component (line 106, column 16 - line 121, column 34): " + [ v.constructor.name ]);
  };
  var _timepicker = Data_Symbol.SProxy.value;
  var _datepicker = Data_Symbol.SProxy.value;
  var handleQuery = function (v) {
      if (v instanceof GetSelection) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Functor.map(Data_Maybe.functorMaybe)(v.value0)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime.DateTime.create)(v1.date))(v1.time)));
          });
      };
      if (v instanceof SetSelection) {
          return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))((function () {
              var time$prime = Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime.time)(v.value0);
              var date$prime = Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime.date)(v.value0);
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                  return "datepicker";
              }))(Data_Ord.ordUnit)(_datepicker)(Data_Unit.unit)(Halogen_Query.tell(Ocelot_Components_DatePicker_Component.SetSelection.create(date$prime)))))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                      return "timepicker";
                  }))(Data_Ord.ordUnit)(_timepicker)(Data_Unit.unit)(Halogen_Query.tell(Ocelot_Components_TimePicker_Component.SetSelection.create(time$prime)))))(function () {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $35 = {};
                          for (var $36 in v1) {
                              if ({}.hasOwnProperty.call(v1, $36)) {
                                  $35[$36] = v1[$36];
                              };
                          };
                          $35.date = date$prime;
                          $35.time = time$prime;
                          return $35;
                      });
                  });
              });
          })());
      };
      if (v instanceof SendDateQuery) {
          return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
              return "datepicker";
          }))(Data_Ord.ordUnit)(_datepicker)(Data_Unit.unit)(v.value0));
      };
      if (v instanceof SendTimeQuery) {
          return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
              return "timepicker";
          }))(Data_Ord.ordUnit)(_timepicker)(Data_Unit.unit)(v.value0));
      };
      throw new Error("Failed pattern match at Ocelot.Components.DateTimePicker.Component (line 124, column 15 - line 138, column 60): " + [ v.constructor.name ]);
  };
  var render = function (dictMonadAff) {
      return function (v) {
          return Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex") ])([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("w-1/2 mr-2") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "datepicker";
          }))(Data_Ord.ordUnit)(_datepicker)(Data_Unit.unit)(Ocelot_Components_DatePicker_Component.component(dictMonadAff))({
              targetDate: v.targetDate,
              selection: v.date,
              disabled: v.disabled
          })(function ($49) {
              return Data_Maybe.Just.create(HandleDate.create($49));
          }) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "timepicker";
          }))(Data_Ord.ordUnit)(_timepicker)(Data_Unit.unit)(Ocelot_Components_TimePicker_Component.component(dictMonadAff))({
              selection: v.time,
              disabled: v.disabled
          })(function ($50) {
              return Data_Maybe.Just.create(HandleTime.create($50));
          }) ]) ]);
      };
  };
  var component = function (dictMonadAff) {
      return Halogen_Component.mkComponent({
          initialState: initialState,
          render: render(dictMonadAff),
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction,
              handleQuery: handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.Component.DatePickers"] = $PS["UIGuide.Component.DatePickers"] || {};
  var exports = $PS["UIGuide.Component.DatePickers"];
  var Data_DateTime = $PS["Data.DateTime"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Ocelot_Block_Card = $PS["Ocelot.Block.Card"];
  var Ocelot_Block_FormField = $PS["Ocelot.Block.FormField"];
  var Ocelot_Block_Format = $PS["Ocelot.Block.Format"];
  var Ocelot_Components_DatePicker_Component = $PS["Ocelot.Components.DatePicker.Component"];
  var Ocelot_Components_DateTimePicker_Component = $PS["Ocelot.Components.DateTimePicker.Component"];
  var Ocelot_Components_TimePicker_Component = $PS["Ocelot.Components.TimePicker.Component"];
  var Ocelot_Data_DateTime = $PS["Ocelot.Data.DateTime"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var UIGuide_Block_Backdrop = $PS["UIGuide.Block.Backdrop"];
  var UIGuide_Block_Documentation = $PS["UIGuide.Block.Documentation"];                
  var content = UIGuide_Block_Backdrop.content([ Ocelot_HTML_Properties.css("flex") ]);
  var _timePicker = Data_Symbol.SProxy.value;
  var _dtp = Data_Symbol.SProxy.value;
  var _datePicker = Data_Symbol.SProxy.value;
  var cnDocumentationBlocks = function (dictMonadAff) {
      return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.block_({
          header: "Date Pickers",
          subheader: "It's a date picker. Deal with it."
      })([ UIGuide_Block_Backdrop.backdrop_([ content([ Ocelot_Block_Card.card([ Ocelot_HTML_Properties.css("flex-1") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Standard") ]), Ocelot_Block_FormField.fieldMid_({
          label: Halogen_HTML_Core.text("Start"),
          helpText: [ Halogen_HTML_Core.text("Choose a start date.") ],
          error: [  ],
          inputId: "start-date"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "datePicker";
      }))(Data_Ord.ordInt)(_datePicker)(0)(Ocelot_Components_DatePicker_Component.component(dictMonadAff))({
          targetDate: Data_Maybe.Nothing.value,
          selection: Data_Maybe.Nothing.value,
          disabled: false
      })(Data_Function["const"](new Data_Maybe.Just(Data_Unit.unit))) ]), Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Standard Disabled") ]), Ocelot_Block_FormField.fieldMid_({
          label: Halogen_HTML_Core.text("Start"),
          helpText: [ Halogen_HTML_Core.text("Choose a start date.") ],
          error: [  ],
          inputId: "start-date-disabled"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "datePicker";
      }))(Data_Ord.ordInt)(_datePicker)(2)(Ocelot_Components_DatePicker_Component.component(dictMonadAff))({
          targetDate: Data_Maybe.Nothing.value,
          selection: Data_Maybe.Nothing.value,
          disabled: true
      })(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]), content([ Ocelot_Block_Card.card([ Ocelot_HTML_Properties.css("flex-1") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Hydrated") ]), Ocelot_Block_FormField.fieldMid_({
          label: Halogen_HTML_Core.text("End"),
          helpText: [ Halogen_HTML_Core.text("Choose an end date.") ],
          error: [  ],
          inputId: "end-date"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "datePicker";
      }))(Data_Ord.ordInt)(_datePicker)(1)(Ocelot_Components_DatePicker_Component.component(dictMonadAff))({
          targetDate: Data_Maybe.Nothing.value,
          selection: Data_Maybe.Just.create(Ocelot_Data_DateTime.unsafeMkDate(2019)(1)(1)),
          disabled: false
      })(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Hydrated Disabled") ]), Ocelot_Block_FormField.fieldMid_({
          label: Halogen_HTML_Core.text("End"),
          helpText: [ Halogen_HTML_Core.text("Choose an end date.") ],
          error: [  ],
          inputId: "end-date-disabled"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "datePicker";
      }))(Data_Ord.ordInt)(_datePicker)(3)(Ocelot_Components_DatePicker_Component.component(dictMonadAff))({
          targetDate: Data_Maybe.Nothing.value,
          selection: Data_Maybe.Just.create(Ocelot_Data_DateTime.unsafeMkDate(2019)(1)(1)),
          disabled: true
      })(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]) ]) ]), UIGuide_Block_Documentation.block_({
          header: "Time Pickers",
          subheader: "It's a time picker. Deal with it."
      })([ UIGuide_Block_Backdrop.backdrop_([ content([ Ocelot_Block_Card.card([ Ocelot_HTML_Properties.css("flex-1") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Standard") ]), Ocelot_Block_FormField.fieldMid_({
          label: Halogen_HTML_Core.text("Start"),
          helpText: [ Halogen_HTML_Core.text("Choose a start time.") ],
          error: [  ],
          inputId: "start-time"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "timePicker";
      }))(Data_Ord.ordInt)(_timePicker)(0)(Ocelot_Components_TimePicker_Component.component(dictMonadAff))({
          selection: Data_Maybe.Nothing.value,
          disabled: false
      })(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Standard Disabled") ]), Ocelot_Block_FormField.fieldMid_({
          label: Halogen_HTML_Core.text("Start"),
          helpText: [ Halogen_HTML_Core.text("Choose a start time.") ],
          error: [  ],
          inputId: "start-time-disabled"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "timePicker";
      }))(Data_Ord.ordInt)(_timePicker)(2)(Ocelot_Components_TimePicker_Component.component(dictMonadAff))({
          selection: Data_Maybe.Nothing.value,
          disabled: true
      })(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]), content([ Ocelot_Block_Card.card([ Ocelot_HTML_Properties.css("flex-1") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Hydrated") ]), Ocelot_Block_FormField.fieldMid_({
          label: Halogen_HTML_Core.text("End"),
          helpText: [ Halogen_HTML_Core.text("Choose an end time.") ],
          error: [  ],
          inputId: "end-time"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "timePicker";
      }))(Data_Ord.ordInt)(_timePicker)(1)(Ocelot_Components_TimePicker_Component.component(dictMonadAff))({
          selection: Data_Maybe.Just.create(Ocelot_Data_DateTime.unsafeMkTime(12)(0)(0)(0)),
          disabled: false
      })(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Hydrated Disabled") ]), Ocelot_Block_FormField.fieldMid_({
          label: Halogen_HTML_Core.text("End"),
          helpText: [ Halogen_HTML_Core.text("Choose an end time.") ],
          error: [  ],
          inputId: "end-time-disabled"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "timePicker";
      }))(Data_Ord.ordInt)(_timePicker)(3)(Ocelot_Components_TimePicker_Component.component(dictMonadAff))({
          selection: Data_Maybe.Just.create(Ocelot_Data_DateTime.unsafeMkTime(12)(0)(0)(0)),
          disabled: true
      })(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]) ]) ]), UIGuide_Block_Documentation.block_({
          header: "DateTime Pickers",
          subheader: "We've combined them. Deal with it."
      })([ UIGuide_Block_Backdrop.backdrop_([ content([ Ocelot_Block_Card.card([ Ocelot_HTML_Properties.css("flex-1") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Standard") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Start"),
          helpText: [ Halogen_HTML_Core.text("Choose a start date and time.") ],
          error: [  ],
          inputId: "start"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "dtp";
      }))(Data_Ord.ordInt)(_dtp)(0)(Ocelot_Components_DateTimePicker_Component.component(dictMonadAff))({
          targetDate: Data_Maybe.Nothing.value,
          selection: Data_Maybe.Nothing.value,
          disabled: false
      })(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Standard Disabled") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Start"),
          helpText: [ Halogen_HTML_Core.text("Choose a start date and time.") ],
          error: [  ],
          inputId: "start-disabled"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "dtp";
      }))(Data_Ord.ordInt)(_dtp)(2)(Ocelot_Components_DateTimePicker_Component.component(dictMonadAff))({
          targetDate: Data_Maybe.Nothing.value,
          selection: Data_Maybe.Nothing.value,
          disabled: true
      })(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]), content([ Ocelot_Block_Card.card([ Ocelot_HTML_Properties.css("flex-1") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Hydrated") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("End"),
          helpText: [ Halogen_HTML_Core.text("Choose an end date and time.") ],
          error: [  ],
          inputId: "end"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "dtp";
      }))(Data_Ord.ordInt)(_dtp)(1)(Ocelot_Components_DateTimePicker_Component.component(dictMonadAff))({
          targetDate: Data_Maybe.Nothing.value,
          selection: Data_Maybe.Just.create(new Data_DateTime.DateTime(Ocelot_Data_DateTime.unsafeMkDate(2019)(1)(1), Ocelot_Data_DateTime.unsafeMkTime(0)(0)(0)(0))),
          disabled: false
      })(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Hydrated Disabled") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("End"),
          helpText: [ Halogen_HTML_Core.text("Choose an end date and time.") ],
          error: [  ],
          inputId: "end-disabled"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "dtp";
      }))(Data_Ord.ordInt)(_dtp)(3)(Ocelot_Components_DateTimePicker_Component.component(dictMonadAff))({
          targetDate: Data_Maybe.Nothing.value,
          selection: Data_Maybe.Just.create(new Data_DateTime.DateTime(Ocelot_Data_DateTime.unsafeMkDate(2019)(1)(1), Ocelot_Data_DateTime.unsafeMkTime(0)(0)(0)(0))),
          disabled: true
      })(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]) ]) ]) ]);
  };
  var component = function (dictMonadAff) {
      var render = function (v) {
          return cnDocumentationBlocks(dictMonadAff);
      };
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": Halogen_Component.mkEval(Halogen_Component.defaultEval)
      });
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Toast"] = $PS["Ocelot.Block.Toast"] || {};
  var exports = $PS["Ocelot.Block.Toast"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];                
  var visible = Halogen_HTML_Properties.prop(Halogen_HTML_Core.isPropBoolean)("visible");
  var toastContainerClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "transition-1/4-in", "transition-1/2-out", "items-center", "fixed", "pin-l", "pin-r", "pin-b" ]);
  var toastClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "shadow-md", "p-4", "ml-auto", "mr-auto", "items-center", "border", "border-grey-80", "bg-white", "rounded", "flex" ]);
  var pullVisibleProp = (function () {
      var f = function (v) {
          if (v instanceof Halogen_VDom_DOM_Prop.Property && v.value0 === "visible") {
              return Data_Bifunctor.lmap(Data_Tuple.bifunctorTuple)(Data_Function["const"](v.value1));
          };
          return Data_Bifunctor.rmap(Data_Tuple.bifunctorTuple)(Data_Function.flip(Data_Array.snoc)(v));
      };
      return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(new Data_Tuple.Tuple(false, [  ]));
  })();
  var containerVisibleClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "mb-8" ]);
  var containerClosedClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "-mb-40" ]);
  var toast = function (iprops) {
      return function (html) {
          var v = pullVisibleProp(iprops);
          var containerClasses$prime = (function () {
              if (v.value0) {
                  return containerVisibleClasses;
              };
              return containerClosedClasses;
          })();
          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(toastContainerClasses)(containerClasses$prime)) ])([ Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(toastClasses) ])(v.value1))(html) ]);
      };
  };
  exports["visible"] = visible;
  exports["toast"] = toast;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Tooltip"] = $PS["Ocelot.Block.Tooltip"] || {};
  var exports = $PS["Ocelot.Block.Tooltip"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];                
  var classesArr = [ "absolute", "invisible", "group-hover:visible", "text-white", "bg-grey-50", "px-2", "rounded", "z-60" ];
  var tooltipClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(classesArr)([ "-my-8" ]));
  var tooltip = function (msg) {
      return function (props) {
          return function (html) {
              return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Ocelot_HTML_Properties.css("group cursor-pointer inline-block") ])(props))([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(tooltipClasses) ])([ Halogen_HTML_Core.text(msg) ]), html ]);
          };
      };
  };
  var tooltip_ = Data_Function.flip(tooltip)([  ]);
  exports["tooltip_"] = tooltip_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.Component.Dialogs"] = $PS["UIGuide.Component.Dialogs"] || {};
  var exports = $PS["UIGuide.Component.Dialogs"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Ocelot_Block_Button = $PS["Ocelot.Block.Button"];
  var Ocelot_Block_Card = $PS["Ocelot.Block.Card"];
  var Ocelot_Block_FormField = $PS["Ocelot.Block.FormField"];
  var Ocelot_Block_Format = $PS["Ocelot.Block.Format"];
  var Ocelot_Block_Icon = $PS["Ocelot.Block.Icon"];
  var Ocelot_Block_Input = $PS["Ocelot.Block.Input"];
  var Ocelot_Block_Toast = $PS["Ocelot.Block.Toast"];
  var Ocelot_Block_Tooltip = $PS["Ocelot.Block.Tooltip"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var UIGuide_Block_Backdrop = $PS["UIGuide.Block.Backdrop"];
  var UIGuide_Block_Documentation = $PS["UIGuide.Block.Documentation"];                
  var Success = (function () {
      function Success() {

      };
      Success.value = new Success();
      return Success;
  })();
  var $$Error = (function () {
      function $$Error() {

      };
      $$Error.value = new $$Error();
      return $$Error;
  })();
  var Toggle = (function () {
      function Toggle(value0) {
          this.value0 = value0;
      };
      Toggle.create = function (value0) {
          return new Toggle(value0);
      };
      return Toggle;
  })();  
  var eqToastType = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Success && y instanceof Success) {
              return true;
          };
          if (x instanceof $$Error && y instanceof $$Error) {
              return true;
          };
          return false;
      };
  });
  var component = function (dictMonadAff) {
      var render = function (state) {
          return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.block_({
              header: "Tooltips",
              subheader: "Point out and explain UI"
          })([ UIGuide_Block_Backdrop.backdrop_([ UIGuide_Block_Backdrop.content([ Ocelot_HTML_Properties.css("mt-0") ])([ Ocelot_Block_Card.card([ Ocelot_HTML_Properties.css("w-1/2 m-auto") ])([ Ocelot_Block_FormField.field({
              helpText: [ Halogen_HTML_Core.text("The function of this field is not clear.") ],
              label: Halogen_HTML_Elements.div_([ Halogen_HTML_Core.text("Account Id"), Ocelot_Block_Tooltip.tooltip_("This tooltip can explain more about what Account Id does")(Ocelot_Block_Icon.info([ Ocelot_HTML_Properties.css("ml-2") ])) ]),
              error: [  ],
              inputId: "tooltip-input"
          })([ Ocelot_HTML_Properties.css("mb-6 pt-3") ])([ Ocelot_Block_Input.input([  ]) ]) ]) ]) ]) ]), UIGuide_Block_Documentation.block_({
              header: "Toasts",
              subheader: "Less prominent dialogs that pop up from the bottom and then fall away. Usually indicate a status change. May contain actions."
          })([ UIGuide_Block_Backdrop.backdrop_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Success") ]), Ocelot_Block_Button.button([ Halogen_HTML_Events.onClick(Data_Function["const"](Data_Maybe.Just.create(new Toggle(Success.value)))) ])([ Halogen_HTML_Core.text("Success") ]), Ocelot_Block_Toast.toast([ Ocelot_Block_Toast.visible(Data_Eq.eq(Data_Maybe.eqMaybe(eqToastType))(state.toast)(new Data_Maybe.Just(Success.value))) ])([ Ocelot_Block_Icon.success([ Ocelot_HTML_Properties.css("text-green text-2xl mr-2") ]), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Campaign saved.") ]) ]) ]) ]) ]), UIGuide_Block_Backdrop.backdrop_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Error") ]), Ocelot_Block_Button.button([ Halogen_HTML_Events.onClick(Data_Function["const"](Data_Maybe.Just.create(new Toggle($$Error.value)))) ])([ Halogen_HTML_Core.text("Error") ]), Ocelot_Block_Toast.toast([ Ocelot_Block_Toast.visible(Data_Eq.eq(Data_Maybe.eqMaybe(eqToastType))(state.toast)(new Data_Maybe.Just($$Error.value))) ])([ Ocelot_Block_Icon.error([ Ocelot_HTML_Properties.css("text-red text-2xl mr-2") ]), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Fix errors before saving.") ]) ]) ]) ]) ]), UIGuide_Block_Backdrop.backdrop_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Info") ]) ]) ]) ]) ]) ]);
      };
      var handleAction = function (v) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
              var $15 = {};
              for (var $16 in v1) {
                  if ({}.hasOwnProperty.call(v1, $16)) {
                      $15[$16] = v1[$16];
                  };
              };
              $15.toast = new Data_Maybe.Just(v.value0);
              return $15;
          }))(function (st) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff.delay(3000.0)))(function () {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $18 = {};
                      for (var $19 in v1) {
                          if ({}.hasOwnProperty.call(v1, $19)) {
                              $18[$19] = v1[$19];
                          };
                      };
                      $18.toast = Data_Maybe.Nothing.value;
                      return $18;
                  });
              });
          });
      };
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"]({
              toast: Data_Maybe.Nothing.value
          }),
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction,
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Choice"] = $PS["Ocelot.Block.Choice"] || {};
  var exports = $PS["Ocelot.Block.Choice"];
  var Data_Functor = $PS["Data.Functor"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];                
  var optionClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-white", "flex", "flex-col", "items-center", "h-30", "justify-center", "w-40", "cursor-pointer" ]);
  var option = function (iprops) {
      return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(optionClasses) ])(iprops));
  };                         
  var highlightedOptionClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-grey-97" ]);
  var headerClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "h-10", "justify-center", "items-center", "border-b", "border-grey-90" ]);
  var header = function (iprops) {
      return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(headerClasses) ])(iprops));
  };
  var header_ = header([  ]);
  var choiceClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "absolute", "bg-white", "rounded-lg", "border", "border-grey-90", "shadow", "overflow-hidden" ]);
  var choice = function (iprops) {
      return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(choiceClasses) ])(iprops));
  };                         
  var bodyClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex" ]);
  var body = function (iprops) {
      return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(bodyClasses) ])(iprops));
  };
  var body_ = body([  ]);
  exports["choice"] = choice;
  exports["header_"] = header_;
  exports["body_"] = body_;
  exports["option"] = option;
  exports["highlightedOptionClasses"] = highlightedOptionClasses;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Renderless.State"] = $PS["Renderless.State"] || {};
  var exports = $PS["Renderless.State"];
  var Control_Comonad_Store = $PS["Control.Comonad.Store"];
  var Control_Comonad_Store_Class = $PS["Control.Comonad.Store.Class"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var updateStore = function (r) {
      return function (f) {
          var $8 = Control_Comonad_Store.store(r);
          var $9 = Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(f);
          return function ($10) {
              return $8(Data_Tuple.snd(Control_Comonad_Store.runStore($9($10))));
          };
      };
  };
  var modifyStore_ = function (dictMonadState) {
      return function (r) {
          return function (f) {
              return Control_Monad_State_Class.modify_(dictMonadState)(updateStore(r)(f));
          };
      };
  };
  exports["modifyStore_"] = modifyStore_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Components.Dropdown.Component"] = $PS["Ocelot.Components.Dropdown.Component"] || {};
  var exports = $PS["Ocelot.Components.Dropdown.Component"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Comonad = $PS["Control.Comonad"];
  var Control_Comonad_Store = $PS["Control.Comonad.Store"];
  var Control_Comonad_Store_Trans = $PS["Control.Comonad.Store.Trans"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Renderless_State = $PS["Renderless.State"];
  var Select = $PS["Select"];                
  var SetItems = (function () {
      function SetItems(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetItems.create = function (value0) {
          return function (value1) {
              return new SetItems(value0, value1);
          };
      };
      return SetItems;
  })();
  var SetSelection = (function () {
      function SetSelection(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetSelection.create = function (value0) {
          return function (value1) {
              return new SetSelection(value0, value1);
          };
      };
      return SetSelection;
  })();
  var Selected = (function () {
      function Selected(value0) {
          this.value0 = value0;
      };
      Selected.create = function (value0) {
          return new Selected(value0);
      };
      return Selected;
  })();
  var VisibilityChanged = (function () {
      function VisibilityChanged(value0) {
          this.value0 = value0;
      };
      VisibilityChanged.create = function (value0) {
          return new VisibilityChanged(value0);
      };
      return VisibilityChanged;
  })();
  var PassingOutput = (function () {
      function PassingOutput(value0) {
          this.value0 = value0;
      };
      PassingOutput.create = function (value0) {
          return new PassingOutput(value0);
      };
      return PassingOutput;
  })();
  var ReceiveRender = (function () {
      function ReceiveRender(value0) {
          this.value0 = value0;
      };
      ReceiveRender.create = function (value0) {
          return new ReceiveRender(value0);
      };
      return ReceiveRender;
  })();
  var embeddedInput = function (v) {
      return {
          inputType: Select.Toggle.value,
          search: Data_Maybe.Nothing.value,
          debounceTime: Data_Maybe.Nothing.value,
          getItemCount: function ($58) {
              return Data_Array.length((function (v1) {
                  return v1.items;
              })($58));
          },
          selectedItem: v.selectedItem,
          items: v.items
      };
  };
  var embeddedHandleQuery = function (dictMonadAff) {
      return function (v) {
          if (v instanceof SetItems) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  var $25 = {};
                  for (var $26 in v1) {
                      if ({}.hasOwnProperty.call(v1, $26)) {
                          $25[$26] = v1[$26];
                      };
                  };
                  $25.items = v.value0;
                  return $25;
              }));
          };
          if (v instanceof SetSelection) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  var $30 = {};
                  for (var $31 in v1) {
                      if ({}.hasOwnProperty.call(v1, $31)) {
                          $30[$31] = v1[$31];
                      };
                  };
                  $30.selectedItem = v.value0;
                  return $30;
              }));
          };
          throw new Error("Failed pattern match at Ocelot.Components.Dropdown.Component (line 152, column 23 - line 157, column 40): " + [ v.constructor.name ]);
      };
  };
  var embeddedHandleMessage = function (dictMonadAff) {
      return function (v) {
          if (v instanceof Select.Selected) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  var v2 = Data_Array.index(v1.items)(v.value0);
                  if (v2 instanceof Data_Maybe.Nothing) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v2 instanceof Data_Maybe.Just) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                          var $38 = {};
                          for (var $39 in v3) {
                              if ({}.hasOwnProperty.call(v3, $39)) {
                                  $38[$39] = v3[$39];
                              };
                          };
                          $38.visibility = Select.Off.value;
                          $38.selectedItem = new Data_Maybe.Just(v2.value0);
                          return $38;
                      }))(function () {
                          return Halogen_Query_HalogenM.raise(new Selected(v2.value0));
                      });
                  };
                  throw new Error("Failed pattern match at Ocelot.Components.Dropdown.Component (line 167, column 5 - line 174, column 32): " + [ v2.constructor.name ]);
              });
          };
          if (v instanceof Select.VisibilityChanged) {
              return Halogen_Query_HalogenM.raise(new VisibilityChanged(v.value0));
          };
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
      };
  };
  var spec = function (dictMonadAff) {
      return function (embeddedRender) {
          return {
              render: embeddedRender,
              handleAction: Select.defaultSpec.handleAction,
              handleQuery: embeddedHandleQuery(dictMonadAff),
              handleEvent: embeddedHandleMessage(dictMonadAff),
              receive: Select.defaultSpec.receive,
              initialize: Select.defaultSpec.initialize,
              finalize: Select.defaultSpec.finalize
          };
      };
  };
  var _select = Data_Symbol.SProxy.value;
  var handleQuery = function (v) {
      if (v instanceof SetItems) {
          return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
              return "select";
          }))(Data_Ord.ordUnit)(_select)(Data_Unit.unit)(Select.Query.create(Halogen_Query.tell(SetItems.create(v.value0)))));
      };
      if (v instanceof SetSelection) {
          return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
              return "select";
          }))(Data_Ord.ordUnit)(_select)(Data_Unit.unit)(Select.Query.create(Halogen_Query.tell(SetSelection.create(v.value0)))));
      };
      throw new Error("Failed pattern match at Ocelot.Components.Dropdown.Component (line 140, column 15 - line 145, column 64): " + [ v.constructor.name ]);
  };
  var renderAdapter = function (dictMonadAff) {
      return function (render) {
          return function (state) {
              return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "select";
              }))(Data_Ord.ordUnit)(_select)(Data_Unit.unit)(Select.component(dictMonadAff)()()()(Control_Category.identity(Control_Category.categoryFn))(spec(dictMonadAff)(render)))(embeddedInput(state))(function ($59) {
                  return Data_Maybe.Just.create(PassingOutput.create($59));
              });
          };
      };
  };
  var handleAction = function (dictMonadAff) {
      return function (v) {
          if (v instanceof PassingOutput) {
              return Halogen_Query_HalogenM.raise(v.value0);
          };
          if (v instanceof ReceiveRender) {
              return Renderless_State.modifyStore_(Halogen_Query_HalogenM.monadStateHalogenM)(renderAdapter(dictMonadAff)(v.value0.render))(Control_Category.identity(Control_Category.categoryFn));
          };
          throw new Error("Failed pattern match at Ocelot.Components.Dropdown.Component (line 131, column 16 - line 136, column 49): " + [ v.constructor.name ]);
      };
  };
  var initialState = function (dictMonadAff) {
      return function (v) {
          return Control_Comonad_Store.store(renderAdapter(dictMonadAff)(v.render))({
              selectedItem: v.selectedItem,
              items: v.items
          });
      };
  };
  var component = function (dictMonadAff) {
      return Halogen_Component.mkComponent({
          initialState: initialState(dictMonadAff),
          render: Control_Comonad.extract(Control_Comonad_Store_Trans.comonadStoreT(Data_Identity.comonadIdentity)),
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction(dictMonadAff),
              handleQuery: handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["Selected"] = Selected;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.ItemContainer"] = $PS["Ocelot.Block.ItemContainer"] || {};
  var exports = $PS["Ocelot.Block.ItemContainer"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_FunctorWithIndex = $PS["Data.FunctorWithIndex"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_Block_Icon = $PS["Ocelot.Block.Icon"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var Select_Setters = $PS["Select.Setters"];                
  var ulClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "list-reset" ]);
  var selectionGroupClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "items-start", "justify-between" ]);
  var menuClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-white", "text-black-20", "border", "list-reset", "rounded", "shadow", "absolute", "z-60", "min-w-50" ]);
  var liClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "px-4", "py-2", "rounded-sm", "text-black-20", "group", "hover:bg-grey-97", "cursor-pointer" ]);               
  var dropdownItem = function (elem) {
      return function (props) {
          return function (html) {
              return function (selected) {
                  return function (highlighted) {
                      var itemClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(liClasses)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ "flex" ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)((function () {
                          if (highlighted) {
                              return [ "bg-grey-lighter" ];
                          };
                          return [  ];
                      })())((function () {
                          if (selected) {
                              return [ "font-medium" ];
                          };
                          return [  ];
                      })())));
                      var checkmarkClass = Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "mr-2", "text-green" ]))((function () {
                          if (selected) {
                              return [  ];
                          };
                          return [ "invisible" ];
                      })());
                      return elem(Ocelot_HTML_Properties.appendIProps(props)([ Halogen_HTML_Properties.classes(itemClasses) ]))(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Ocelot_Block_Icon.selected([ Halogen_HTML_Properties.classes(checkmarkClass) ]) ])(html));
                  };
              };
          };
      };
  };
  var dropdownClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(menuClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "absolute", "pin-t-full", "pin-l", "max-h-160", "overflow-y-auto" ]));
  var dropdownContainer = function (addlHTML) {
      return function (renderItem) {
          return function (selected) {
              return function (items) {
                  return function (hix) {
                      var renderItem$prime = function (idx) {
                          return function (item) {
                              return dropdownItem(Halogen_HTML_Elements.li)(Select_Setters.setItemProps(idx)([  ]))([ Halogen_HTML.fromPlainHTML(renderItem(item)) ])(selected(item))(Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(hix)(new Data_Maybe.Just(idx)));
                          };
                      };
                      var renderItems = [ Halogen_HTML_Elements.ul([ Halogen_HTML_Properties.classes(ulClasses) ])(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(renderItem$prime)(items)) ];
                      return Halogen_HTML_Elements.div(Select_Setters.setContainerProps([ Halogen_HTML_Properties.classes(dropdownClasses) ]))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(addlHTML)(renderItems));
                  };
              };
          };
      };
  };
  var dropdownButton = function (button) {
      return function (iprops) {
          return function (html) {
              return button(Ocelot_HTML_Properties.appendIProps([ Ocelot_HTML_Properties.css("font-medium flex items-center") ])(iprops))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(html)([ Ocelot_Block_Icon.caratDown([ Ocelot_HTML_Properties.css("ml-3 text-xs") ]) ]));
          };
      };
  };
  var buttonClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "invisible", "text-grey-80", "hover:text-grey-70", "group-hover:visible" ]);
  var selectionGroup = function (f) {
      return function (divprops) {
          return function (btnprops) {
              return function (item) {
                  return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(selectionGroupClasses) ])(divprops))([ Halogen_HTML.fromPlainHTML(f(item)), Halogen_HTML_Elements.button(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(buttonClasses) ])(btnprops))([ Halogen_HTML_Core.text("\u2715") ]) ]);
              };
          };
      };
  };
  var boldMatches = function (key) {
      return function (v) {
          var boldMatch = function (v1) {
              if (v1 instanceof Data_Either.Left) {
                  return Halogen_HTML_Core.text(v1.value0);
              };
              if (v1 instanceof Data_Either.Right) {
                  return Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_("font-bold") ])([ Halogen_HTML_Core.text(v1.value0) ]);
              };
              throw new Error("Failed pattern match at Ocelot.Block.ItemContainer (line 249, column 5 - line 249, column 39): " + [ v1.constructor.name ]);
          };
          return Data_Functor.map(Data_Functor.functorArray)(boldMatch)(Data_Maybe.fromMaybe([ new Data_Either.Left(key) ])(Foreign_Object.lookup(key)(v.segments)));
      };
  };
  var baseClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-white", "border-grey-80", "border-l-2", "border-r-2", "w-full" ]);
  var itemContainerClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(baseClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "absolute", "shadow", "max-h-120", "overflow-y-auto", "z-50", "border-b-2", "pin-t-full", "pin-l" ]));
  var itemContainer = function (highlightIndex) {
      return function (itemsHTML) {
          return function (addlHTML) {
              var hover = function (i) {
                  var $12 = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(highlightIndex)(new Data_Maybe.Just(i));
                  if ($12) {
                      return Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-grey-lighter" ]);
                  };
                  return Data_Monoid.mempty(Data_Monoid.monoidArray);
              };
              var renderItems = [ Halogen_HTML_Elements.ul([ Halogen_HTML_Properties.classes(ulClasses) ])(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(function (i) {
                  return function (h) {
                      return Halogen_HTML_Elements.li(Select_Setters.setItemProps(i)([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(liClasses)(hover(i))) ]))([ Halogen_HTML.fromPlainHTML(h) ]);
                  };
              })(itemsHTML)) ];
              return Halogen_HTML_Elements.div(Select_Setters.setContainerProps([ Halogen_HTML_Properties.classes(itemContainerClasses) ]))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(renderItems)(addlHTML));
          };
      };
  };
  var selectionContainerClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(baseClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "border-t-2" ]));
  var selectionContainer = function (v) {
      if (v.length === 0) {
          return Halogen_HTML_Elements.div_([  ]);
      };
      return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(selectionContainerClasses) ])([ Halogen_HTML_Elements.ul([ Halogen_HTML_Properties.classes(ulClasses) ])(Data_Functor.mapFlipped(Data_Functor.functorArray)(v)(function (h) {
          return Halogen_HTML_Elements.li([ Halogen_HTML_Properties.classes(Data_Array.cons("py-2")(liClasses)) ])([ h ]);
      })) ]);
  };
  exports["dropdownButton"] = dropdownButton;
  exports["dropdownContainer"] = dropdownContainer;
  exports["dropdownItem"] = dropdownItem;
  exports["itemContainer"] = itemContainer;
  exports["selectionContainer"] = selectionContainer;
  exports["selectionGroup"] = selectionGroup;
  exports["boldMatches"] = boldMatches;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Components.Dropdown.Render"] = $PS["Ocelot.Components.Dropdown.Render"] || {};
  var exports = $PS["Ocelot.Components.Dropdown.Render"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_Block_ItemContainer = $PS["Ocelot.Block.ItemContainer"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var Select = $PS["Select"];
  var Select_Setters = $PS["Select.Setters"];                
  var defDropdown = function (dictEq) {
      return function (button) {
          return function (props) {
              return function (toString) {
                  return function (label) {
                      return function (st) {
                          var toggle = Ocelot_Block_ItemContainer.dropdownButton(button)(Select_Setters.setToggleProps(props))([ Halogen_HTML_Core.text(Data_Maybe.maybe(label)(toString)(st.selectedItem)) ]);
                          var containerClasses = (function () {
                              if (st.visibility instanceof Select.Off) {
                                  return [ "invisible" ];
                              };
                              if (st.visibility instanceof Select.On) {
                                  return [  ];
                              };
                              throw new Error("Failed pattern match at Ocelot.Components.Dropdown.Render (line 52, column 24 - line 54, column 17): " + [ st.visibility.constructor.name ]);
                          })();
                          var menu = Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(containerClasses) ])([ Ocelot_Block_ItemContainer.dropdownContainer([  ])(function ($2) {
                              return Halogen_HTML_Core.text(toString($2));
                          })((function () {
                              var $3 = Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(st.selectedItem);
                              return function ($4) {
                                  return $3(Data_Maybe.Just.create($4));
                              };
                          })())(st.items)(st.highlightedIndex) ]);
                          return Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("relative") ])([ toggle, menu ]);
                      };
                  };
              };
          };
      };
  };
  exports["defDropdown"] = defDropdown;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.Component.Dropdown"] = $PS["UIGuide.Component.Dropdown"] || {};
  var exports = $PS["UIGuide.Component.Dropdown"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Class_Console = $PS["Effect.Class.Console"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Ocelot_Block_Button = $PS["Ocelot.Block.Button"];
  var Ocelot_Block_Choice = $PS["Ocelot.Block.Choice"];
  var Ocelot_Block_Format = $PS["Ocelot.Block.Format"];
  var Ocelot_Block_Icon = $PS["Ocelot.Block.Icon"];
  var Ocelot_Components_Dropdown_Component = $PS["Ocelot.Components.Dropdown.Component"];
  var Ocelot_Components_Dropdown_Render = $PS["Ocelot.Components.Dropdown.Render"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var Select = $PS["Select"];
  var Select_Setters = $PS["Select.Setters"];
  var UIGuide_Block_Backdrop = $PS["UIGuide.Block.Backdrop"];
  var UIGuide_Block_Documentation = $PS["UIGuide.Block.Documentation"];                
  var Facebook = (function () {
      function Facebook() {

      };
      Facebook.value = new Facebook();
      return Facebook;
  })();
  var Twitter = (function () {
      function Twitter() {

      };
      Twitter.value = new Twitter();
      return Twitter;
  })();
  var HandleDropdown = (function () {
      function HandleDropdown(value0) {
          this.value0 = value0;
      };
      HandleDropdown.create = function (value0) {
          return new HandleDropdown(value0);
      };
      return HandleDropdown;
  })();
  var HandleChoice = (function () {
      function HandleChoice(value0) {
          this.value0 = value0;
      };
      HandleChoice.create = function (value0) {
          return new HandleChoice(value0);
      };
      return HandleChoice;
  })();
  var _select = Data_Symbol.SProxy.value;
  var _dropdown = Data_Symbol.SProxy.value;
  var component = function (dictMonadAff) {
      var render = function (state) {
          var selectInput = {
              debounceTime: Data_Maybe.Nothing.value,
              search: Data_Maybe.Nothing.value,
              inputType: Select.Toggle.value,
              getItemCount: function ($17) {
                  return Data_Array.length((function (v) {
                      return v.items;
                  })($17));
              },
              items: [ Facebook.value, Twitter.value ],
              selectedItem: Data_Maybe.Nothing.value
          };
          var renderPlatformChoice = function (state$prime) {
              var visibilityClasses = (function () {
                  if (state$prime.visibility instanceof Select.On) {
                      return Ocelot_HTML_Properties.css("");
                  };
                  if (state$prime.visibility instanceof Select.Off) {
                      return Ocelot_HTML_Properties.css("hidden");
                  };
                  throw new Error("Failed pattern match at UIGuide.Component.Dropdown (line 247, column 35 - line 249, column 43): " + [ state$prime.visibility.constructor.name ]);
              })();
              var renderPlatform = function (v) {
                  if (v instanceof Facebook) {
                      return [ Halogen_HTML_Elements.div_([ Ocelot_Block_Icon.facebook([ Ocelot_HTML_Properties.css("text-fb-blue text-4xl") ]) ]), Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.p([ Ocelot_HTML_Properties.css("text-black-20 font-light") ])([ Halogen_HTML_Core.text("Facebook") ]) ]) ];
                  };
                  if (v instanceof Twitter) {
                      return [ Halogen_HTML_Elements.div_([ Ocelot_Block_Icon.twitter([ Ocelot_HTML_Properties.css("text-tw-blue text-4xl") ]) ]), Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.p([ Ocelot_HTML_Properties.css("text-black-20 font-light") ])([ Halogen_HTML_Core.text("Twitter") ]) ]) ];
                  };
                  throw new Error("Failed pattern match at UIGuide.Component.Dropdown (line 275, column 32 - line 296, column 20): " + [ v.constructor.name ]);
              };
              var menu = Ocelot_Block_Choice.choice(Select_Setters.setContainerProps([ visibilityClasses ]))([ Ocelot_Block_Choice.header_([ Halogen_HTML_Elements.span([ Ocelot_HTML_Properties.css("font-medium text-grey-50") ])([ Halogen_HTML_Core.text("Advertise on...") ]) ]), Ocelot_Block_Choice.body_(Data_Array.mapWithIndex(function (index) {
                  return function (item) {
                      return Ocelot_Block_Choice.option(Select_Setters.setItemProps(index)([ (function () {
                          var $8 = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(new Data_Maybe.Just(index))(state$prime.highlightedIndex);
                          if ($8) {
                              return Halogen_HTML_Properties.classes(Ocelot_Block_Choice.highlightedOptionClasses);
                          };
                          return Halogen_HTML_Properties.classes([  ]);
                      })() ]))(renderPlatform(item));
                  };
              })(state$prime.items)) ]);
              return Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex items-center flex-col") ])([ menu, Ocelot_Block_Button.buttonPrimary(Select_Setters.setToggleProps([  ]))([ Halogen_HTML_Core.text("Create Campaign Group") ]) ]);
          };
          var renderDropdown = function (btnFn) {
              return Ocelot_Components_Dropdown_Render.defDropdown(Data_Eq.eqString)(btnFn)([  ])(Control_Category.identity(Control_Category.categoryFn))("Pick One");
          };
          var renderDisabledDropdown = function (btnFn) {
              return Ocelot_Components_Dropdown_Render.defDropdown(Data_Eq.eqString)(btnFn)([ Halogen_HTML_Properties.disabled(true) ])(Control_Category.identity(Control_Category.categoryFn))("Pick One");
          };
          var items = [ "Lagavulin 16", "Kilchoman Blue Label", "Laphroaig", "Ardbeg" ];
          var choiceSpec = {
              render: renderPlatformChoice,
              handleEvent: Halogen_Query_HalogenM.raise,
              finalize: Select.defaultSpec.finalize,
              handleAction: Select.defaultSpec.handleAction,
              handleQuery: Select.defaultSpec.handleQuery,
              initialize: Select.defaultSpec.initialize,
              receive: Select.defaultSpec.receive
          };
          return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.block_({
              header: "Dropdown",
              subheader: "A dropdown list of selectable items."
          })([ UIGuide_Block_Backdrop.backdrop_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Standard") ]), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "dropdown";
          }))(Data_Ord.ordUnit)(_dropdown)(Data_Unit.unit)(Ocelot_Components_Dropdown_Component.component(dictMonadAff))({
              selectedItem: Data_Maybe.Nothing.value,
              items: items,
              render: renderDropdown(Ocelot_Block_Button.button)
          })(function ($18) {
              return Data_Maybe.Just.create(HandleDropdown.create($18));
          }) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Disabled & Hydrated") ]), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "dropdown";
          }))(Data_Ord.ordUnit)(_dropdown)(Data_Unit.unit)(Ocelot_Components_Dropdown_Component.component(dictMonadAff))({
              selectedItem: new Data_Maybe.Just("Kilchoman Blue Label"),
              items: items,
              render: renderDisabledDropdown(Ocelot_Block_Button.button)
          })(function ($19) {
              return Data_Maybe.Just.create(HandleDropdown.create($19));
          }) ]) ]) ]), UIGuide_Block_Backdrop.backdropWhite_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Primary") ]), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "dropdown";
          }))(Data_Ord.ordUnit)(_dropdown)(Data_Unit.unit)(Ocelot_Components_Dropdown_Component.component(dictMonadAff))({
              selectedItem: Data_Maybe.Nothing.value,
              items: items,
              render: renderDropdown(Ocelot_Block_Button.buttonPrimary)
          })(function ($20) {
              return Data_Maybe.Just.create(HandleDropdown.create($20));
          }) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Disabled & Hydrated") ]), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "dropdown";
          }))(Data_Ord.ordUnit)(_dropdown)(Data_Unit.unit)(Ocelot_Components_Dropdown_Component.component(dictMonadAff))({
              selectedItem: new Data_Maybe.Just("Kilchoman Blue Label"),
              items: items,
              render: renderDisabledDropdown(Ocelot_Block_Button.buttonPrimary)
          })(function ($21) {
              return Data_Maybe.Just.create(HandleDropdown.create($21));
          }) ]) ]) ]), UIGuide_Block_Backdrop.backdropDark_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Dark") ]), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "dropdown";
          }))(Data_Ord.ordUnit)(_dropdown)(Data_Unit.unit)(Ocelot_Components_Dropdown_Component.component(dictMonadAff))({
              selectedItem: Data_Maybe.Nothing.value,
              items: items,
              render: renderDropdown(Ocelot_Block_Button.buttonDark)
          })(function ($22) {
              return Data_Maybe.Just.create(HandleDropdown.create($22));
          }) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mb-6") ])([ Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("Disabled & Hydrated") ]), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "dropdown";
          }))(Data_Ord.ordUnit)(_dropdown)(Data_Unit.unit)(Ocelot_Components_Dropdown_Component.component(dictMonadAff))({
              selectedItem: new Data_Maybe.Just("Kilchoman Blue Label"),
              items: items,
              render: renderDisabledDropdown(Ocelot_Block_Button.buttonDark)
          })(function ($23) {
              return Data_Maybe.Just.create(HandleDropdown.create($23));
          }) ]) ]) ]) ]), UIGuide_Block_Documentation.block_({
              header: "Choice",
              subheader: "A specialized dropdown for making selections."
          })([ UIGuide_Block_Backdrop.backdrop([ Ocelot_HTML_Properties.css("h-40 flex items-center justify-center") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "select";
          }))(Data_Ord.ordUnit)(_select)(Data_Unit.unit)(Select.component(dictMonadAff)()()()(Control_Category.identity(Control_Category.categoryFn))(choiceSpec))(selectInput)(function ($24) {
              return Data_Maybe.Just.create(HandleChoice.create($24));
          }) ]) ]) ]);
      };
      var handleAction = function (v) {
          if (v instanceof HandleDropdown) {
              if (v.value0 instanceof Ocelot_Components_Dropdown_Component.Selected) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Class_Console.log(Effect_Class.monadEffectEffect)(v.value0.value0)))(function () {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Category.identity(Control_Category.categoryFn));
                  });
              };
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
          };
          if (v instanceof HandleChoice) {
              if (v.value0 instanceof Select.Selected) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))((function () {
                      if (v.value0.value0 === 0) {
                          return Effect_Class_Console.log(Effect_Class.monadEffectEffect)("Facebook");
                      };
                      if (v.value0.value0 === 1) {
                          return Effect_Class_Console.log(Effect_Class.monadEffectEffect)("Twitter");
                      };
                      return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                  })()))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  });
              };
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
          };
          throw new Error("Failed pattern match at UIGuide.Component.Dropdown (line 63, column 20 - line 79, column 23): " + [ v.constructor.name ]);
      };
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction,
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Network.RemoteData"] = $PS["Network.RemoteData"] || {};
  var exports = $PS["Network.RemoteData"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Lens_Internal_Market = $PS["Data.Lens.Internal.Market"];
  var Data_Lens_Prism = $PS["Data.Lens.Prism"];
  var Data_Unit = $PS["Data.Unit"];                
  var NotAsked = (function () {
      function NotAsked() {

      };
      NotAsked.value = new NotAsked();
      return NotAsked;
  })();
  var Loading = (function () {
      function Loading() {

      };
      Loading.value = new Loading();
      return Loading;
  })();
  var Failure = (function () {
      function Failure(value0) {
          this.value0 = value0;
      };
      Failure.create = function (value0) {
          return new Failure(value0);
      };
      return Failure;
  })();
  var Success = (function () {
      function Success(value0) {
          this.value0 = value0;
      };
      Success.create = function (value0) {
          return new Success(value0);
      };
      return Success;
  })();
  var functorRemoteData = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof NotAsked) {
              return NotAsked.value;
          };
          if (m instanceof Loading) {
              return Loading.value;
          };
          if (m instanceof Failure) {
              return new Failure(m.value0);
          };
          if (m instanceof Success) {
              return new Success(f(m.value0));
          };
          throw new Error("Failed pattern match at Network.RemoteData (line 45, column 1 - line 45, column 60): " + [ m.constructor.name ]);
      };
  });
  var fromEither = function (v) {
      if (v instanceof Data_Either.Left) {
          return new Failure(v.value0);
      };
      if (v instanceof Data_Either.Right) {
          return new Success(v.value0);
      };
      throw new Error("Failed pattern match at Network.RemoteData (line 134, column 1 - line 134, column 55): " + [ v.constructor.name ]);
  }; 
  var applyRemoteData = new Control_Apply.Apply(function () {
      return functorRemoteData;
  }, function (v) {
      return function (v1) {
          if (v instanceof Success && v1 instanceof Success) {
              return new Success(v.value0(v1.value0));
          };
          if (v instanceof Failure) {
              return new Failure(v.value0);
          };
          if (v1 instanceof Failure) {
              return new Failure(v1.value0);
          };
          if (v instanceof NotAsked) {
              return NotAsked.value;
          };
          if (v1 instanceof NotAsked) {
              return NotAsked.value;
          };
          if (v instanceof Loading) {
              return Loading.value;
          };
          if (v1 instanceof Loading) {
              return Loading.value;
          };
          throw new Error("Failed pattern match at Network.RemoteData (line 62, column 1 - line 69, column 28): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindRemoteData = new Control_Bind.Bind(function () {
      return applyRemoteData;
  }, function (v) {
      return function (v1) {
          if (v instanceof NotAsked) {
              return NotAsked.value;
          };
          if (v instanceof Loading) {
              return Loading.value;
          };
          if (v instanceof Failure) {
              return new Failure(v.value0);
          };
          if (v instanceof Success) {
              return v1(v.value0);
          };
          throw new Error("Failed pattern match at Network.RemoteData (line 71, column 1 - line 75, column 35): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });                                                                                                                               
  var _Loading = function (dictChoice) {
      var unwrap = function (v) {
          if (v instanceof Loading) {
              return new Data_Either.Right(Data_Unit.unit);
          };
          return new Data_Either.Left(v);
      };
      return Data_Lens_Prism.prism(Data_Function["const"](Loading.value))(unwrap)(dictChoice);
  };
  var isLoading = Data_Lens_Prism.is(Data_HeytingAlgebra.heytingAlgebraBoolean)(_Loading(Data_Lens_Internal_Market.choiceMarket));
  var _Failure = function (dictChoice) {
      var unwrap = function (v) {
          if (v instanceof Failure) {
              return new Data_Either.Right(v.value0);
          };
          return new Data_Either.Left(v);
      };
      return Data_Lens_Prism.prism(Failure.create)(unwrap)(dictChoice);
  };
  var isFailure = Data_Lens_Prism.is(Data_HeytingAlgebra.heytingAlgebraBoolean)(_Failure(Data_Lens_Internal_Market.choiceMarket));
  exports["NotAsked"] = NotAsked;
  exports["Loading"] = Loading;
  exports["Failure"] = Failure;
  exports["Success"] = Success;
  exports["fromEither"] = fromEither;
  exports["isLoading"] = isLoading;
  exports["isFailure"] = isFailure;
  exports["functorRemoteData"] = functorRemoteData;
  exports["bindRemoteData"] = bindRemoteData;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Expandable"] = $PS["Ocelot.Block.Expandable"] || {};
  var exports = $PS["Ocelot.Block.Expandable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_Read = $PS["Data.String.Read"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var Ocelot_Block_Icon = $PS["Ocelot.Block.Icon"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];                
  var Collapsed = (function () {
      function Collapsed() {

      };
      Collapsed.value = new Collapsed();
      return Collapsed;
  })();
  var Expanded = (function () {
      function Expanded() {

      };
      Expanded.value = new Expanded();
      return Expanded;
  })();
  var toProp = function (v) {
      if (v instanceof Collapsed) {
          return "collapsed";
      };
      if (v instanceof Expanded) {
          return "expanded";
      };
      throw new Error("Failed pattern match at Ocelot.Block.Expandable (line 35, column 10 - line 37, column 26): " + [ v.constructor.name ]);
  };
  var toBoolean = function (v) {
      if (v instanceof Collapsed) {
          return false;
      };
      if (v instanceof Expanded) {
          return true;
      };
      throw new Error("Failed pattern match at Ocelot.Block.Expandable (line 39, column 1 - line 39, column 31): " + [ v.constructor.name ]);
  };
  var read = new Data_String_Read.Read(function (v) {
      if (v === "collapsed") {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Collapsed.value);
      };
      if (v === "expanded") {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Expanded.value);
      };
      return Data_Maybe.Nothing.value;
  });
  var isPropStatus = new Halogen_HTML_Core.IsProp(function ($28) {
      return Halogen_VDom_DOM_Prop.propFromString(toProp($28));
  });
  var status = Halogen_HTML_Properties.prop(isPropStatus)("expanded");
  var heytingAlgebraStatus = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
      return function (v1) {
          if (v instanceof Expanded && v1 instanceof Expanded) {
              return Expanded.value;
          };
          return Collapsed.value;
      };
  }, function (v) {
      return function (v1) {
          if (v instanceof Expanded) {
              return Expanded.value;
          };
          if (v1 instanceof Expanded) {
              return Expanded.value;
          };
          return Collapsed.value;
      };
  }, Collapsed.value, function (a) {
      return function (b) {
          return Data_HeytingAlgebra.disj(heytingAlgebraStatus)(Data_HeytingAlgebra.not(heytingAlgebraStatus)(a))(b);
      };
  }, function (v) {
      if (v instanceof Expanded) {
          return Collapsed.value;
      };
      if (v instanceof Collapsed) {
          return Expanded.value;
      };
      throw new Error("Failed pattern match at Ocelot.Block.Expandable (line 47, column 1 - line 57, column 27): " + [ v.constructor.name ]);
  }, Expanded.value);
  var headingInnerClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex-initial" ]);
  var headingClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "justify-between", "cursor-pointer" ]);
  var extractStatus = (function () {
      var coerceExpanded = (function () {
          var $29 = Data_Maybe.fromMaybe(Expanded.value);
          var $30 = Data_String_Read.read(read);
          return function ($31) {
              return $29($30($31));
          };
      })();
      var f = function (v) {
          if (v instanceof Halogen_VDom_DOM_Prop.Property && v.value0 === "expanded") {
              return Data_Bifunctor.lmap(Data_Tuple.bifunctorTuple)(Data_Function["const"](coerceExpanded(v.value1)));
          };
          return Data_Bifunctor.rmap(Data_Tuple.bifunctorTuple)(Data_Function.flip(Data_Array.snoc)(v));
      };
      return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(new Data_Tuple.Tuple(Expanded.value, [  ]));
  })();
  var contentSharedClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([  ]);
  var contentClasses = function (status_) {
      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(contentSharedClasses)((function () {
          if (status_ instanceof Collapsed) {
              return Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "max-h-0", "opacity-0", "overflow-hidden", "transition-1/4-in" ]);
          };
          if (status_ instanceof Expanded) {
              return Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "max-h-full", "opacity-1", "transition-1/2-out" ]);
          };
          throw new Error("Failed pattern match at Ocelot.Block.Expandable (line 84, column 5 - line 95, column 8): " + [ status_.constructor.name ]);
      })());
  };
  var content = function (status_) {
      return function (iprops) {
          return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(contentClasses(status_)) ])(iprops));
      };
  };
  var content_ = function (status_) {
      return content(status_)([  ]);
  };
  var chevronClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "text-grey-70", "text-lg", "leading-loose" ]);
  var chevron = function (status_) {
      return function (iprops) {
          return (function () {
              if (status_ instanceof Collapsed) {
                  return Ocelot_Block_Icon.expand;
              };
              if (status_ instanceof Expanded) {
                  return Ocelot_Block_Icon.collapse;
              };
              throw new Error("Failed pattern match at Ocelot.Block.Expandable (line 145, column 5 - line 147, column 31): " + [ status_.constructor.name ]);
          })()(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(chevronClasses) ])(iprops));
      };
  };
  var chevron_ = function (status_) {
      return chevron(status_)([  ]);
  };
  var heading = function (iprops) {
      return function (html) {
          var v = extractStatus(iprops);
          return Halogen_HTML_Elements.header(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(headingClasses) ])(v.value1))([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(headingInnerClasses) ])(html), Halogen_HTML_Elements.div_([ chevron_(v.value0) ]) ]);
      };
  };
  exports["Collapsed"] = Collapsed;
  exports["Expanded"] = Expanded;
  exports["toBoolean"] = toBoolean;
  exports["status"] = status;
  exports["heading"] = heading;
  exports["content_"] = content_;
  exports["heytingAlgebraStatus"] = heytingAlgebraStatus;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Toggle"] = $PS["Ocelot.Block.Toggle"] || {};
  var exports = $PS["Ocelot.Block.Toggle"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];                
  var toggleClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "transition-1/8", "inline-flex", "justify-center", "items-center", "content-box", "h-5", "w-5", "p-1", "rounded-full", "mr-3", "before:bg-white", "before:h-full", "before:w-full", "before:rounded-full", "before:no-content", "before:shadow" ]);
  var labelClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "flex-row", "items-center", "inline-block", "py-1", "cursor-pointer", "leading-loose", "text-black-20" ]);
  var inputClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "checked:sibling:bg-blue-88", "checked:sibling:pl-5", "!checked:sibling:bg-grey-80", "!checked:sibling:pr-5", "offscreen" ]);
  var toggle = function (iprops) {
      var iprops$prime = Data_Semigroup.append(Data_Semigroup.semigroupArray)(iprops)([ Halogen_HTML_Properties.classes(inputClasses), Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputCheckbox.value) ]);
      return Halogen_HTML_Elements.label([ Halogen_HTML_Properties.classes(labelClasses) ])([ Halogen_HTML_Elements.input(iprops$prime), Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes(toggleClasses) ])([  ]) ]);
  };
  exports["toggle"] = toggle;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Component.Typeahead.Base"] = $PS["Ocelot.Component.Typeahead.Base"] || {};
  var exports = $PS["Ocelot.Component.Typeahead.Base"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Comonad = $PS["Control.Comonad"];
  var Control_Comonad_Store = $PS["Control.Comonad.Store"];
  var Control_Comonad_Store_Trans = $PS["Control.Comonad.Store.Trans"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Fuzzy = $PS["Data.Fuzzy"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ratio = $PS["Data.Ratio"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Network_RemoteData = $PS["Network.RemoteData"];
  var Renderless_State = $PS["Renderless.State"];
  var Select = $PS["Select"];                
  var RemovalQuery = (function () {
      function RemovalQuery() {

      };
      RemovalQuery.value = new RemovalQuery();
      return RemovalQuery;
  })();
  var ReplacementQuery = (function () {
      function ReplacementQuery() {

      };
      ReplacementQuery.value = new ReplacementQuery();
      return ReplacementQuery;
  })();
  var ResetQuery = (function () {
      function ResetQuery() {

      };
      ResetQuery.value = new ResetQuery();
      return ResetQuery;
  })();
  var SelectionMessage = (function () {
      function SelectionMessage() {

      };
      SelectionMessage.value = new SelectionMessage();
      return SelectionMessage;
  })();
  var GetSelected = (function () {
      function GetSelected(value0) {
          this.value0 = value0;
      };
      GetSelected.create = function (value0) {
          return new GetSelected(value0);
      };
      return GetSelected;
  })();
  var ReplaceSelected = (function () {
      function ReplaceSelected(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ReplaceSelected.create = function (value0) {
          return function (value1) {
              return new ReplaceSelected(value0, value1);
          };
      };
      return ReplaceSelected;
  })();
  var ReplaceSelectedBy = (function () {
      function ReplaceSelectedBy(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ReplaceSelectedBy.create = function (value0) {
          return function (value1) {
              return new ReplaceSelectedBy(value0, value1);
          };
      };
      return ReplaceSelectedBy;
  })();
  var ReplaceItems = (function () {
      function ReplaceItems(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ReplaceItems.create = function (value0) {
          return function (value1) {
              return new ReplaceItems(value0, value1);
          };
      };
      return ReplaceItems;
  })();
  var Reset = (function () {
      function Reset(value0) {
          this.value0 = value0;
      };
      Reset.create = function (value0) {
          return new Reset(value0);
      };
      return Reset;
  })();
  var SetDisabled = (function () {
      function SetDisabled(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetDisabled.create = function (value0) {
          return function (value1) {
              return new SetDisabled(value0, value1);
          };
      };
      return SetDisabled;
  })();
  var Searched = (function () {
      function Searched(value0) {
          this.value0 = value0;
      };
      Searched.create = function (value0) {
          return new Searched(value0);
      };
      return Searched;
  })();
  var Selected = (function () {
      function Selected(value0) {
          this.value0 = value0;
      };
      Selected.create = function (value0) {
          return new Selected(value0);
      };
      return Selected;
  })();
  var SelectionChanged = (function () {
      function SelectionChanged(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SelectionChanged.create = function (value0) {
          return function (value1) {
              return new SelectionChanged(value0, value1);
          };
      };
      return SelectionChanged;
  })();
  var Emit = (function () {
      function Emit(value0) {
          this.value0 = value0;
      };
      Emit.create = function (value0) {
          return new Emit(value0);
      };
      return Emit;
  })();
  var NotInsertable = (function () {
      function NotInsertable() {

      };
      NotInsertable.value = new NotInsertable();
      return NotInsertable;
  })();
  var Insertable = (function () {
      function Insertable(value0) {
          this.value0 = value0;
      };
      Insertable.create = function (value0) {
          return new Insertable(value0);
      };
      return Insertable;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var Remove = (function () {
      function Remove(value0) {
          this.value0 = value0;
      };
      Remove.create = function (value0) {
          return new Remove(value0);
      };
      return Remove;
  })();
  var RemoveAll = (function () {
      function RemoveAll() {

      };
      RemoveAll.value = new RemoveAll();
      return RemoveAll;
  })();
  var Raise = (function () {
      function Raise(value0) {
          this.value0 = value0;
      };
      Raise.create = function (value0) {
          return new Raise(value0);
      };
      return Raise;
  })();
  var PassingOutput = (function () {
      function PassingOutput(value0) {
          this.value0 = value0;
      };
      PassingOutput.create = function (value0) {
          return new PassingOutput(value0);
      };
      return PassingOutput;
  })();
  var ReceiveRender = (function () {
      function ReceiveRender(value0) {
          this.value0 = value0;
      };
      ReceiveRender.create = function (value0) {
          return new ReceiveRender(value0);
      };
      return ReceiveRender;
  })();
  var embeddedInput = function (v) {
      return {
          inputType: Select.Text.value,
          search: Data_Maybe.Nothing.value,
          debounceTime: v.config.debounceTime,
          getItemCount: function ($199) {
              return Data_Array.length((function (v1) {
                  return v1.fuzzyItems;
              })($199));
          },
          items: v.items,
          selected: v.selected,
          insertable: v.insertable,
          keepOpen: v.keepOpen,
          itemToObject: v.itemToObject,
          ops: v.ops,
          async: v.async,
          fuzzyItems: v.fuzzyItems,
          disabled: v.disabled,
          config: {
              debounceTime: v.config.debounceTime
          }
      };
  };
  var embeddedInitialize = new Data_Maybe.Just(Initialize.value);
  var applyInsertable = function (v) {
      return function (v1) {
          return function (v2) {
              return function (items) {
                  if (v2 === "") {
                      return items;
                  };
                  var isExactMatch = function (v3) {
                      return Data_Eq.eq(Data_Fuzzy.eqDistance)(v3.distance)(new Data_Fuzzy.Distance(0, 0, 0, 0, 0, 0));
                  };
                  if (v1 instanceof NotInsertable) {
                      return items;
                  };
                  if (v1 instanceof Insertable) {
                      if (Data_Array.length(Data_Array.filter(isExactMatch)(items)) > 0) {
                          return items;
                      };
                      if (Data_Boolean.otherwise) {
                          return Data_Array.cons(v(v1.value0(v2)))(items);
                      };
                  };
                  throw new Error("Failed pattern match at Ocelot.Component.Typeahead.Base (line 311, column 47 - line 314, column 65): " + [ v1.constructor.name ]);
              };
          };
      };
  };
  var getNewItems = function (dictMonadAff) {
      return function (dictEq) {
          return function (st) {
              var matcher = Data_Fuzzy.match(true)(st.itemToObject)(st.search);
              var fuzzyItems = Data_Functor.map(Data_Functor.functorArray)(matcher);
              var applyI = applyInsertable(matcher)(st.insertable)(st.search);
              var applyF = Data_Array.filter(function (v) {
                  return Data_Ord.greaterThan(Data_Ratio.ordRatio(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt))(v.ratio)(Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(2)(3));
              });
              return Data_Functor.map(Network_RemoteData.functorRemoteData)((function () {
                  var $200 = Data_Array.sort(Data_Fuzzy.ordFuzzy(dictEq));
                  return function ($201) {
                      return $200(applyF(applyI(fuzzyItems($201))));
                  };
              })())(Data_Functor.map(Network_RemoteData.functorRemoteData)(Data_Function.flip(st.ops.runFilter)(st.selected))(st.items));
          };
      };
  };
  var synchronize = function (dictEq) {
      return function (dictMonadAff) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
              var v = getNewItems(dictMonadAff)(dictEq)(st);
              if (v instanceof Network_RemoteData.Success) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $97 = {};
                      for (var $98 in v1) {
                          if ({}.hasOwnProperty.call(v1, $98)) {
                              $97[$98] = v1[$98];
                          };
                      };
                      $97.fuzzyItems = v.value0;
                      return $97;
                  });
              };
              if (v instanceof Network_RemoteData.Failure) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $101 = {};
                      for (var $102 in v1) {
                          if ({}.hasOwnProperty.call(v1, $102)) {
                              $101[$102] = v1[$102];
                          };
                      };
                      $101.visibility = Select.Off.value;
                      $101.fuzzyItems = [  ];
                      return $101;
                  });
              };
              if (v instanceof Network_RemoteData.NotAsked) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $105 = {};
                      for (var $106 in v1) {
                          if ({}.hasOwnProperty.call(v1, $106)) {
                              $105[$106] = v1[$106];
                          };
                      };
                      $105.visibility = Select.Off.value;
                      $105.fuzzyItems = [  ];
                      return $105;
                  });
              };
              if (v instanceof Network_RemoteData.Loading) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $108 = {};
                      for (var $109 in v1) {
                          if ({}.hasOwnProperty.call(v1, $109)) {
                              $108[$109] = v1[$109];
                          };
                      };
                      $108.fuzzyItems = [  ];
                      return $108;
                  });
              };
              throw new Error("Failed pattern match at Ocelot.Component.Typeahead.Base (line 325, column 3 - line 339, column 38): " + [ v.constructor.name ]);
          });
      };
  };
  var embeddedHandleAction = function (dictEq) {
      return function (dictPlus) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return synchronize(dictEq)(dictMonadAff);
                  };
                  if (v instanceof Remove) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                          var $112 = {};
                          for (var $113 in st) {
                              if ({}.hasOwnProperty.call(st, $113)) {
                                  $112[$113] = st[$113];
                              };
                          };
                          $112.selected = st.ops.runRemove(v.value0)(st.selected);
                          return $112;
                      }))(function (st) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new SelectionChanged(RemovalQuery.value, st.selected)))(function () {
                              return synchronize(dictEq)(dictMonadAff);
                          });
                      });
                  };
                  if (v instanceof RemoveAll) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                          var $116 = {};
                          for (var $117 in st) {
                              if ({}.hasOwnProperty.call(st, $117)) {
                                  $116[$117] = st[$117];
                              };
                          };
                          $116.selected = Control_Plus.empty(dictPlus);
                          $116.visibility = Select.Off.value;
                          return $116;
                      }))(function (st) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new SelectionChanged(RemovalQuery.value, st.selected)))(function () {
                              return synchronize(dictEq)(dictMonadAff);
                          });
                      });
                  };
                  if (v instanceof Raise) {
                      return Halogen_Query_HalogenM.raise(new Emit(v.value0));
                  };
                  throw new Error("Failed pattern match at Ocelot.Component.Typeahead.Base (line 362, column 24 - line 377, column 26): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var embeddedHandleMessage = function (dictEq) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof Select.Selected) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                      var v2 = Data_Array.index(v1.fuzzyItems)(v.value0);
                      if (v2 instanceof Data_Maybe.Nothing) {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      };
                      if (v2 instanceof Data_Maybe.Just) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                              var $123 = {};
                              for (var $124 in st) {
                                  if ({}.hasOwnProperty.call(st, $124)) {
                                      $123[$124] = st[$124];
                                  };
                              };
                              $123.selected = st.ops.runSelect(v2.value0.original)(st.selected);
                              return $123;
                          }))(function (st) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(!st.keepOpen)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                                  var $126 = {};
                                  for (var $127 in v3) {
                                      if ({}.hasOwnProperty.call(v3, $127)) {
                                          $126[$127] = v3[$127];
                                      };
                                  };
                                  $126.visibility = Select.Off.value;
                                  return $126;
                              })))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new SelectionChanged(SelectionMessage.value, st.selected)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new Selected(v2.value0.original)))(function () {
                                          return synchronize(dictEq)(dictMonadAff);
                                      });
                                  });
                              });
                          });
                      };
                      throw new Error("Failed pattern match at Ocelot.Component.Typeahead.Base (line 427, column 5 - line 435, column 20): " + [ v2.constructor.name ]);
                  });
              };
              if (v instanceof Select.Searched) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $133 = {};
                      for (var $134 in v1) {
                          if ({}.hasOwnProperty.call(v1, $134)) {
                              $133[$134] = v1[$134];
                          };
                      };
                      $133.search = v.value0;
                      return $133;
                  }))(function () {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          return v1.async;
                      }))(function (async) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                              if (async instanceof Data_Maybe.Nothing) {
                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                              };
                              if (async instanceof Data_Maybe.Just) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $137 = {};
                                      for (var $138 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $138)) {
                                              $137[$138] = v1[$138];
                                          };
                                      };
                                      $137.items = Network_RemoteData.Loading.value;
                                      return $137;
                                  }))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(synchronize(dictEq)(dictMonadAff))(function () {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictMonadAff.MonadEffect0()).Monad0())(async.value0(v.value0)))(function (newItems) {
                                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                  var $140 = {};
                                                  for (var $141 in v1) {
                                                      if ({}.hasOwnProperty.call(v1, $141)) {
                                                          $140[$141] = v1[$141];
                                                      };
                                                  };
                                                  $140.items = newItems;
                                                  return $140;
                                              });
                                          });
                                      });
                                  });
                              };
                              throw new Error("Failed pattern match at Ocelot.Component.Typeahead.Base (line 442, column 5 - line 448, column 41): " + [ async.constructor.name ]);
                          })())(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new Searched(v.value0)))(function () {
                                  return synchronize(dictEq)(dictMonadAff);
                              });
                          });
                      });
                  });
              };
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
          };
      };
  };
  var replaceSelected = function (dictEq) {
      return function (dictMonadAff) {
          return function (selected) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
                  var $145 = {};
                  for (var $146 in v) {
                      if ({}.hasOwnProperty.call(v, $146)) {
                          $145[$146] = v[$146];
                      };
                  };
                  $145.selected = selected;
                  return $145;
              }))(function (st) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new SelectionChanged(ReplacementQuery.value, st.selected)))(function () {
                      return synchronize(dictEq)(dictMonadAff);
                  });
              });
          };
      };
  };
  var embeddedHandleQuery = function (dictPlus) {
      return function (dictEq) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof GetSelected) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Just.create(v.value0(v1.selected)));
                      });
                  };
                  if (v instanceof ReplaceSelected) {
                      return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(replaceSelected(dictEq)(dictMonadAff)(v.value0));
                  };
                  if (v instanceof ReplaceSelectedBy) {
                      return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                          if (v1.items instanceof Network_RemoteData.Success) {
                              return replaceSelected(dictEq)(dictMonadAff)(v.value0(v1.items.value0));
                          };
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      }));
                  };
                  if (v instanceof ReplaceItems) {
                      return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $160 = {};
                          for (var $161 in v1) {
                              if ({}.hasOwnProperty.call(v1, $161)) {
                                  $160[$161] = v1[$161];
                              };
                          };
                          $160.items = v.value0;
                          return $160;
                      }))(function () {
                          return synchronize(dictEq)(dictMonadAff);
                      }));
                  };
                  if (v instanceof Reset) {
                      return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value0))(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $165 = {};
                          for (var $166 in v1) {
                              if ({}.hasOwnProperty.call(v1, $166)) {
                                  $165[$166] = v1[$166];
                              };
                          };
                          $165.selected = Control_Plus.empty(dictPlus);
                          $165.items = Network_RemoteData.NotAsked.value;
                          return $165;
                      }))(function (st) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new SelectionChanged(ResetQuery.value, st.selected)))(function () {
                              return synchronize(dictEq)(dictMonadAff);
                          });
                      }));
                  };
                  if (v instanceof SetDisabled) {
                      return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $169 = {};
                          for (var $170 in v1) {
                              if ({}.hasOwnProperty.call(v1, $170)) {
                                  $169[$170] = v1[$170];
                              };
                          };
                          $169.disabled = v.value0;
                          return $169;
                      }));
                  };
                  throw new Error("Failed pattern match at Ocelot.Component.Typeahead.Base (line 389, column 23 - line 413, column 40): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var spec = function (dictPlus) {
      return function (dictEq) {
          return function (dictMonadAff) {
              return function (embeddedRender) {
                  return {
                      render: embeddedRender,
                      handleAction: embeddedHandleAction(dictEq)(dictPlus)(dictMonadAff),
                      handleQuery: embeddedHandleQuery(dictPlus)(dictEq)(dictMonadAff),
                      handleEvent: embeddedHandleMessage(dictEq)(dictMonadAff),
                      receive: Select.defaultSpec.receive,
                      initialize: embeddedInitialize,
                      finalize: Select.defaultSpec.finalize
                  };
              };
          };
      };
  };
  var _select = Data_Symbol.SProxy.value;
  var handleQuery = function (v) {
      if (v instanceof GetSelected) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
              return "select";
          }))(Data_Ord.ordUnit)(_select)(Data_Unit.unit)(Select.Query.create(Halogen_Query.request(GetSelected.create))))(function (response) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Functor.map(Data_Maybe.functorMaybe)(v.value0)(response));
          });
      };
      if (v instanceof ReplaceSelected) {
          return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
              return "select";
          }))(Data_Ord.ordUnit)(_select)(Data_Unit.unit)(Select.Query.create(Halogen_Query.tell(ReplaceSelected.create(v.value0)))));
      };
      if (v instanceof ReplaceSelectedBy) {
          return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
              return "select";
          }))(Data_Ord.ordUnit)(_select)(Data_Unit.unit)(Select.Query.create(Halogen_Query.tell(ReplaceSelectedBy.create(v.value0)))));
      };
      if (v instanceof ReplaceItems) {
          return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
              return "select";
          }))(Data_Ord.ordUnit)(_select)(Data_Unit.unit)(Select.Query.create(Halogen_Query.tell(ReplaceItems.create(v.value0)))));
      };
      if (v instanceof Reset) {
          return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value0))(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
              return "select";
          }))(Data_Ord.ordUnit)(_select)(Data_Unit.unit)(Select.Query.create(Halogen_Query.tell(Reset.create))));
      };
      if (v instanceof SetDisabled) {
          return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
              return "select";
          }))(Data_Ord.ordUnit)(_select)(Data_Unit.unit)(Select.Query.create(Halogen_Query.tell(SetDisabled.create(v.value0)))));
      };
      throw new Error("Failed pattern match at Ocelot.Component.Typeahead.Base (line 260, column 15 - line 273, column 67): " + [ v.constructor.name ]);
  };
  var renderAdapter = function (dictPlus) {
      return function (dictEq) {
          return function (dictMonadAff) {
              return function (render) {
                  return function (state) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "select";
                      }))(Data_Ord.ordUnit)(_select)(Data_Unit.unit)(Select.component(dictMonadAff)()()()(Control_Category.identity(Control_Category.categoryFn))(spec(dictPlus)(dictEq)(dictMonadAff)(render)))(embeddedInput(state))(function ($202) {
                          return Data_Maybe.Just.create(PassingOutput.create($202));
                      });
                  };
              };
          };
      };
  };
  var handleAction = function (dictPlus) {
      return function (dictEq) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof PassingOutput) {
                      return Halogen_Query_HalogenM.raise(v.value0);
                  };
                  if (v instanceof ReceiveRender) {
                      return Renderless_State.modifyStore_(Halogen_Query_HalogenM.monadStateHalogenM)(renderAdapter(dictPlus)(dictEq)(dictMonadAff)(v.value0.render))(Control_Category.identity(Control_Category.categoryFn));
                  };
                  throw new Error("Failed pattern match at Ocelot.Component.Typeahead.Base (line 252, column 16 - line 256, column 49): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var initialState = function (dictPlus) {
      return function (dictEq) {
          return function (dictMonadAff) {
              return function (ops) {
                  return function (v) {
                      return Control_Comonad_Store.store(renderAdapter(dictPlus)(dictEq)(dictMonadAff)(v.render))({
                          items: v.items,
                          insertable: v.insertable,
                          keepOpen: v.keepOpen,
                          itemToObject: v.itemToObject,
                          async: v.async,
                          disabled: v.disabled,
                          ops: ops,
                          config: {
                              debounceTime: v.debounceTime
                          },
                          selected: Control_Plus.empty(dictPlus),
                          fuzzyItems: [  ]
                      });
                  };
              };
          };
      };
  };
  var component = function (dictPlus) {
      return function (dictEq) {
          return function (dictMonadAff) {
              return function (ops) {
                  return Halogen_Component.mkComponent({
                      initialState: initialState(dictPlus)(dictEq)(dictMonadAff)(ops),
                      render: Control_Comonad.extract(Control_Comonad_Store_Trans.comonadStoreT(Data_Identity.comonadIdentity)),
                      "eval": Halogen_Component.mkEval({
                          handleAction: handleAction(dictPlus)(dictEq)(dictMonadAff),
                          handleQuery: handleQuery,
                          receive: Halogen_Component.defaultEval.receive,
                          initialize: Halogen_Component.defaultEval.initialize,
                          finalize: Halogen_Component.defaultEval.finalize
                      })
                  });
              };
          };
      };
  };
  var multi = function (dictEq) {
      return function (dictMonadAff) {
          return component(Control_Plus.plusArray)(dictEq)(dictMonadAff)({
              runSelect: Data_Array.cons,
              runRemove: (function () {
                  var $203 = Data_Eq.notEq(dictEq);
                  return function ($204) {
                      return Data_Array.filter($203($204));
                  };
              })(),
              runFilter: Data_Array.difference(dictEq)
          });
      };
  };
  var single = function (dictEq) {
      return function (dictMonadAff) {
          return component(Data_Maybe.plusMaybe)(dictEq)(dictMonadAff)({
              runSelect: function ($205) {
                  return Data_Function["const"](Data_Maybe.Just.create($205));
              },
              runRemove: Data_Function["const"](Data_Function["const"](Data_Maybe.Nothing.value)),
              runFilter: function (items) {
                  return Data_Maybe.maybe(items)(function (i) {
                      return Data_Array.filter(function (v) {
                          return Data_Eq.notEq(dictEq)(v)(i);
                      })(items);
                  });
              }
          });
      };
  };
  exports["single"] = single;
  exports["multi"] = multi;
  exports["Remove"] = Remove;
  exports["RemoveAll"] = RemoveAll;
  exports["ReplaceSelected"] = ReplaceSelected;
  exports["ReplaceItems"] = ReplaceItems;
  exports["NotInsertable"] = NotInsertable;
  exports["Insertable"] = Insertable;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Conditional"] = $PS["Ocelot.Block.Conditional"] || {};
  var exports = $PS["Ocelot.Block.Conditional"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];                
  var conditional = function (cond) {
      return function (props) {
          return function (html) {
              return Halogen_HTML_Elements.span(props)((function () {
                  if (cond) {
                      return html;
                  };
                  return [  ];
              })());
          };
      };
  };
  exports["conditional"] = conditional;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Text.Parsing.StringParser"] = $PS["Text.Parsing.StringParser"] || {};
  var exports = $PS["Text.Parsing.StringParser"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Alternative = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unit = $PS["Data.Unit"];                
  var ParseError = (function () {
      function ParseError(value0) {
          this.value0 = value0;
      };
      ParseError.create = function (value0) {
          return new ParseError(value0);
      };
      return ParseError;
  })();
  var Parser = function (x) {
      return x;
  };
  var unParser = function (v) {
      return v;
  };
  var $$try = function (v) {
      return function (v1) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v2) {
              return {
                  pos: v1.pos,
                  error: v2.error
              };
          })(v(v1));
      };
  };
  var showParseError = new Data_Show.Show(function (v) {
      return v.value0;
  });
  var runParser = function (v) {
      return function (s) {
          return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(function (v1) {
              return v1.error;
          })(function (v1) {
              return v1.result;
          })(v({
              str: s,
              pos: 0
          }));
      };
  };
  var lazyParser = new Control_Lazy.Lazy(function (f) {
      return Parser(function (str) {
          return unParser(f(Data_Unit.unit))(str);
      });
  });
  var functorParser = new Data_Functor.Functor(function (f) {
      return function (v) {
          var $80 = Data_Functor.map(Data_Either.functorEither)(function (v1) {
              return {
                  result: f(v1.result),
                  suffix: v1.suffix
              };
          });
          return function ($81) {
              return $80(v($81));
          };
      };
  });
  var fail = function (msg) {
      return function (v) {
          return new Data_Either.Left({
              pos: v.pos,
              error: new ParseError(msg)
          });
      };
  }; 
  var applyParser = new Control_Apply.Apply(function () {
      return functorParser;
  }, function (v) {
      return function (v1) {
          return function (s) {
              return Control_Bind.bind(Data_Either.bindEither)(v(s))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(v1(v2.suffix))(function (v3) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          result: v2.result(v3.result),
                          suffix: v3.suffix
                      });
                  });
              });
          };
      };
  });
  var bindParser = new Control_Bind.Bind(function () {
      return applyParser;
  }, function (v) {
      return function (f) {
          return function (s) {
              return Control_Bind.bind(Data_Either.bindEither)(v(s))(function (v1) {
                  return unParser(f(v1.result))(v1.suffix);
              });
          };
      };
  });
  var applicativeParser = new Control_Applicative.Applicative(function () {
      return applyParser;
  }, function (a) {
      return function (s) {
          return new Data_Either.Right({
              result: a,
              suffix: s
          });
      };
  });
  var monadParser = new Control_Monad.Monad(function () {
      return applicativeParser;
  }, function () {
      return bindParser;
  });
  var monadRecParser = new Control_Monad_Rec_Class.MonadRec(function () {
      return monadParser;
  }, function (f) {
      return function (a) {
          var split = function (v) {
              if (v.result instanceof Control_Monad_Rec_Class.Loop) {
                  return new Control_Monad_Rec_Class.Loop({
                      state: v.result.value0,
                      str: v.suffix
                  });
              };
              if (v.result instanceof Control_Monad_Rec_Class.Done) {
                  return new Control_Monad_Rec_Class.Done({
                      result: v.result.value0,
                      suffix: v.suffix
                  });
              };
              throw new Error("Failed pattern match at Text.Parsing.StringParser (line 88, column 7 - line 88, column 70): " + [ v.constructor.name ]);
          };
          return function (str) {
              return Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEither)(function (st) {
                  return Data_Functor.map(Data_Either.functorEither)(split)(unParser(f(st.state))(st.str));
              })({
                  state: a,
                  str: str
              });
          };
      };
  });
  var altParser = new Control_Alt.Alt(function () {
      return functorParser;
  }, function (v) {
      return function (v1) {
          return function (s) {
              var v2 = v(s);
              if (v2 instanceof Data_Either.Left) {
                  if (s.pos === v2.value0.pos) {
                      return v1(s);
                  };
                  if (Data_Boolean.otherwise) {
                      return new Data_Either.Left({
                          error: v2.value0.error,
                          pos: v2.value0.pos
                      });
                  };
              };
              return v2;
          };
      };
  });
  var plusParser = new Control_Plus.Plus(function () {
      return altParser;
  }, fail("No alternative"));
  var alternativeParser = new Control_Alternative.Alternative(function () {
      return applicativeParser;
  }, function () {
      return plusParser;
  });
  exports["ParseError"] = ParseError;
  exports["runParser"] = runParser;
  exports["fail"] = fail;
  exports["try"] = $$try;
  exports["showParseError"] = showParseError;
  exports["functorParser"] = functorParser;
  exports["applyParser"] = applyParser;
  exports["applicativeParser"] = applicativeParser;
  exports["altParser"] = altParser;
  exports["alternativeParser"] = alternativeParser;
  exports["bindParser"] = bindParser;
  exports["monadRecParser"] = monadRecParser;
  exports["lazyParser"] = lazyParser;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Text.Parsing.StringParser.Combinators"] = $PS["Text.Parsing.StringParser.Combinators"] || {};
  var exports = $PS["Text.Parsing.StringParser.Combinators"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Text_Parsing_StringParser = $PS["Text.Parsing.StringParser"];
  var option = function (a) {
      return function (p) {
          return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
      };
  };
  var many1Till = function (p) {
      return function (end) {
          var ending = function (acc) {
              return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(end)(function () {
                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Control_Monad_Rec_Class.Done(Data_List_NonEmpty.reverse(acc)));
              });
          };
          var $$continue = function (acc) {
              return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (c) {
                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Control_Monad_Rec_Class.Loop(Data_List_NonEmpty.cons(c)(acc)));
              });
          };
          var inner = function (acc) {
              return Control_Alt.alt(Text_Parsing_StringParser.altParser)(ending(acc))($$continue(acc));
          };
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (x) {
              return Control_Monad_Rec_Class.tailRecM(Text_Parsing_StringParser.monadRecParser)(inner)(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(x));
          });
      };
  };
  var manyTill = function (p) {
      return function (end) {
          return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(end)(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List_Types.Nil.value)))(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_List_NonEmpty.toList)(many1Till(p)(end)));
      };
  };
  var many = Data_List.manyRec(Text_Parsing_StringParser.monadRecParser)(Text_Parsing_StringParser.alternativeParser);
  var lookAhead = function (v) {
      return function (s) {
          var v1 = v(s);
          if (v1 instanceof Data_Either.Right) {
              return new Data_Either.Right({
                  result: v1.value0.result,
                  suffix: s
              });
          };
          return v1;
      };
  };
  var cons$prime = function (h) {
      return function (t) {
          return new Data_NonEmpty.NonEmpty(h, t);
      };
  };
  var sepEndBy1 = function (p) {
      return function (sep) {
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (a) {
              return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(sep)(function () {
                  return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(sepEndBy(p)(sep))(function (as) {
                      return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(cons$prime(a)(as));
                  });
              }))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List_NonEmpty.singleton(a)));
          });
      };
  };
  var sepEndBy = function (p) {
      return function (sep) {
          return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_List_NonEmpty.toList)(sepEndBy1(p)(sep)))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List_Types.Nil.value));
      };
  };
  exports["lookAhead"] = lookAhead;
  exports["many"] = many;
  exports["option"] = option;
  exports["sepEndBy"] = sepEndBy;
  exports["manyTill"] = manyTill;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Text.Parsing.StringParser.CodeUnits"] = $PS["Text.Parsing.StringParser.CodeUnits"] || {};
  var exports = $PS["Text.Parsing.StringParser.CodeUnits"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Regex = $PS["Data.String.Regex"];
  var Data_String_Regex_Flags = $PS["Data.String.Regex.Flags"];
  var Text_Parsing_StringParser = $PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = $PS["Text.Parsing.StringParser.Combinators"];                
  var string = function (nt) {
      return function (s) {
          if (Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_String_CodeUnits["indexOf'"](nt)(s.pos)(s.str))(new Data_Maybe.Just(s.pos))) {
              return new Data_Either.Right({
                  result: nt,
                  suffix: {
                      str: s.str,
                      pos: s.pos + Data_String_CodeUnits.length(nt) | 0
                  }
              });
          };
          return new Data_Either.Left({
              pos: s.pos,
              error: new Text_Parsing_StringParser.ParseError("Expected '" + (nt + "'."))
          });
      };
  };
  var regex = function (pat) {
      var pattern = (function () {
          var v = Data_String_CodeUnits.stripPrefix("^")(pat);
          if (v instanceof Data_Maybe.Nothing) {
              return "^" + pat;
          };
          return pat;
      })();
      var matchRegex = function (r) {
          return function (v) {
              var remainder = Data_String_CodeUnits.drop(v.pos)(v.str);
              var v1 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Array_NonEmpty.head)(Data_String_Regex.match(r)(remainder));
              if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof Data_Maybe.Just) {
                  return new Data_Either.Right({
                      result: v1.value0.value0,
                      suffix: {
                          str: v.str,
                          pos: v.pos + Data_String_CodeUnits.length(v1.value0.value0) | 0
                      }
                  });
              };
              return new Data_Either.Left({
                  pos: v.pos,
                  error: new Text_Parsing_StringParser.ParseError("no match")
              });
          };
      };
      var v = Data_String_Regex.regex(pattern)(Data_String_Regex_Flags.noFlags);
      if (v instanceof Data_Either.Left) {
          return Text_Parsing_StringParser.fail("Text.Parsing.StringParser.String.regex': illegal regex " + pat);
      };
      if (v instanceof Data_Either.Right) {
          return matchRegex(v.value0);
      };
      throw new Error("Failed pattern match at Text.Parsing.StringParser.CodeUnits (line 127, column 3 - line 131, column 19): " + [ v.constructor.name ]);
  };
  var anyChar = function (v) {
      var v1 = Data_String_CodeUnits.charAt(v.pos)(v.str);
      if (v1 instanceof Data_Maybe.Just) {
          return new Data_Either.Right({
              result: v1.value0,
              suffix: {
                  str: v.str,
                  pos: v.pos + 1 | 0
              }
          });
      };
      if (v1 instanceof Data_Maybe.Nothing) {
          return new Data_Either.Left({
              pos: v.pos,
              error: new Text_Parsing_StringParser.ParseError("Unexpected EOF")
          });
      };
      throw new Error("Failed pattern match at Text.Parsing.StringParser.CodeUnits (line 51, column 3 - line 53, column 64): " + [ v1.constructor.name ]);
  };  
  var satisfy = function (f) {
      return Text_Parsing_StringParser["try"](Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (c) {
          var $33 = f(c);
          if ($33) {
              return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(c);
          };
          return Text_Parsing_StringParser.fail("Character " + (Data_Show.show(Data_Show.showChar)(c) + " did not satisfy predicate"));
      }));
  };
  var whiteSpace = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.many(satisfy(function (c) {
      return c === "\x0a" || (c === "\x0d" || (c === " " || c === "\x09"));
  })))(function (cs) {
      return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(Data_String_CodeUnits.singleton)(cs));
  });
  var skipSpaces = Data_Functor["void"](Text_Parsing_StringParser.functorParser)(whiteSpace);
  exports["anyChar"] = anyChar;
  exports["string"] = string;
  exports["whiteSpace"] = whiteSpace;
  exports["skipSpaces"] = skipSpaces;
  exports["regex"] = regex;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Svg.Parser"] = $PS["Svg.Parser"] || {};
  var exports = $PS["Svg.Parser"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Data_Array = $PS["Data.Array"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Text_Parsing_StringParser = $PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_CodeUnits = $PS["Text.Parsing.StringParser.CodeUnits"];
  var Text_Parsing_StringParser_Combinators = $PS["Text.Parsing.StringParser.Combinators"];                
  var SvgAttribute = (function () {
      function SvgAttribute(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SvgAttribute.create = function (value0) {
          return function (value1) {
              return new SvgAttribute(value0, value1);
          };
      };
      return SvgAttribute;
  })();
  var SvgElement = (function () {
      function SvgElement(value0) {
          this.value0 = value0;
      };
      SvgElement.create = function (value0) {
          return new SvgElement(value0);
      };
      return SvgElement;
  })();
  var SvgText = (function () {
      function SvgText(value0) {
          this.value0 = value0;
      };
      SvgText.create = function (value0) {
          return new SvgText(value0);
      };
      return SvgText;
  })();
  var SvgComment = (function () {
      function SvgComment(value0) {
          this.value0 = value0;
      };
      SvgComment.create = function (value0) {
          return new SvgComment(value0);
      };
      return SvgComment;
  })();
  var textParser = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_CodeUnits.skipSpaces)(function () {
      return Data_Functor.map(Text_Parsing_StringParser.functorParser)(SvgText.create)(Text_Parsing_StringParser_CodeUnits.regex("[^<]+"));
  });
  var mkElement = function (v) {
      return function (v1) {
          return function (v2) {
              return {
                  name: v,
                  attributes: v1,
                  children: v2
              };
          };
      };
  }; 
  var charListToString = (function () {
      var $59 = Data_Array.fromFoldable(Data_List_Types.foldableList);
      return function ($60) {
          return Data_String_CodeUnits.fromCharArray($59($60));
      };
  })();
  var commentParser = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_CodeUnits.skipSpaces)(function () {
      return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_CodeUnits.string("<!--"))(Text_Parsing_StringParser_Combinators.manyTill(Text_Parsing_StringParser_CodeUnits.anyChar)(Text_Parsing_StringParser_CodeUnits.string("-->"))))(function (comment) {
          return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(SvgComment.create(charListToString(comment)));
      });
  });
  var beforeSvgParser = Data_Functor.map(Text_Parsing_StringParser.functorParser)(charListToString)(Text_Parsing_StringParser_Combinators.manyTill(Text_Parsing_StringParser_CodeUnits.anyChar)(Text_Parsing_StringParser_Combinators.lookAhead(Text_Parsing_StringParser_CodeUnits.string("<svg"))));
  var attributeParser = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_CodeUnits.regex("[^=>/]+"))(function (k) {
      return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.option("")(Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_CodeUnits.string("=\""))(Text_Parsing_StringParser_CodeUnits.regex("[^\"]*")))(Text_Parsing_StringParser_CodeUnits.string("\""))))(function (v) {
          return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new SvgAttribute(k, v));
      });
  });
  var openingParser = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_CodeUnits.string("<")))(function () {
      return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_CodeUnits.regex("[^/> ]+"))(function (tagName) {
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_CodeUnits.skipSpaces)(Text_Parsing_StringParser_Combinators.sepEndBy(attributeParser)(Text_Parsing_StringParser_CodeUnits.whiteSpace)))(function (attributes) {
              return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(mkElement(tagName)(attributes)(Data_List_Types.Nil.value));
          });
      });
  });
  var nodeParser = Control_Lazy.defer(Text_Parsing_StringParser.lazyParser)(function (v) {
      return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Text_Parsing_StringParser["try"](textParser))(Text_Parsing_StringParser["try"](commentParser)))(elementParser);
  });
  var elementParser = Control_Lazy.defer(Text_Parsing_StringParser.lazyParser)(function (v) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_CodeUnits.skipSpaces)(function () {
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(openingParser)(closingOrChildrenParser))((function () {
              var $61 = Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser);
              return function ($62) {
                  return $61(SvgElement.create($62));
              };
          })());
      });
  });
  var closingOrChildrenParser = function (element) {
      var childrenParser = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_CodeUnits.skipSpaces)(Text_Parsing_StringParser_CodeUnits.string(">"))))(function () {
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.many(Text_Parsing_StringParser["try"](nodeParser)))(function (children) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_CodeUnits.skipSpaces)(Text_Parsing_StringParser_CodeUnits.string("</" + (element.name + ">")))))(function () {
                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)({
                      children: children,
                      attributes: element.attributes,
                      name: element.name
                  });
              });
          });
      });
      return Control_Lazy.defer(Text_Parsing_StringParser.lazyParser)(function (v) {
          return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Text_Parsing_StringParser["try"](Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_CodeUnits.skipSpaces)(Text_Parsing_StringParser_CodeUnits.string("/>")))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(element))))(childrenParser);
      });
  };
  var parseToSvgNode = function (input) {
      return Text_Parsing_StringParser.runParser(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_Combinators.option("")(Text_Parsing_StringParser["try"](beforeSvgParser)))(nodeParser))(input);
  };
  exports["SvgElement"] = SvgElement;
  exports["SvgText"] = SvgText;
  exports["SvgComment"] = SvgComment;
  exports["parseToSvgNode"] = parseToSvgNode;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Svg.Renderer.Halogen"] = $PS["Svg.Renderer.Halogen"] || {};
  var exports = $PS["Svg.Renderer.Halogen"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Svg_Parser = $PS["Svg.Parser"];
  var Text_Parsing_StringParser = $PS["Text.Parsing.StringParser"];                
  var svgAttributeToProp = function (v) {
      return Halogen_HTML_Properties.attr(v.value0)(v.value1);
  };
  var ns = "http://www.w3.org/2000/svg";
  var svgNodeToHtml = function (v) {
      if (v instanceof Svg_Parser.SvgElement) {
          return svgElementToHtml(v.value0);
      };
      if (v instanceof Svg_Parser.SvgText) {
          return Halogen_HTML_Core.text(v.value0);
      };
      if (v instanceof Svg_Parser.SvgComment) {
          return Halogen_HTML_Core.text("");
      };
      throw new Error("Failed pattern match at Svg.Renderer.Halogen (line 39, column 1 - line 39, column 49): " + [ v.constructor.name ]);
  };
  var svgElementToHtmlWithAttrs = function (ele) {
      return function (newAttrs) {
          var children = Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(svgNodeToHtml)(ele.children));
          var attrs = Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(svgAttributeToProp)(ele.attributes));
          return Halogen_HTML_Elements.elementNS(ns)(ele.name)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(attrs)(newAttrs))(children);
      };
  };
  var svgElementToHtml = function (ele) {
      return svgElementToHtmlWithAttrs(ele)([  ]);
  };
  var parse = function (input) {
      return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Show.show(Text_Parsing_StringParser.showParseError))(Data_Functor.map(Data_Either.functorEither)(svgNodeToHtml)(Svg_Parser.parseToSvgNode(input)));
  };
  exports["parse"] = parse;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Loading"] = $PS["Ocelot.Block.Loading"] || {};
  var exports = $PS["Ocelot.Block.Loading"];
  var Control_Category = $PS["Control.Category"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var Svg_Renderer_Halogen = $PS["Svg.Renderer.Halogen"];                
  var svgString = "<svg class=\"circular\" viewBox=\"25 25 50 50\">" + ("<circle class=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"4\" stroke-miterlimit=\"10\"/>" + "</svg>");
  var svgElem = Data_Either.either(Data_Function["const"](Halogen_HTML_Core.text("")))(Control_Category.identity(Control_Category.categoryFn))(Svg_Renderer_Halogen.parse(svgString));
  var spinner = function (props) {
      return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.class_("loader") ])(props))([ svgElem ]);
  };
  exports["spinner"] = spinner;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Component.Typeahead.Render"] = $PS["Ocelot.Component.Typeahead.Render"] || {};
  var exports = $PS["Ocelot.Component.Typeahead.Render"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Fuzzy = $PS["Data.Fuzzy"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var Network_RemoteData = $PS["Network.RemoteData"];
  var Ocelot_Block_Button = $PS["Ocelot.Block.Button"];
  var Ocelot_Block_Conditional = $PS["Ocelot.Block.Conditional"];
  var Ocelot_Block_Format = $PS["Ocelot.Block.Format"];
  var Ocelot_Block_Icon = $PS["Ocelot.Block.Icon"];
  var Ocelot_Block_Input = $PS["Ocelot.Block.Input"];
  var Ocelot_Block_ItemContainer = $PS["Ocelot.Block.ItemContainer"];
  var Ocelot_Block_Loading = $PS["Ocelot.Block.Loading"];
  var Ocelot_Component_Typeahead_Base = $PS["Ocelot.Component.Typeahead.Base"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var Select = $PS["Select"];
  var Select_Setters = $PS["Select.Setters"];                
  var spinner = Ocelot_Block_Loading.spinner([ Ocelot_HTML_Properties.css("w-6 text-blue-88") ]);
  var renderError = function (error) {
      return Ocelot_Block_Conditional.conditional(error)([ Ocelot_HTML_Properties.css("flex items-center mt-1") ])([ Ocelot_Block_Icon.error([ Ocelot_HTML_Properties.css("text-2xl text-yellow") ]), Halogen_HTML_Elements.p([ Ocelot_HTML_Properties.css("ml-3 text-grey-50 font-light") ])([ Halogen_HTML_Core.text("Some data could not be retrieved here.") ]) ]);
  };
  var linkClasses = function (v) {
      if (v) {
          return Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "text-grey-70", "no-underline", "font-medium" ]);
      };
      return Ocelot_Block_Format.linkClasses;
  };
  var isDisabled = (function () {
      var f = function (v) {
          if (v instanceof Halogen_VDom_DOM_Prop.Property && (v.value0 === "disabled" && v.value1 === true)) {
              return Data_HeytingAlgebra.disj(Data_HeytingAlgebra.heytingAlgebraBoolean)(true);
          };
          return Data_HeytingAlgebra.disj(Data_HeytingAlgebra.heytingAlgebraBoolean)(false);
      };
      return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(false);
  })();
  var inputProps = function (disabled) {
      return function (iprops) {
          var iprops$prime = Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.disabled(disabled), Halogen_HTML_Properties.autocomplete(false), Ocelot_HTML_Properties.css("focus:next:text-blue-88") ])(iprops);
          if (disabled) {
              return iprops$prime;
          };
          return Select_Setters.setInputProps(iprops$prime);
      };
  };
  var renderMulti = function (iprops) {
      return function (renderItem) {
          return function (renderContainer) {
              return function (st) {
                  return Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("relative") ])([ (function () {
                      var $11 = !st.disabled && Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(Data_Array["null"])(st.selected);
                      if ($11) {
                          return Halogen_HTML_Elements.a([ Ocelot_HTML_Properties.css("absolute -mt-7 pin-r underline text-grey-70 cursor-pointer"), Halogen_HTML_Events.onClick(Data_Function["const"](Data_Maybe.Just.create(Select.Action.create(Ocelot_Component_Typeahead_Base.RemoveAll.value)))) ])([ Halogen_HTML_Core.text("Remove All") ]);
                      };
                      return Halogen_HTML_Core.text("");
                  })(), Ocelot_Block_ItemContainer.selectionContainer(Data_Functor.mapFlipped(Data_Functor.functorArray)(st.selected)((function () {
                      if (st.disabled) {
                          return function ($19) {
                              return Halogen_HTML.fromPlainHTML(renderItem($19));
                          };
                      };
                      return function (selected) {
                          return Ocelot_Block_ItemContainer.selectionGroup(renderItem)([  ])([ Halogen_HTML_Events.onClick(Data_Function["const"](Data_Maybe.Just.create(Select.Action.create(new Ocelot_Component_Typeahead_Base.Remove(selected))))) ])(selected);
                      };
                  })())), Ocelot_Block_Input.inputGroup_([ Ocelot_Block_Input.inputCenter(inputProps(st.disabled)(iprops)), Ocelot_Block_Input.addonLeft_([ Ocelot_Block_Icon.search_ ]), Ocelot_Block_Input.addonCenter([ Ocelot_HTML_Properties.css((function () {
                      var $13 = Network_RemoteData.isLoading(st.items);
                      if ($13) {
                          return "";
                      };
                      return "offscreen";
                  })()) ])([ spinner ]), Ocelot_Block_Input.borderRight([ Halogen_HTML_Properties.classes(linkClasses(st.disabled)) ])([ Halogen_HTML_Core.text("Browse") ]) ]), Ocelot_Block_Conditional.conditional(Data_Eq.eq(Select.eqVisibility)(st.visibility)(Select.On.value))([ Ocelot_HTML_Properties.css("relative block") ])([ renderContainer(st) ]), renderError(Network_RemoteData.isFailure(st.items)) ]);
              };
          };
      };
  };
  var renderSearchDropdown = function (dictEq) {
      return function (resetLabel) {
          return function (label) {
              return function (renderFuzzy) {
                  return function (st) {
                      var renderReset = Ocelot_Block_ItemContainer.dropdownItem(Halogen_HTML_Elements.div)([ Halogen_HTML_Events.onClick(Data_Function["const"](Data_Maybe.Just.create(Select.Action.create(Ocelot_Component_Typeahead_Base.RemoveAll.value)))) ])([ Halogen_HTML_Core.text(resetLabel) ])(Data_Maybe.isNothing(st.selected))(false);
                      var renderInput = Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("m-4 border-b-2 border-blue-88 pb-2 flex") ])([ Ocelot_Block_Icon.search([ Ocelot_HTML_Properties.css("mr-4 text-xl text-grey-70") ]), Halogen_HTML_Elements.input(inputProps(false)([ Ocelot_HTML_Properties.css("no-outline w-full"), Halogen_HTML_Properties.placeholder("Search") ])) ]);
                      return Halogen_HTML_Elements.label([ Ocelot_HTML_Properties.css("relative") ])([ Halogen_HTML.fromPlainHTML(label), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(Data_Array.cons("min-w-80")((function () {
                          var $14 = Data_Eq.eq(Select.eqVisibility)(st.visibility)(Select.Off.value);
                          if ($14) {
                              return [ "offscreen" ];
                          };
                          return [  ];
                      })())) ])([ Ocelot_Block_ItemContainer.dropdownContainer([ renderInput, renderReset ])(renderFuzzy)((function () {
                          var $20 = Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(st.selected);
                          var $21 = Data_Newtype.unwrap(Data_Fuzzy.newtypeFuzzy);
                          return function ($22) {
                              return $20(Data_Maybe.Just.create((function (v) {
                                  return v.original;
                              })($21($22))));
                          };
                      })())(st.fuzzyItems)(st.highlightedIndex) ]) ]);
                  };
              };
          };
      };
  };
  var renderHeaderSearchDropdown = function (dictEq) {
      return function (defaultLabel) {
          return function (resetLabel) {
              return function (renderItem) {
                  return function (renderFuzzy) {
                      return function (st) {
                          var label = Halogen_HTML_Elements.span([ Ocelot_HTML_Properties.css("text-white text-3xl font-thin cursor-pointer whitespace-no-wrap") ])([ Data_Maybe.maybe(Halogen_HTML_Core.text(defaultLabel))(function ($23) {
                              return Halogen_HTML.fromPlainHTML(renderItem($23));
                          })(st.selected), Ocelot_Block_Icon.collapse([ Ocelot_HTML_Properties.css("ml-3 text-xl text-grey-50 align-middle") ]) ]);
                          return renderSearchDropdown(dictEq)(resetLabel)(label)(renderFuzzy)(st);
                      };
                  };
              };
          };
      };
  };
  var renderToolbarSearchDropdown = function (dictEq) {
      return function (defaultLabel) {
          return function (resetLabel) {
              return function (renderItem) {
                  return function (renderFuzzy) {
                      return function (st) {
                          var label = Ocelot_Block_ItemContainer.dropdownButton(Halogen_HTML_Elements.span)([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Array.cons("whitespace-no-wrap")(Ocelot_Block_Button.buttonMainClasses))(Ocelot_Block_Button.buttonClearClasses)) ])([ Data_Maybe.maybe(Halogen_HTML_Core.text(defaultLabel))(function ($24) {
                              return Halogen_HTML.fromPlainHTML(renderItem($24));
                          })(st.selected) ]);
                          return renderSearchDropdown(dictEq)(resetLabel)(label)(renderFuzzy)(st);
                      };
                  };
              };
          };
      };
  };
  var disabledClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-grey-95", "text-grey-70", "sibling:bg-grey-95", "sibling:text-grey-50", "border-t-2", "border-b-2", "font-light", "focus:no-outline", "py-2", "border-l-2", "w-full", "px-3" ]);
  var renderSingle = function (iprops) {
      return function (renderItem) {
          return function (renderContainer) {
              return function (st) {
                  var showSelected = Data_Maybe.isJust(st.selected) && Data_Eq.eq(Select.eqVisibility)(st.visibility)(Select.Off.value);
                  return Halogen_HTML_Elements.div_([ Ocelot_Block_Input["inputGroup'"](Halogen_HTML_Elements.div)([ Ocelot_HTML_Properties.css((function () {
                      if (showSelected) {
                          return "";
                      };
                      return "offscreen";
                  })()) ])([ (function () {
                      if (st.disabled) {
                          return Data_Maybe.maybe(Halogen_HTML_Core.text(""))(function (selected) {
                              return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(disabledClasses) ])([ Halogen_HTML.fromPlainHTML(renderItem(selected)) ]);
                          })(st.selected);
                      };
                      return Data_Maybe.maybe(Halogen_HTML_Core.text(""))(function (selected) {
                          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(Ocelot_Block_Input.mainLeftClasses) ])([ Ocelot_Block_ItemContainer.selectionGroup(renderItem)([  ])([ Halogen_HTML_Events.onClick(Data_Function["const"](Data_Maybe.Just.create(Select.Action.create(new Ocelot_Component_Typeahead_Base.Remove(selected))))) ])(selected) ]);
                      })(st.selected);
                  })(), Ocelot_Block_Input.borderRight([ Halogen_HTML_Properties.classes(linkClasses(st.disabled)) ])([ Halogen_HTML_Core.text("Change") ]) ]), Ocelot_Block_Input.inputGroup([ Ocelot_HTML_Properties.css((function () {
                      if (showSelected) {
                          return "offscreen";
                      };
                      return "";
                  })()) ])([ Ocelot_Block_Input.inputCenter(inputProps(st.disabled)(iprops)), Ocelot_Block_Input.addonLeft_([ Ocelot_Block_Icon.search_ ]), Ocelot_Block_Input.addonCenter([ Ocelot_HTML_Properties.css((function () {
                      var $18 = Network_RemoteData.isLoading(st.items);
                      if ($18) {
                          return "";
                      };
                      return "offscreen";
                  })()) ])([ spinner ]), Ocelot_Block_Input.borderRight([ Halogen_HTML_Properties.classes(linkClasses(st.disabled)) ])([ Halogen_HTML_Core.text("Browse") ]) ]), Ocelot_Block_Conditional.conditional(Data_Eq.eq(Select.eqVisibility)(st.visibility)(Select.On.value))([ Ocelot_HTML_Properties.css("relative block") ])([ renderContainer(st) ]), renderError(Network_RemoteData.isFailure(st.items)) ]);
              };
          };
      };
  };
  var defRenderContainer = function (renderFuzzy) {
      return function (st) {
          return Ocelot_Block_ItemContainer.itemContainer(st.highlightedIndex)(Data_Functor.map(Data_Functor.functorArray)(renderFuzzy)(st.fuzzyItems))([  ]);
      };
  };
  exports["renderSingle"] = renderSingle;
  exports["renderMulti"] = renderMulti;
  exports["defRenderContainer"] = defRenderContainer;
  exports["renderToolbarSearchDropdown"] = renderToolbarSearchDropdown;
  exports["renderHeaderSearchDropdown"] = renderHeaderSearchDropdown;
  exports["isDisabled"] = isDisabled;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Component.Typeahead"] = $PS["Ocelot.Component.Typeahead"] || {};
  var exports = $PS["Ocelot.Component.Typeahead"];
  var Data_Fuzzy = $PS["Data.Fuzzy"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Network_RemoteData = $PS["Network.RemoteData"];
  var Ocelot_Component_Typeahead_Base = $PS["Ocelot.Component.Typeahead.Base"];
  var Ocelot_Component_Typeahead_Render = $PS["Ocelot.Component.Typeahead.Render"];                
  var syncSingle = function (dictEq) {
      return function (dictMonadAff) {
          return function (v) {
              return function (props) {
                  return {
                      items: Network_RemoteData.NotAsked.value,
                      insertable: Ocelot_Component_Typeahead_Base.NotInsertable.value,
                      keepOpen: false,
                      itemToObject: v.itemToObject,
                      debounceTime: Data_Maybe.Nothing.value,
                      async: Data_Maybe.Nothing.value,
                      disabled: Ocelot_Component_Typeahead_Render.isDisabled(props),
                      render: Ocelot_Component_Typeahead_Render.renderSingle(props)((function () {
                          var $30 = Data_Fuzzy.match(false)(v.itemToObject)("");
                          return function ($31) {
                              return v.renderFuzzy($30($31));
                          };
                      })())(Ocelot_Component_Typeahead_Render.defRenderContainer(v.renderFuzzy))
                  };
              };
          };
      };
  };
  var asyncSingle = function (dictEq) {
      return function (dictMonadAff) {
          return function (v) {
              return function (props) {
                  return {
                      items: Network_RemoteData.NotAsked.value,
                      insertable: Ocelot_Component_Typeahead_Base.NotInsertable.value,
                      keepOpen: false,
                      itemToObject: v.itemToObject,
                      debounceTime: Data_Maybe.Just.create(300.0),
                      async: new Data_Maybe.Just(v.async),
                      disabled: Ocelot_Component_Typeahead_Render.isDisabled(props),
                      render: Ocelot_Component_Typeahead_Render.renderSingle(props)((function () {
                          var $34 = Data_Fuzzy.match(false)(v.itemToObject)("");
                          return function ($35) {
                              return v.renderFuzzy($34($35));
                          };
                      })())(Ocelot_Component_Typeahead_Render.defRenderContainer(v.renderFuzzy))
                  };
              };
          };
      };
  };
  var asyncMulti = function (dictEq) {
      return function (dictMonadAff) {
          return function (v) {
              return function (props) {
                  return {
                      items: Network_RemoteData.NotAsked.value,
                      insertable: Ocelot_Component_Typeahead_Base.NotInsertable.value,
                      keepOpen: true,
                      itemToObject: v.itemToObject,
                      debounceTime: Data_Maybe.Just.create(300.0),
                      async: new Data_Maybe.Just(v.async),
                      disabled: Ocelot_Component_Typeahead_Render.isDisabled(props),
                      render: Ocelot_Component_Typeahead_Render.renderMulti(props)((function () {
                          var $36 = Data_Fuzzy.match(false)(v.itemToObject)("");
                          return function ($37) {
                              return v.renderFuzzy($36($37));
                          };
                      })())(Ocelot_Component_Typeahead_Render.defRenderContainer(v.renderFuzzy))
                  };
              };
          };
      };
  };
  exports["syncSingle"] = syncSingle;
  exports["asyncSingle"] = asyncSingle;
  exports["asyncMulti"] = asyncMulti;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.Utility.Async"] = $PS["UIGuide.Utility.Async"] || {};
  var exports = $PS["UIGuide.Utility.Async"];
  var Affjax = $PS["Affjax"];
  var Affjax_ResponseFormat = $PS["Affjax.ResponseFormat"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Argonaut_Decode_Class = $PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = $PS["Data.Argonaut.Decode.Combinators"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Timer = $PS["Effect.Timer"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Network_RemoteData = $PS["Network.RemoteData"];
  var Ocelot_Block_ItemContainer = $PS["Ocelot.Block.ItemContainer"];
  var Fast = (function () {
      function Fast() {

      };
      Fast.value = new Fast();
      return Fast;
  })();
  var Slow = (function () {
      function Slow() {

      };
      Slow.value = new Slow();
      return Slow;
  })();
  var Fail = (function () {
      function Fail() {

      };
      Fail.value = new Fail();
      return Fail;
  })();
  var Location = function (x) {
      return x;
  };
  var userToObject = function (v) {
      return Foreign_Object.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("name", v.name), new Data_Tuple.Tuple("eyeColor", v.eyeColor), new Data_Tuple.Tuple("hairColor", v.hairColor), new Data_Tuple.Tuple("skinColor", v.skinColor) ]);
  };
  var stringToLocation = function (name) {
      return {
          name: name,
          population: "1"
      };
  };       
  var newtypeLocation = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Location);
  var locationToObject = function (v) {
      return Foreign_Object.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("name", v.name) ]);
  };
  var loadFromSource = function (dictMonadAff) {
      return function (v) {
          return function (search) {
              var decodeEither = Control_Bind.composeKleisliFlipped(Network_RemoteData.bindRemoteData)(v.decoder)((function () {
                  var $54 = Data_Bifunctor.bimap(Data_Either.bifunctorEither)(Affjax.printError)(function (v1) {
                      return v1.body;
                  });
                  return function ($55) {
                      return Network_RemoteData.fromEither($54($55));
                  };
              })());
              return Effect_Aff_Class.liftAff(dictMonadAff)((function () {
                  if (v.speed instanceof Fast) {
                      return Data_Functor.map(Effect_Aff.functorAff)(decodeEither)(Affjax.get(Affjax_ResponseFormat.json)(v.path + search));
                  };
                  if (v.speed instanceof Fail) {
                      return Data_Functor.map(Effect_Aff.functorAff)(decodeEither)(Affjax.get(Affjax_ResponseFormat.json)(search));
                  };
                  if (v.speed instanceof Slow) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Functor["void"](Effect_Aff.functorAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Timer.setTimeout(5000)(Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))))(function () {
                          return Data_Functor.map(Effect_Aff.functorAff)(decodeEither)(Affjax.get(Affjax_ResponseFormat.json)(v.path + search));
                      });
                  };
                  throw new Error("Failed pattern match at UIGuide.Utility.Async (line 78, column 13 - line 83, column 58): " + [ v.speed.constructor.name ]);
              })());
          };
      };
  };
  var eqUser = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x.eyeColor === y.eyeColor && x.hairColor === y.hairColor && x.name === y.name && x.skinColor === y.skinColor;
      };
  });
  var eqLocation = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x.name === y.name && x.population === y.population;
      };
  });
  var decodeUser = function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (obj) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(obj)("name"))(function (name) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(obj)("eye_color"))(function (eyeColor) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(obj)("hair_color"))(function (hairColor) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(obj)("skin_color"))(function (skinColor) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)({
                              name: name,
                              eyeColor: eyeColor,
                              hairColor: hairColor,
                              skinColor: skinColor
                          });
                      });
                  });
              });
          });
      });
  };
  var decodeResults = function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (obj) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonJson)(obj)("results"))(function (resultsJson) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonJson))(resultsJson))(function (results) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(results);
              });
          });
      });
  };
  var decodeWith = function (decoder) {
      return function (json) {
          return Network_RemoteData.fromEither(Control_Bind.bindFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(decoder))(Control_Bind.bindFlipped(Data_Either.bindEither)(decodeResults)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonJson)(json))));
      };
  };
  var users = {
      path: "https://swapi.co/api/people/?search=",
      speed: Fast.value,
      decoder: decodeWith(decodeUser)
  };               
  var decodeLocation = function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (obj) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(obj)("name"))(function (name) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(obj)("population"))(function (population) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      name: name,
                      population: population
                  });
              });
          });
      });
  };
  var locations = {
      path: "https://swapi.co/api/planets/?search=",
      speed: Fast.value,
      decoder: decodeWith(decodeLocation)
  };
  var colorToCSSColor = function (color) {
      if (color === "blond") {
          return "yellow-dark";
      };
      if (color === "blonde") {
          return "yellow-dark";
      };
      if (color === "fair") {
          return "orange-lighter";
      };
      if (color === "blue") {
          return "blue-light";
      };
      if (color === "gold") {
          return "yellow-dark";
      };
      if (color === "yellow") {
          return "yellow";
      };
      if (color === "white") {
          return "grey-lighter";
      };
      if (color === "red") {
          return "red-dark";
      };
      if (color === "brown") {
          return "orange-darker";
      };
      if (color === "light") {
          return "orange-lighter";
      };
      if (color === "grey") {
          return "grey";
      };
      if (color === "black") {
          return "black";
      };
      if (color === "auburn") {
          return "orange-darkest";
      };
      if (color === "blue-gray") {
          return "indigo-light";
      };
      if (color === "green") {
          return "green-dark";
      };
      if (color === "green-tan") {
          return "green-lighter";
      };
      if (color === "orange") {
          return "orange";
      };
      if (color === "hazel") {
          return "green-dark";
      };
      if (color === "pale") {
          return "orange-lightest";
      };
      if (color === "metal") {
          return "grey";
      };
      if (color === "dark") {
          return "yellow-darkest";
      };
      if (color === "pink") {
          return "pink-lighter";
      };
      if (color === "tan") {
          return "orange-dark";
      };
      if (color === "silver") {
          return "grey-lighter";
      };
      if (color === "brown mottle") {
          return "orange-darker";
      };
      if (color === "mottled green") {
          return "green-dark";
      };
      return "transparent";
  };
  var renderUserImg = function (v) {
      var skinColors = Data_String_Common.split(", ")(v.skinColor);
      var skinColor1 = Data_Maybe.fromMaybe("")(Data_Array.head(skinColors));
      var skinColor2 = Data_Maybe.fromMaybe(skinColor1)(Data_Array.last(skinColors));
      return Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "inline-block", "mr-3", "w-6", "h-6", "rounded-full", "overflow-hidden", "border-t-4", "border-l-2", "border-r-2", "border-" + colorToCSSColor(v.hairColor), "bg-" + colorToCSSColor(skinColor1), "relative", "shadow" ])) ])([ Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "justify-around", "pt-1" ])) ])(Data_Functor.map(Data_Functor.functorArray)(function (v1) {
          return Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "w-1", "h-1", "rounded-full", "bg-" + colorToCSSColor(v.eyeColor), "shadow-inner" ])) ])([  ]);
      })([ 1, 2 ])), Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "pin-b", "h-1", "w-full", "bg-" + colorToCSSColor(skinColor2), "absolute" ])) ])([  ]) ]);
  };
  var renderFuzzyUser = function (v) {
      return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "items-center" ])) ])([ renderUserImg(v.original), Halogen_HTML_Elements.span_(Ocelot_Block_ItemContainer.boldMatches("name")(v)) ]);
  };
  exports["users"] = users;
  exports["locations"] = locations;
  exports["loadFromSource"] = loadFromSource;
  exports["userToObject"] = userToObject;
  exports["renderFuzzyUser"] = renderFuzzyUser;
  exports["locationToObject"] = locationToObject;
  exports["stringToLocation"] = stringToLocation;
  exports["eqUser"] = eqUser;
  exports["newtypeLocation"] = newtypeLocation;
  exports["eqLocation"] = eqLocation;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.Component.ExpansionCards"] = $PS["UIGuide.Component.ExpansionCards"] || {};
  var exports = $PS["UIGuide.Component.ExpansionCards"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Function = $PS["Data.Function"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Lens_Record = $PS["Data.Lens.Record"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Network_RemoteData = $PS["Network.RemoteData"];
  var Ocelot_Block_Card = $PS["Ocelot.Block.Card"];
  var Ocelot_Block_Expandable = $PS["Ocelot.Block.Expandable"];
  var Ocelot_Block_FormField = $PS["Ocelot.Block.FormField"];
  var Ocelot_Block_Format = $PS["Ocelot.Block.Format"];
  var Ocelot_Block_Icon = $PS["Ocelot.Block.Icon"];
  var Ocelot_Block_ItemContainer = $PS["Ocelot.Block.ItemContainer"];
  var Ocelot_Block_Toggle = $PS["Ocelot.Block.Toggle"];
  var Ocelot_Component_Typeahead = $PS["Ocelot.Component.Typeahead"];
  var Ocelot_Component_Typeahead_Base = $PS["Ocelot.Component.Typeahead.Base"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var UIGuide_Block_Backdrop = $PS["UIGuide.Block.Backdrop"];
  var UIGuide_Block_Documentation = $PS["UIGuide.Block.Documentation"];
  var UIGuide_Utility_Async = $PS["UIGuide.Utility.Async"];                
  var ToggleCard = (function () {
      function ToggleCard(value0) {
          this.value0 = value0;
      };
      ToggleCard.create = function (value0) {
          return new ToggleCard(value0);
      };
      return ToggleCard;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var _singleUser = function (dictStrong) {
      return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function () {
          return "singleUser";
      }))()()(Data_Symbol.SProxy.value)(dictStrong);
  };
  var _singleLocation = function (dictStrong) {
      return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function () {
          return "singleLocation";
      }))()()(Data_Symbol.SProxy.value)(dictStrong);
  };
  var _multiUser = function (dictStrong) {
      return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function () {
          return "multiUser";
      }))()()(Data_Symbol.SProxy.value)(dictStrong);
  };
  var _multiLocation = function (dictStrong) {
      return Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function () {
          return "multiLocation";
      }))()()(Data_Symbol.SProxy.value)(dictStrong);
  };
  var _cp4 = Data_Symbol.SProxy.value;
  var _cp3 = Data_Symbol.SProxy.value;
  var _cp2 = Data_Symbol.SProxy.value;
  var _cp1 = Data_Symbol.SProxy.value;
  var cnDocumentationBlocks = function (dictMonadAff) {
      return function (st) {
          return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.customBlock_({
              header: "Expansion Cards",
              subheader: "Hide sections of UI behind a click, or allow them to be hidden with one."
          })([ UIGuide_Block_Documentation.callout_([ UIGuide_Block_Backdrop.backdropWhite([ Ocelot_HTML_Properties.css("flex-col") ])([ Ocelot_Block_Format.subHeading_([ Ocelot_Block_Icon.info([ Ocelot_HTML_Properties.css("text-yellow pr-2") ]), Halogen_HTML_Core.text("Animation Warning") ]), Ocelot_Block_Format.p_([ Halogen_HTML_Core.text("If the expansion card or any of its parents have "), Halogen_HTML_Elements.code_([ Halogen_HTML_Core.text("overflow: hidden") ]), Halogen_HTML_Core.text(" set, it may cause the collapse and expand animations to fail in some browsers, resulting in a rougher transition.") ]) ]) ]), UIGuide_Block_Documentation.callout_([ UIGuide_Block_Backdrop.backdrop_([ UIGuide_Block_Backdrop.content_([ Ocelot_Block_Card.card_([ Ocelot_Block_Expandable.heading([ Halogen_HTML_Events.onClick(Data_Function["const"](Data_Maybe.Just.create(new ToggleCard(function (dictStrong) {
              return _singleLocation(dictStrong);
          })))), Ocelot_Block_Expandable.status(st.singleLocation) ])([ Ocelot_Block_Format.subHeading_([ Halogen_HTML_Core.text("Locations") ]), Ocelot_Block_Format.p_([ Halogen_HTML_Core.text("Here are some location typeaheads for you. Initially hidden from view since you may not be interested in them.") ]) ]), Ocelot_Block_Expandable.content_(st.singleLocation)([ Ocelot_Block_FormField.field_({
              label: Halogen_HTML_Core.text("Primary Location"),
              helpText: [ Halogen_HTML_Core.text("Search your favorite destination.") ],
              error: [  ],
              inputId: "location"
          })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "cp3";
          }))(Data_Ord.ordInt)(_cp3)(0)(Ocelot_Component_Typeahead_Base.single(UIGuide_Utility_Async.eqLocation)(dictMonadAff))(Ocelot_Component_Typeahead.asyncSingle(UIGuide_Utility_Async.eqLocation)(dictMonadAff)({
              renderFuzzy: (function () {
                  var $23 = Ocelot_Block_ItemContainer.boldMatches("name");
                  return function ($24) {
                      return Halogen_HTML_Elements.span_($23($24));
                  };
              })(),
              itemToObject: UIGuide_Utility_Async.locationToObject,
              async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.locations)
          })([ Halogen_HTML_Properties.placeholder("Search locations..."), Halogen_HTML_Properties.id_("location") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Ocelot_Block_FormField.field_({
              label: Halogen_HTML_Core.text("Secondary Location"),
              helpText: [ Halogen_HTML_Core.text("Search your favorite destination.") ],
              error: [  ],
              inputId: "location-hydrated"
          })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "cp3";
          }))(Data_Ord.ordInt)(_cp3)(1)(Ocelot_Component_Typeahead_Base.single(UIGuide_Utility_Async.eqLocation)(dictMonadAff))(Ocelot_Component_Typeahead.asyncSingle(UIGuide_Utility_Async.eqLocation)(dictMonadAff)({
              renderFuzzy: (function () {
                  var $25 = Ocelot_Block_ItemContainer.boldMatches("name");
                  return function ($26) {
                      return Halogen_HTML_Elements.span_($25($26));
                  };
              })(),
              itemToObject: UIGuide_Utility_Async.locationToObject,
              async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.locations)
          })([ Halogen_HTML_Properties.placeholder("Search locations..."), Halogen_HTML_Properties.id_("location-hydrated") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]) ]), UIGuide_Block_Backdrop.content_([ Ocelot_Block_Card.card_([ Ocelot_Block_Expandable.heading([ Halogen_HTML_Events.onClick(Data_Function["const"](Data_Maybe.Just.create(new ToggleCard(function (dictStrong) {
              return _singleUser(dictStrong);
          })))), Ocelot_Block_Expandable.status(st.singleUser) ])([ Ocelot_Block_Format.subHeading_([ Halogen_HTML_Core.text("Users") ]) ]), Ocelot_Block_Expandable.content_(st.singleUser)([ Ocelot_Block_FormField.field_({
              label: Halogen_HTML_Core.text("Primary User"),
              helpText: [ Halogen_HTML_Core.text("Search your favorite companion.") ],
              error: [  ],
              inputId: "user"
          })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "cp1";
          }))(Data_Ord.ordInt)(_cp1)(0)(Ocelot_Component_Typeahead_Base.single(UIGuide_Utility_Async.eqUser)(dictMonadAff))(Ocelot_Component_Typeahead.asyncSingle(UIGuide_Utility_Async.eqUser)(dictMonadAff)({
              renderFuzzy: UIGuide_Utility_Async.renderFuzzyUser,
              itemToObject: UIGuide_Utility_Async.userToObject,
              async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.users)
          })([ Halogen_HTML_Properties.placeholder("Search users..."), Halogen_HTML_Properties.id_("user") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Ocelot_Block_FormField.field_({
              label: Halogen_HTML_Core.text("Secondary User"),
              helpText: [ Halogen_HTML_Core.text("Search your favorite companion.") ],
              error: [  ],
              inputId: "user-hydrated"
          })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "cp1";
          }))(Data_Ord.ordInt)(_cp1)(1)(Ocelot_Component_Typeahead_Base.single(UIGuide_Utility_Async.eqUser)(dictMonadAff))(Ocelot_Component_Typeahead.asyncSingle(UIGuide_Utility_Async.eqUser)(dictMonadAff)({
              renderFuzzy: UIGuide_Utility_Async.renderFuzzyUser,
              itemToObject: UIGuide_Utility_Async.userToObject,
              async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.users)
          })([ Halogen_HTML_Properties.placeholder("Search users..."), Halogen_HTML_Properties.id_("user-hydrated") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]) ]) ]) ]) ]), UIGuide_Block_Documentation.block_({
              header: "Expansion Cards - Custom",
              subheader: "Take control of how the expansion toggle looks and behaves."
          })([ UIGuide_Block_Backdrop.backdrop_([ UIGuide_Block_Backdrop.content_([ Ocelot_Block_Card.card_([ Ocelot_Block_Format.subHeading_([ Halogen_HTML_Core.text("Optimization Rules Engine") ]), Ocelot_Block_Format.p_([ Halogen_HTML_Core.text("Unlock even more optimizations with customizable controls and preferences. You'll be able to tailor optimizations with greater precision towards achieving your goal. Best suited for campaigns with flexible budgets per campaign, instead use the budget optimization setting located on the Spend Tab off the Campaign Form.") ]), Ocelot_Block_FormField.field_({
              label: Halogen_HTML_Core.text("Enabled"),
              helpText: [  ],
              error: [  ],
              inputId: "enable-locations"
          })([ Ocelot_Block_Toggle.toggle([ Halogen_HTML_Properties.id_("enable-locations"), Halogen_HTML_Properties.checked(Ocelot_Block_Expandable.toBoolean(st.multiLocation)), Halogen_HTML_Events.onChange(Data_Function["const"](Data_Maybe.Just.create(new ToggleCard(function (dictStrong) {
              return _multiLocation(dictStrong);
          })))) ]) ]), Ocelot_Block_Expandable.content_(st.multiLocation)([ Ocelot_Block_FormField.field_({
              label: Halogen_HTML_Core.text("Targeted Locations"),
              helpText: [ Halogen_HTML_Core.text("Search your top destinations.") ],
              error: [  ],
              inputId: "locations"
          })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "cp4";
          }))(Data_Ord.ordInt)(_cp4)(0)(Ocelot_Component_Typeahead_Base.multi(UIGuide_Utility_Async.eqLocation)(dictMonadAff))(Ocelot_Component_Typeahead.asyncMulti(UIGuide_Utility_Async.eqLocation)(dictMonadAff)({
              renderFuzzy: (function () {
                  var $27 = Ocelot_Block_ItemContainer.boldMatches("name");
                  return function ($28) {
                      return Halogen_HTML_Elements.span_($27($28));
                  };
              })(),
              itemToObject: UIGuide_Utility_Async.locationToObject,
              async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.locations)
          })([ Halogen_HTML_Properties.placeholder("Search locations..."), Halogen_HTML_Properties.id_("locations") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Ocelot_Block_FormField.field_({
              label: Halogen_HTML_Core.text("Excluded Locations"),
              helpText: [ Halogen_HTML_Core.text("Search your top destinations.") ],
              error: [  ],
              inputId: "locations"
          })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "cp4";
          }))(Data_Ord.ordInt)(_cp4)(1)(Ocelot_Component_Typeahead_Base.multi(UIGuide_Utility_Async.eqLocation)(dictMonadAff))(Ocelot_Component_Typeahead.asyncMulti(UIGuide_Utility_Async.eqLocation)(dictMonadAff)({
              renderFuzzy: (function () {
                  var $29 = Ocelot_Block_ItemContainer.boldMatches("name");
                  return function ($30) {
                      return Halogen_HTML_Elements.span_($29($30));
                  };
              })(),
              itemToObject: UIGuide_Utility_Async.locationToObject,
              async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.locations)
          })([ Halogen_HTML_Properties.placeholder("Search locations..."), Halogen_HTML_Properties.id_("locations") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]) ]), UIGuide_Block_Backdrop.content_([ Ocelot_Block_Card.card_([ Ocelot_Block_Format.subHeading_([ Halogen_HTML_Core.text("Optimization Rules Engine") ]), Ocelot_Block_Format.p_([ Halogen_HTML_Core.text("Unlock even more optimizations with customizable controls and preferences. You'll be able to tailor optimizations with greater precision towards achieving your goal. Best suited for campaigns with flexible budgets per campaign, instead use the budget optimization setting located on the Spend Tab off the Campaign Form.") ]), Ocelot_Block_FormField.field_({
              label: Halogen_HTML_Core.text("Enabled"),
              helpText: [  ],
              error: [  ],
              inputId: "enable-users"
          })([ Ocelot_Block_Toggle.toggle([ Halogen_HTML_Properties.id_("enable-users"), Halogen_HTML_Properties.checked(Ocelot_Block_Expandable.toBoolean(st.multiUser)), Halogen_HTML_Events.onChange(Data_Function["const"](Data_Maybe.Just.create(new ToggleCard(function (dictStrong) {
              return _multiUser(dictStrong);
          })))) ]) ]), Ocelot_Block_Expandable.content_(st.multiUser)([ Ocelot_Block_FormField.field_({
              label: Halogen_HTML_Core.text("Targeted Users"),
              helpText: [ Halogen_HTML_Core.text("Search your top companions.") ],
              error: [  ],
              inputId: "users"
          })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "cp2";
          }))(Data_Ord.ordInt)(_cp2)(0)(Ocelot_Component_Typeahead_Base.multi(UIGuide_Utility_Async.eqUser)(dictMonadAff))(Ocelot_Component_Typeahead.asyncMulti(UIGuide_Utility_Async.eqUser)(dictMonadAff)({
              renderFuzzy: UIGuide_Utility_Async.renderFuzzyUser,
              itemToObject: UIGuide_Utility_Async.userToObject,
              async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.users)
          })([ Halogen_HTML_Properties.placeholder("Search users..."), Halogen_HTML_Properties.id_("users") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Ocelot_Block_FormField.field_({
              label: Halogen_HTML_Core.text("Excluded Users"),
              helpText: [ Halogen_HTML_Core.text("Search your top companions.") ],
              error: [  ],
              inputId: "users-hydrated"
          })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "cp2";
          }))(Data_Ord.ordInt)(_cp2)(1)(Ocelot_Component_Typeahead_Base.multi(UIGuide_Utility_Async.eqUser)(dictMonadAff))(Ocelot_Component_Typeahead.asyncMulti(UIGuide_Utility_Async.eqUser)(dictMonadAff)({
              renderFuzzy: UIGuide_Utility_Async.renderFuzzyUser,
              itemToObject: UIGuide_Utility_Async.userToObject,
              async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.users)
          })([ Halogen_HTML_Properties.placeholder("Search users..."), Halogen_HTML_Properties.id_("users-hydrated") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]) ]) ]) ]) ]);
      };
  };
  var component = function (dictMonadAff) {
      var render = cnDocumentationBlocks(dictMonadAff);
      var initialState = function (v) {
          return {
              singleLocation: Ocelot_Block_Expandable.Collapsed.value,
              singleUser: Ocelot_Block_Expandable.Expanded.value,
              multiLocation: Ocelot_Block_Expandable.Collapsed.value,
              multiUser: Ocelot_Block_Expandable.Expanded.value
          };
      };
      var handleAction = function (v) {
          if (v instanceof ToggleCard) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                  return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Lens_Setter.over(v.value0(Data_Profunctor_Strong.strongFn))(Data_HeytingAlgebra.not(Ocelot_Block_Expandable.heytingAlgebraStatus))(st));
              });
          };
          if (v instanceof Initialize) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.queryAll()(new Data_Symbol.IsSymbol(function () {
                  return "cp1";
              }))(Data_Ord.ordInt)(_cp1)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(Network_RemoteData.Loading.value))))(function () {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.queryAll()(new Data_Symbol.IsSymbol(function () {
                      return "cp2";
                  }))(Data_Ord.ordInt)(_cp2)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(Network_RemoteData.Loading.value))))(function () {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.queryAll()(new Data_Symbol.IsSymbol(function () {
                          return "cp3";
                      }))(Data_Ord.ordInt)(_cp3)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(Network_RemoteData.Loading.value))))(function () {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.queryAll()(new Data_Symbol.IsSymbol(function () {
                              return "cp4";
                          }))(Data_Ord.ordInt)(_cp4)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(Network_RemoteData.Loading.value))))(function () {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(UIGuide_Utility_Async.loadFromSource(Effect_Aff_Class.monadAffAff)(UIGuide_Utility_Async.locations)("")))(function (remoteLocations) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                      if (remoteLocations instanceof Network_RemoteData.Success) {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.queryAll()(new Data_Symbol.IsSymbol(function () {
                                              return "cp3";
                                          }))(Data_Ord.ordInt)(_cp3)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(remoteLocations))))(function () {
                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.queryAll()(new Data_Symbol.IsSymbol(function () {
                                                  return "cp4";
                                              }))(Data_Ord.ordInt)(_cp4)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(remoteLocations))))(function () {
                                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                              });
                                          });
                                      };
                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                  })())(function () {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(UIGuide_Utility_Async.loadFromSource(Effect_Aff_Class.monadAffAff)(UIGuide_Utility_Async.users)("")))(function (remoteUsers) {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                              if (remoteUsers instanceof Network_RemoteData.Success) {
                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.queryAll()(new Data_Symbol.IsSymbol(function () {
                                                      return "cp1";
                                                  }))(Data_Ord.ordInt)(_cp1)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(remoteUsers))))(function () {
                                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.queryAll()(new Data_Symbol.IsSymbol(function () {
                                                          return "cp2";
                                                      }))(Data_Ord.ordInt)(_cp2)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(remoteUsers))))(function () {
                                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                                      });
                                                  });
                                              };
                                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                          })())(function () {
                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(UIGuide_Utility_Async.loadFromSource(Effect_Aff_Class.monadAffAff)(UIGuide_Utility_Async.locations)("an")))(function (selectedLocations) {
                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                                      if (selectedLocations instanceof Network_RemoteData.Success) {
                                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                                                              return "cp3";
                                                          }))(Data_Ord.ordInt)(_cp3)(1)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceSelected.create(Data_Array.head(selectedLocations.value0)))))(function () {
                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                                                                  return "cp4";
                                                              }))(Data_Ord.ordInt)(_cp4)(3)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceSelected.create(Data_Array.take(4)(selectedLocations.value0)))))(function () {
                                                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                                              });
                                                          });
                                                      };
                                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                                  })())(function () {
                                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(UIGuide_Utility_Async.loadFromSource(Effect_Aff_Class.monadAffAff)(UIGuide_Utility_Async.users)("an")))(function (selectedUsers) {
                                                          if (selectedUsers instanceof Network_RemoteData.Success) {
                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                                                                  return "cp1";
                                                              }))(Data_Ord.ordInt)(_cp1)(1)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceSelected.create(Data_Array.head(selectedUsers.value0)))))(function () {
                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                                                                      return "cp2";
                                                                  }))(Data_Ord.ordInt)(_cp2)(3)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceSelected.create(Data_Array.take(4)(selectedUsers.value0)))))(function () {
                                                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                                                  });
                                                              });
                                                          };
                                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                                      });
                                                  });
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              });
          };
          throw new Error("Failed pattern match at UIGuide.Component.ExpansionCards (line 90, column 20 - line 131, column 33): " + [ v.constructor.name ]);
      };
      return Halogen_Component.mkComponent({
          initialState: initialState,
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction,
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: new Data_Maybe.Just(Initialize.value),
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Checkbox"] = $PS["Ocelot.Block.Checkbox"] || {};
  var exports = $PS["Ocelot.Block.Checkbox"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];                
  var labelClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "flex-row", "inline-block", "py-2", "cursor-pointer", "text-black-20", "items-center", "text-left" ]);
  var inputClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "!disabled:sibling:bg-white", "disabled:sibling:bg-grey-95", "checked:sibling:before:opacity-100", "checked:sibling:before:scale-1", "checked:!disabled:sibling:border-blue-88", "focus:sibling:border-blue-88", "!checked:sibling:before:opacity-0", "!checked:sibling:before:scale-0", "!focus:hover:!checked:!disabled:sibling:border-grey-70", "focus:sibling:shadow", "checked:!disabled:sibling:before:bg-blue-88", "checked:disabled:sibling:before:bg-grey-80", "checked:disabled:sibling:border-grey-80", "offscreen", "checked:sibling:after:opacity-100", "checked:sibling:after:scale-1", "!checked:sibling:after:opacity-0", "!checked:sibling:after:scale-0" ]);
  var checkboxClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "relative", "content-box", "border-2", "border-solid", "h-5", "w-5", "flex-none", "no-content", "mr-3", "rounded", "before:transition-1/4-bounce", "before:absolute", "before:h-full", "before:w-full", "before:no-content", "after:transition-1/4-bounce", "after:absolute", "after:w-full", "after:h-2", "after:border-l-2", "after:border-b-2", "after:border-white", "after:no-content", "after:rotate-315", "after:shadow" ]);
  var checkbox = function (iprops) {
      return function (inprops) {
          return function (html) {
              return Halogen_HTML_Elements.label(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(labelClasses) ])(iprops))(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Elements.input(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(inputClasses), Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputCheckbox.value) ])(inprops)), Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes(checkboxClasses) ])([  ]) ])(html));
          };
      };
  };
  var checkbox_ = checkbox([  ]);
  exports["checkbox"] = checkbox;
  exports["checkbox_"] = checkbox_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Radio"] = $PS["Ocelot.Block.Radio"] || {};
  var exports = $PS["Ocelot.Block.Radio"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];                
  var radioClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "inline-flex", "justify-center", "items-center", "content-box", "border-2", "border-solid", "h-4", "w-4", "p-1", "flex-none", "no-content", "rounded-full", "mr-3", "before:transition-1/4-bounce", "before:h-full", "before:w-full", "before:bg-blue-88", "before:no-content", "before:rounded-full", "before:shadow" ]);
  var labelClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "flex-row", "inline-block", "py-2", "cursor-pointer", "text-black-20", "items-center", "text-left" ]);
  var inputClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "!disabled:sibling:bg-white", "disabled:sibling:bg-grey-95", "checked:sibling:before:opacity-100", "checked:sibling:before:scale-1", "checked:!disabled:sibling:border-blue-88", "focus:sibling:border-blue-88", "!checked:sibling:before:opacity-0", "!checked:sibling:before:scale-0", "!focus:hover:!checked:!disabled:sibling:border-grey-70", "focus:sibling:shadow", "checked:!disabled:sibling:before:bg-blue-88", "checked:disabled:sibling:before:bg-grey-80", "checked:disabled:sibling:border-grey-80", "offscreen" ]);
  var radio = function (iprops) {
      return function (inprops) {
          return function (html) {
              return Halogen_HTML_Elements.label(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(labelClasses) ])(iprops))(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Elements.input(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(inputClasses), Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputRadio.value) ])(inprops)), Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes(radioClasses) ])([  ]) ])(html));
          };
      };
  };
  var radio_ = radio([  ]);
  exports["radio"] = radio;
  exports["radio_"] = radio_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.Component.FormControl"] = $PS["UIGuide.Component.FormControl"] || {};
  var exports = $PS["UIGuide.Component.FormControl"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Function = $PS["Data.Function"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Ocelot_Block_Checkbox = $PS["Ocelot.Block.Checkbox"];
  var Ocelot_Block_FormField = $PS["Ocelot.Block.FormField"];
  var Ocelot_Block_Format = $PS["Ocelot.Block.Format"];
  var Ocelot_Block_Icon = $PS["Ocelot.Block.Icon"];
  var Ocelot_Block_Radio = $PS["Ocelot.Block.Radio"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var UIGuide_Block_Backdrop = $PS["UIGuide.Block.Backdrop"];
  var UIGuide_Block_Documentation = $PS["UIGuide.Block.Documentation"];                
  var HandleFormHeaderClick = (function () {
      function HandleFormHeaderClick(value0) {
          this.value0 = value0;
      };
      HandleFormHeaderClick.create = function (value0) {
          return new HandleFormHeaderClick(value0);
      };
      return HandleFormHeaderClick;
  })();
  var ToggleFormPanel = (function () {
      function ToggleFormPanel(value0) {
          this.value0 = value0;
      };
      ToggleFormPanel.create = function (value0) {
          return new ToggleFormPanel(value0);
      };
      return ToggleFormPanel;
  })();
  var component = (function () {
      var render = function (state) {
          var content = UIGuide_Block_Backdrop.content([ Ocelot_HTML_Properties.css("flex") ]);
          var accessibilityCallout = UIGuide_Block_Documentation.callout_([ UIGuide_Block_Backdrop.backdropWhite([ Ocelot_HTML_Properties.css("flex-col") ])([ Ocelot_Block_Format.subHeading_([ Ocelot_Block_Icon.tip([ Ocelot_HTML_Properties.css("text-yellow pr-2") ]), Halogen_HTML_Core.text("Accessibility Note") ]), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Make sure to use "), Halogen_HTML_Elements.code_([ Halogen_HTML_Core.text("FormField.fieldset") ]), Halogen_HTML_Core.text(" instead of "), Halogen_HTML_Elements.code_([ Halogen_HTML_Core.text("FormField.field") ]), Halogen_HTML_Core.text(" with groups of radios and checkboxes.") ]) ]) ]);
          return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.customBlock_({
              header: "Checkboxes",
              subheader: "Select one or more options."
          })([ accessibilityCallout, UIGuide_Block_Documentation.callout_([ UIGuide_Block_Backdrop.backdrop_([ content([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Vertical List") ]), Ocelot_Block_FormField.fieldset_({
              label: Halogen_HTML_Core.text("Platform"),
              inputId: "checkbox-vertical",
              helpText: [ Halogen_HTML_Core.text("Where do you want your ad to appear?") ],
              error: [  ]
          })([ Halogen_HTML_Elements.div_([ Ocelot_Block_Checkbox.checkbox_([ Halogen_HTML_Properties.name("platform"), Halogen_HTML_Properties.checked(true) ])([ Halogen_HTML_Core.text("Facebook") ]), Ocelot_Block_Checkbox.checkbox_([ Halogen_HTML_Properties.name("platform") ])([ Halogen_HTML_Core.text("Instagram") ]), Ocelot_Block_Checkbox.checkbox_([ Halogen_HTML_Properties.name("platform") ])([ Halogen_HTML_Core.text("Twitter") ]) ]) ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Horizontal List") ]), Ocelot_Block_FormField.fieldset_({
              label: Halogen_HTML_Core.text("Platform"),
              inputId: "checkbox-horizontal",
              helpText: [ Halogen_HTML_Core.text("Where do you want your ad to appear?") ],
              error: [  ]
          })([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex") ])([ Ocelot_Block_Checkbox.checkbox([ Ocelot_HTML_Properties.css("pr-6") ])([ Halogen_HTML_Properties.name("platform"), Halogen_HTML_Properties.checked(true) ])([ Halogen_HTML_Core.text("Facebook") ]), Ocelot_Block_Checkbox.checkbox([ Ocelot_HTML_Properties.css("pr-6") ])([ Halogen_HTML_Properties.name("platform") ])([ Halogen_HTML_Core.text("Instagram") ]), Ocelot_Block_Checkbox.checkbox([ Ocelot_HTML_Properties.css("pr-6") ])([ Halogen_HTML_Properties.name("platform") ])([ Halogen_HTML_Core.text("Twitter") ]) ]) ]) ]) ]) ]) ]), UIGuide_Block_Documentation.callout_([ UIGuide_Block_Backdrop.backdrop_([ content([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Disabled Vertical List") ]), Ocelot_Block_FormField.fieldset_({
              label: Halogen_HTML_Core.text("Platform"),
              inputId: "checkbox-vertical-disabled",
              helpText: [ Halogen_HTML_Core.text("Where do you want your ad to appear?") ],
              error: [  ]
          })([ Halogen_HTML_Elements.div_([ Ocelot_Block_Checkbox.checkbox_([ Halogen_HTML_Properties.name("platform-disabled"), Halogen_HTML_Properties.checked(true), Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Facebook") ]), Ocelot_Block_Checkbox.checkbox_([ Halogen_HTML_Properties.name("platform-disabled"), Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Instagram") ]), Ocelot_Block_Checkbox.checkbox_([ Halogen_HTML_Properties.name("platform-disabled"), Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Twitter") ]) ]) ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Disabled Horizontal List") ]), Ocelot_Block_FormField.fieldset_({
              label: Halogen_HTML_Core.text("Platform"),
              inputId: "checkbox-horizontal-disabled",
              helpText: [ Halogen_HTML_Core.text("Where do you want your ad to appear?") ],
              error: [  ]
          })([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex") ])([ Ocelot_Block_Checkbox.checkbox([ Ocelot_HTML_Properties.css("pr-6") ])([ Halogen_HTML_Properties.name("platform-disabled"), Halogen_HTML_Properties.checked(true), Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Facebook") ]), Ocelot_Block_Checkbox.checkbox([ Ocelot_HTML_Properties.css("pr-6") ])([ Halogen_HTML_Properties.name("platform-disabled"), Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Instagram") ]), Ocelot_Block_Checkbox.checkbox([ Ocelot_HTML_Properties.css("pr-6") ])([ Halogen_HTML_Properties.name("platform-disabled"), Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Twitter") ]) ]) ]) ]) ]) ]) ]) ]), UIGuide_Block_Documentation.customBlock_({
              header: "Radios",
              subheader: "Select one option."
          })([ accessibilityCallout, UIGuide_Block_Documentation.callout_([ UIGuide_Block_Backdrop.backdrop_([ content([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Vertical List") ]), Ocelot_Block_FormField.fieldset_({
              label: Halogen_HTML_Core.text("Optimization Goal"),
              inputId: "radio-vertical",
              helpText: [ Halogen_HTML_Core.text("What do you want to optimize for?") ],
              error: [  ]
          })([ Halogen_HTML_Elements.div_([ Ocelot_Block_Radio.radio_([ Halogen_HTML_Properties.name("goal"), Halogen_HTML_Properties.checked(true) ])([ Halogen_HTML_Core.text("Page Likes") ]), Ocelot_Block_Radio.radio_([ Halogen_HTML_Properties.name("goal") ])([ Halogen_HTML_Core.text("Impressions") ]), Ocelot_Block_Radio.radio_([ Halogen_HTML_Properties.name("goal") ])([ Halogen_HTML_Core.text("Page Engagement") ]) ]) ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Horizontal List") ]), Ocelot_Block_FormField.fieldset_({
              label: Halogen_HTML_Core.text("Previews"),
              inputId: "radio-horizontal",
              helpText: [ Halogen_HTML_Core.text("What kind of preview do you want to see?") ],
              error: [  ]
          })([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex") ])([ Ocelot_Block_Radio.radio([ Ocelot_HTML_Properties.css("pr-6") ])([ Halogen_HTML_Properties.name("preview"), Halogen_HTML_Properties.checked(true) ])([ Halogen_HTML_Core.text("Desktop") ]), Ocelot_Block_Radio.radio([ Ocelot_HTML_Properties.css("pr-6") ])([ Halogen_HTML_Properties.name("preview") ])([ Halogen_HTML_Core.text("Story") ]), Ocelot_Block_Radio.radio([ Ocelot_HTML_Properties.css("pr-6") ])([ Halogen_HTML_Properties.name("preview") ])([ Halogen_HTML_Core.text("Mobile") ]) ]) ]) ]) ]) ]) ]), UIGuide_Block_Documentation.callout_([ UIGuide_Block_Backdrop.backdrop_([ content([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Disabled Vertical List") ]), Ocelot_Block_FormField.fieldset_({
              label: Halogen_HTML_Core.text("Optimization Goal"),
              inputId: "radio-vertical-disabled",
              helpText: [ Halogen_HTML_Core.text("What do you want to optimize for?") ],
              error: [  ]
          })([ Halogen_HTML_Elements.div_([ Ocelot_Block_Radio.radio_([ Halogen_HTML_Properties.name("goal-disabled"), Halogen_HTML_Properties.checked(true), Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Page Likes") ]), Ocelot_Block_Radio.radio_([ Halogen_HTML_Properties.name("goal-disabled"), Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Impressions") ]), Ocelot_Block_Radio.radio_([ Halogen_HTML_Properties.name("goal-disabled"), Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Page Engagement") ]) ]) ]) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Horizontal List") ]), Ocelot_Block_FormField.fieldset_({
              label: Halogen_HTML_Core.text("Disabled Previews"),
              inputId: "radio-horizontal-disabled",
              helpText: [ Halogen_HTML_Core.text("What kind of preview do you want to see?") ],
              error: [  ]
          })([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex") ])([ Ocelot_Block_Radio.radio([ Ocelot_HTML_Properties.css("pr-6") ])([ Halogen_HTML_Properties.name("preview-disabled"), Halogen_HTML_Properties.checked(true), Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Desktop") ]), Ocelot_Block_Radio.radio([ Ocelot_HTML_Properties.css("pr-6") ])([ Halogen_HTML_Properties.name("preview-disabled"), Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Story") ]), Ocelot_Block_Radio.radio([ Ocelot_HTML_Properties.css("pr-6") ])([ Halogen_HTML_Properties.name("preview-disabled"), Halogen_HTML_Properties.disabled(true) ])([ Halogen_HTML_Core.text("Mobile") ]) ]) ]) ]) ]) ]) ]) ]) ]);
      };
      var handleAction = function (v) {
          if (v instanceof HandleFormHeaderClick) {
              return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Effect_Console.log("submit form"));
          };
          if (v instanceof ToggleFormPanel) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $5 = {};
                      for (var $6 in v1) {
                          if ({}.hasOwnProperty.call(v1, $6)) {
                              $5[$6] = v1[$6];
                          };
                      };
                      $5.formPanelIsOpen = !state.formPanelIsOpen;
                      return $5;
                  });
              });
          };
          throw new Error("Failed pattern match at UIGuide.Component.FormControl (line 41, column 20 - line 47, column 70): " + [ v.constructor.name ]);
      };
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"]({
              formPanelIsOpen: false
          }),
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction,
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  })();
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.Component.Icons"] = $PS["UIGuide.Component.Icons"] || {};
  var exports = $PS["UIGuide.Component.Icons"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_Block_Format = $PS["Ocelot.Block.Format"];
  var Ocelot_Block_Icon = $PS["Ocelot.Block.Icon"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var UIGuide_Block_Backdrop = $PS["UIGuide.Block.Backdrop"];
  var UIGuide_Block_Documentation = $PS["UIGuide.Block.Documentation"];                
  var component = (function () {
      var renderIcon = function (v) {
          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("mx-6") ])([ UIGuide_Block_Documentation.callout_([ UIGuide_Block_Backdrop.backdrop_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.p(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.subHeadingClasses) ])([ Halogen_HTML_Properties.class_("min-w-9 justify-center") ]))([ v.value1 ]) ]) ]) ]), Ocelot_Block_Format.caption([ Halogen_HTML_Properties.class_("text-center") ])([ Halogen_HTML_Core.text(v.value0) ]) ]);
      };
      var render = function (v) {
          return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.customBlock_({
              header: "Social Icons",
              subheader: "Represent social brands."
          })([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex flex-wrap -mx-6 justify-start") ])(Data_Functor.map(Data_Functor.functorArray)(renderIcon)([ Data_Tuple.Tuple.create("Facebook")(Ocelot_Block_Icon.facebook([ Ocelot_HTML_Properties.css("text-facebook-blue") ])), Data_Tuple.Tuple.create("Google")(Ocelot_Block_Icon.google([ Ocelot_HTML_Properties.css("text-google-blue") ])), Data_Tuple.Tuple.create("Instagram")(Ocelot_Block_Icon.instagram([ Ocelot_HTML_Properties.css("text-instagram-purple") ])), Data_Tuple.Tuple.create("LinkedIn")(Ocelot_Block_Icon.linkedIn([ Ocelot_HTML_Properties.css("text-linkedin-blue") ])), Data_Tuple.Tuple.create("Pinterest")(Ocelot_Block_Icon.pinterest([ Ocelot_HTML_Properties.css("text-pinterest-red") ])), Data_Tuple.Tuple.create("Snapchat")(Ocelot_Block_Icon.snapchat_), Data_Tuple.Tuple.create("Taboola")(Ocelot_Block_Icon.taboola([ Ocelot_HTML_Properties.css("text-taboola-blue") ])), Data_Tuple.Tuple.create("Tiktok")(Ocelot_Block_Icon.tiktok([ Ocelot_HTML_Properties.css("text-tiktok-green") ])), Data_Tuple.Tuple.create("Twitter")(Ocelot_Block_Icon.twitter([ Ocelot_HTML_Properties.css("text-twitter-blue") ])), Data_Tuple.Tuple.create("Youtube")(Ocelot_Block_Icon.youtube([ Ocelot_HTML_Properties.css("text-youtube-red") ])) ])) ]), UIGuide_Block_Documentation.customBlock_({
              header: "Utility Icons",
              subheader: "Represent UI actions."
          })([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex flex-wrap -mx-6 justify-start") ])(Data_Functor.map(Data_Functor.functorArray)(renderIcon)([ new Data_Tuple.Tuple("Settings", Ocelot_Block_Icon.settings_), new Data_Tuple.Tuple("Share", Ocelot_Block_Icon.share_), new Data_Tuple.Tuple("Download", Ocelot_Block_Icon.download_), new Data_Tuple.Tuple("Search", Ocelot_Block_Icon.search_), new Data_Tuple.Tuple("Refresh", Ocelot_Block_Icon.refresh_), new Data_Tuple.Tuple("Back", Ocelot_Block_Icon.back_), new Data_Tuple.Tuple("Menu", Ocelot_Block_Icon.menu_), new Data_Tuple.Tuple("Options", Ocelot_Block_Icon.options_), new Data_Tuple.Tuple("Close", Ocelot_Block_Icon.close_), new Data_Tuple.Tuple("Plus", Ocelot_Block_Icon.plus_), new Data_Tuple.Tuple("Delete", Ocelot_Block_Icon.delete_), new Data_Tuple.Tuple("Delete Circle", Ocelot_Block_Icon.deleteCircle_), new Data_Tuple.Tuple("Add", Ocelot_Block_Icon.add_), Data_Tuple.Tuple.create("Added")(Ocelot_Block_Icon.added([ Ocelot_HTML_Properties.css("text-blue-88") ])), new Data_Tuple.Tuple("Arrow Up", Ocelot_Block_Icon.arrowUp_), new Data_Tuple.Tuple("Arrow Down", Ocelot_Block_Icon.arrowDown_), new Data_Tuple.Tuple("Arrow Left", Ocelot_Block_Icon.arrowLeft_), new Data_Tuple.Tuple("Arrow Right", Ocelot_Block_Icon.arrowRight_), new Data_Tuple.Tuple("Collapse", Ocelot_Block_Icon.collapse_), new Data_Tuple.Tuple("Expand", Ocelot_Block_Icon.expand_), new Data_Tuple.Tuple("Chevron Left", Ocelot_Block_Icon.chevronLeft_), new Data_Tuple.Tuple("Chevron Right", Ocelot_Block_Icon.chevronRight_), new Data_Tuple.Tuple("Carat Up", Ocelot_Block_Icon.caratUp_), new Data_Tuple.Tuple("Carat Down", Ocelot_Block_Icon.caratDown_), new Data_Tuple.Tuple("Carat Left", Ocelot_Block_Icon.caratLeft_), new Data_Tuple.Tuple("Carat Right", Ocelot_Block_Icon.caratRight_), Data_Tuple.Tuple.create("Error")(Ocelot_Block_Icon.error([ Ocelot_HTML_Properties.css("text-red") ])), Data_Tuple.Tuple.create("Tip")(Ocelot_Block_Icon.tip([ Ocelot_HTML_Properties.css("text-yellow") ])), Data_Tuple.Tuple.create("Info")(Ocelot_Block_Icon.info([ Ocelot_HTML_Properties.css("text-blue") ])), Data_Tuple.Tuple.create("Success")(Ocelot_Block_Icon.success([ Ocelot_HTML_Properties.css("text-green") ])), new Data_Tuple.Tuple("Timeline", Ocelot_Block_Icon.timeline_), new Data_Tuple.Tuple("Navigate", Ocelot_Block_Icon.navigate_), new Data_Tuple.Tuple("Data Sources", Ocelot_Block_Icon.dataSources_) ])) ]) ]);
      };
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": Halogen_Component.mkEval(Halogen_Component.defaultEval)
      });
  })();
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Part.Modal"] = $PS["Ocelot.Part.Modal"] || {};
  var exports = $PS["Ocelot.Part.Modal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Ocelot_Block_Format = $PS["Ocelot.Block.Format"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];
  var Web_UIEvent_KeyboardEvent = $PS["Web.UIEvent.KeyboardEvent"];
  var Web_UIEvent_KeyboardEvent_EventTypes = $PS["Web.UIEvent.KeyboardEvent.EventTypes"];                
  var whenClose = function (dictMonadAff) {
      return function (ev) {
          return function (sid) {
              return function (close) {
                  return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Web_UIEvent_KeyboardEvent.code(ev) === "Escape")(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.unsubscribe(sid))(function () {
                      return close;
                  }));
              };
          };
      };
  };
  var outerHeaderClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-white", "w-full", "px-6", "items-center", "flex", "rounded-t" ]);
  var modalClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "fixed", "pin-x", "pin-t", "my-20", "m-auto", "max-w-lg", "slide-down", "z-10" ]);
  var innerHeaderClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "w-full", "items-center", "mx-auto", "flex" ]);
  var initializeWith = function (dictMonadAff) {
      return function (toAction) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window)))(function (document) {
              return Halogen_Query_HalogenM.subscribe(Halogen_Query_EventSource.eventListenerEventSource(dictMonadAff)(Web_UIEvent_KeyboardEvent_EventTypes.keydown)(Web_HTML_HTMLDocument.toEventTarget(document))(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(toAction)(Web_UIEvent_KeyboardEvent.fromEvent)));
          });
      };
  };
  var headerClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "h-24", "flex" ]);
  var header = function (props) {
      return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(headerClasses) ])([ Halogen_HTML_Elements.header([ Halogen_HTML_Properties.classes(outerHeaderClasses) ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(innerHeaderClasses) ])([ Ocelot_Block_Format.subHeading([ Ocelot_HTML_Properties.css("mb-0") ])(props.title) ]) ])(props.buttons)) ]);
  };
  var bodyClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "relative", "bg-grey-95", "overflow-auto", "max-h-full", "w-full", "flex-col", "flex", "rounded-b" ]);
  var body = function (iprops) {
      return function (html) {
          return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(bodyClasses) ])(iprops))(html);
      };
  };
  var body_ = body([  ]);
  var backgroundClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "fixed", "pin", "bg-black-modal-a90", "fade-in", "z-10" ]);
  var modal = function (click) {
      return function (iprops) {
          return function (html) {
              return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(backgroundClasses), Halogen_HTML_Events.onClick((function () {
                  var $2 = Data_Function["const"](click);
                  return function ($3) {
                      return Data_Maybe.Just.create($2($3));
                  };
              })()) ])([  ]), Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(modalClasses) ])(iprops))(html) ]);
          };
      };
  };
  var modal_ = function (query) {
      return modal(query)([  ]);
  };
  exports["initializeWith"] = initializeWith;
  exports["whenClose"] = whenClose;
  exports["modal_"] = modal_;
  exports["body_"] = body_;
  exports["header"] = header;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.Component.Modals"] = $PS["UIGuide.Component.Modals"] || {};
  var exports = $PS["UIGuide.Component.Modals"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Ocelot_Block_Button = $PS["Ocelot.Block.Button"];
  var Ocelot_Block_Card = $PS["Ocelot.Block.Card"];
  var Ocelot_Block_FormField = $PS["Ocelot.Block.FormField"];
  var Ocelot_Block_Format = $PS["Ocelot.Block.Format"];
  var Ocelot_Block_ItemContainer = $PS["Ocelot.Block.ItemContainer"];
  var Ocelot_Component_Typeahead = $PS["Ocelot.Component.Typeahead"];
  var Ocelot_Component_Typeahead_Base = $PS["Ocelot.Component.Typeahead.Base"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var Ocelot_Part_Modal = $PS["Ocelot.Part.Modal"];
  var UIGuide_Block_Backdrop = $PS["UIGuide.Block.Backdrop"];
  var UIGuide_Block_Documentation = $PS["UIGuide.Block.Documentation"];
  var UIGuide_Utility_Async = $PS["UIGuide.Utility.Async"];                
  var Open = (function () {
      function Open() {

      };
      Open.value = new Open();
      return Open;
  })();
  var Close = (function () {
      function Close() {

      };
      Close.value = new Close();
      return Close;
  })();
  var HandleKey = (function () {
      function HandleKey(value0) {
          this.value0 = value0;
      };
      HandleKey.create = function (value0) {
          return new HandleKey(value0);
      };
      return HandleKey;
  })();
  var _cp2 = Data_Symbol.SProxy.value;
  var _cp1 = Data_Symbol.SProxy.value;
  var component = function (dictMonadAff) {
      var renderModal = Ocelot_Part_Modal.modal_(Close.value)([ Ocelot_Part_Modal.header({
          buttons: [ Halogen_HTML_Elements.a([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Ocelot_Block_Format.linkDarkClasses)([ "mr-4" ])), Halogen_HTML_Events.onClick(Data_Function["const"](new Data_Maybe.Just(Close.value))) ])([ Halogen_HTML_Core.text("Cancel") ]), Ocelot_Block_Button.buttonPrimary([ Halogen_HTML_Events.onClick(Data_Function["const"](new Data_Maybe.Just(Close.value))) ])([ Halogen_HTML_Core.text("Submit") ]) ],
          title: [ Halogen_HTML_Core.text("Editing") ]
      }), Ocelot_Part_Modal.body_([ Ocelot_Block_Card.card([ Halogen_HTML_Properties.class_("flex-1 m-10") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Standard") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Locations"),
          helpText: [ Halogen_HTML_Core.text("Search your top destinations.") ],
          error: [  ],
          inputId: "locations"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp1";
      }))(Data_Ord.ordUnit)(_cp1)(Data_Unit.unit)(Ocelot_Component_Typeahead_Base.multi(UIGuide_Utility_Async.eqLocation)(dictMonadAff))(Ocelot_Component_Typeahead.asyncMulti(UIGuide_Utility_Async.eqLocation)(dictMonadAff)({
          renderFuzzy: (function () {
              var $6 = Ocelot_Block_ItemContainer.boldMatches("name");
              return function ($7) {
                  return Halogen_HTML_Elements.span_($6($7));
              };
          })(),
          itemToObject: UIGuide_Utility_Async.locationToObject,
          async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.locations)
      })([ Halogen_HTML_Properties.placeholder("Search locations..."), Halogen_HTML_Properties.id_("locations") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Standard Hydrated") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Users"),
          helpText: [ Halogen_HTML_Core.text("Search your favorite companion.") ],
          error: [  ],
          inputId: "users"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp2";
      }))(Data_Ord.ordUnit)(_cp2)(Data_Unit.unit)(Ocelot_Component_Typeahead_Base.multi(UIGuide_Utility_Async.eqUser)(dictMonadAff))(Ocelot_Component_Typeahead.asyncMulti(UIGuide_Utility_Async.eqUser)(dictMonadAff)({
          renderFuzzy: UIGuide_Utility_Async.renderFuzzyUser,
          itemToObject: UIGuide_Utility_Async.userToObject,
          async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.users)
      })([ Halogen_HTML_Properties.placeholder("Search users..."), Halogen_HTML_Properties.id_("users") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]) ]);
      var render = function (st) {
          var isOpen = Data_Maybe.isJust(st);
          return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.block_({
              header: "Modals",
              subheader: "Forest's favorite UI implement"
          })([ UIGuide_Block_Backdrop.backdrop_([ UIGuide_Block_Backdrop.content([ Ocelot_HTML_Properties.css("mt-0 text-center") ])([ Ocelot_Block_Button.button([ Halogen_HTML_Events.onClick(Data_Function["const"](new Data_Maybe.Just(Open.value))) ])([ Halogen_HTML_Core.text("Open Modal") ]) ]) ]) ]), (function () {
              if (isOpen) {
                  return renderModal;
              };
              return Halogen_HTML_Core.text("");
          })() ]);
      };
      var handleAction = function (v) {
          if (v instanceof HandleKey) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (id) {
                  return Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function (sid) {
                      return Ocelot_Part_Modal.whenClose(dictMonadAff)(v.value0)(sid)(handleAction(Close.value));
                  })(id);
              });
          };
          if (v instanceof Open) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Ocelot_Part_Modal.initializeWith(dictMonadAff)(function ($8) {
                  return Data_Maybe.Just.create(HandleKey.create($8));
              }))(function (id) {
                  return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(new Data_Maybe.Just(id));
              });
          };
          if (v instanceof Close) {
              return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Maybe.Nothing.value);
          };
          throw new Error("Failed pattern match at UIGuide.Component.Modals (line 57, column 20 - line 67, column 22): " + [ v.constructor.name ]);
      };
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"](Data_Maybe.Nothing.value),
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction,
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Progress"] = $PS["Ocelot.Block.Progress"] || {};
  var exports = $PS["Ocelot.Block.Progress"];
  var Data_Ratio = $PS["Data.Ratio"];
  var Data_Show = $PS["Data.Show"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];                
  var bar = function (r) {
      return function (divProps) {
          return function (spanProps) {
              var percentage = (Data_Ratio.numerator(r) / Data_Ratio.denominator(r)) * 100.0;
              var value = Data_Show.show(Data_Show.showNumber)((function () {
                  var $0 = percentage > 100.0;
                  if ($0) {
                      return 100.0;
                  };
                  return percentage;
              })());
              return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Ocelot_HTML_Properties.css("bg-grey-light relative") ])(divProps))([ Halogen_HTML_Elements.span(Ocelot_HTML_Properties.appendIProps([ Ocelot_HTML_Properties.css("block"), Halogen_HTML_Properties.attr("style")("width: " + (value + "%; text-indent: -9999px;")) ])(spanProps))([ Halogen_HTML_Core.text("Progress: " + value) ]) ]);
          };
      };
  };
  exports["bar"] = bar;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Table"] = $PS["Ocelot.Block.Table"] || {};
  var exports = $PS["Ocelot.Block.Table"];
  var Data_Functor = $PS["Data.Functor"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Ocelot_Block_Builder = $PS["Ocelot.Block.Builder"];                
  var tableClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "w-full", "text-left", "border-collapse" ]);
  var table = Ocelot_Block_Builder.blockBuilder(Halogen_HTML_Elements.table)(tableClasses);
  var table_ = table([  ]);
  var row_ = Halogen_HTML_Elements.tr_;
  var headerClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-grey-90", "py-4", "px-5", "font-medium", "text-black-20" ]);
  var header = Ocelot_Block_Builder.blockBuilder(Halogen_HTML_Elements.th)(headerClasses);
  var header_ = header([  ]);
  var cellClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-white", "p-5", "min-h-20", "border-b", "border-grey-95" ]);
  var cell = Ocelot_Block_Builder.blockBuilder(Halogen_HTML_Elements.td)(cellClasses);
  var cell_ = cell([  ]);
  exports["table_"] = table_;
  exports["row_"] = row_;
  exports["header"] = header;
  exports["header_"] = header_;
  exports["cell"] = cell;
  exports["cell_"] = cell_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.Component.Table"] = $PS["UIGuide.Component.Table"] || {};
  var exports = $PS["UIGuide.Component.Table"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ratio = $PS["Data.Ratio"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Ocelot_Block_Button = $PS["Ocelot.Block.Button"];
  var Ocelot_Block_Checkbox = $PS["Ocelot.Block.Checkbox"];
  var Ocelot_Block_Icon = $PS["Ocelot.Block.Icon"];
  var Ocelot_Block_Progress = $PS["Ocelot.Block.Progress"];
  var Ocelot_Block_Table = $PS["Ocelot.Block.Table"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var UIGuide_Block_Backdrop = $PS["UIGuide.Block.Backdrop"];
  var UIGuide_Block_Documentation = $PS["UIGuide.Block.Documentation"];                
  var tableData = [ {
      name: "This is what a back arrow looks like",
      icon: Ocelot_Block_Icon.back_
  }, {
      name: "This is what a refresh arrow looks like",
      icon: Ocelot_Block_Icon.refresh_
  }, {
      name: "This is what a settings cog looks like",
      icon: Ocelot_Block_Icon.settings_
  }, {
      name: "This is what a share button looks like",
      icon: Ocelot_Block_Icon.share_
  }, {
      name: "This is what an error badge looks like",
      icon: Ocelot_Block_Icon.error([ Ocelot_HTML_Properties.css("text-red") ])
  }, {
      name: "This is what a tip bulb looks like",
      icon: Ocelot_Block_Icon.tip([ Ocelot_HTML_Properties.css("text-yellow") ])
  }, {
      name: "This is what an info badge looks like",
      icon: Ocelot_Block_Icon.info([ Ocelot_HTML_Properties.css("text-blue") ])
  }, {
      name: "This is what a success badge looks like",
      icon: Ocelot_Block_Icon.success([ Ocelot_HTML_Properties.css("text-green") ])
  }, {
      name: "This is what the Facebook icon looks like",
      icon: Ocelot_Block_Icon.facebook([ Ocelot_HTML_Properties.css("text-fb-blue") ])
  }, {
      name: "This is what the Instagram icon looks like",
      icon: Ocelot_Block_Icon.instagram([ Ocelot_HTML_Properties.css("text-ig-brown") ])
  }, {
      name: "This is what the Twitter icon looks like",
      icon: Ocelot_Block_Icon.twitter([ Ocelot_HTML_Properties.css("text-tw-blue") ])
  }, {
      name: "This is what a progress bar looks like",
      icon: Ocelot_Block_Progress.bar(Data_Ratio.reduce(Data_Ord.ordNumber)(Data_EuclideanRing.euclideanRingNumber)(3.0)(5.0))([ Ocelot_HTML_Properties.css("w-2/3 h-2") ])([ Ocelot_HTML_Properties.css("bg-blue h-2") ])
  }, {
      name: "This is what a progress bar with a top caption looks like",
      icon: Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.p([ Ocelot_HTML_Properties.css("text-sm pb-2") ])([ Halogen_HTML_Core.text("60% of campaign spent") ]), Ocelot_Block_Progress.bar(Data_Ratio.reduce(Data_Ord.ordNumber)(Data_EuclideanRing.euclideanRingNumber)(3.0)(5.0))([ Ocelot_HTML_Properties.css("w-2/3 h-2") ])([ Ocelot_HTML_Properties.css("bg-blue h-2") ]) ])
  } ];
  var component = (function () {
      var render = function (v) {
          var renderHeader = Ocelot_Block_Table.row_([ Ocelot_Block_Table.header([ Ocelot_HTML_Properties.css("w-10") ])([ Halogen_HTML_Core.text("") ]), Ocelot_Block_Table.header_([ Halogen_HTML_Core.text("Icon") ]), Ocelot_Block_Table.header([ Ocelot_HTML_Properties.css("w-2/3 text-left") ])([ Halogen_HTML_Core.text("Description") ]), Ocelot_Block_Table.header_([ Halogen_HTML_Core.text("") ]) ]);
          var renderData = function (v1) {
              return [ Ocelot_Block_Table.cell_([ Ocelot_Block_Checkbox.checkbox_([  ])([  ]) ]), Ocelot_Block_Table.cell([ Ocelot_HTML_Properties.css("text-2xl") ])([ v1.icon ]), Ocelot_Block_Table.cell([ Ocelot_HTML_Properties.css("text-left") ])([ Halogen_HTML_Core.text(v1.name) ]), Ocelot_Block_Table.cell([ Ocelot_HTML_Properties.css("text-right") ])([ Ocelot_Block_Button.button_([ Halogen_HTML_Core.text("Do Nothing") ]) ]) ];
          };
          var renderBody = Data_Functor.map(Data_Functor.functorArray)(Ocelot_Block_Table.row_)(Data_Functor.map(Data_Functor.functorArray)(renderData)(tableData));
          var renderTable = Ocelot_Block_Table.table_(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ renderHeader ])(renderBody));
          return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.block_({
              header: "Table",
              subheader: "Tabular Data"
          })([ UIGuide_Block_Backdrop.backdrop_([ renderTable ]) ]) ]);
      };
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": Halogen_Component.mkEval(Halogen_Component.defaultEval)
      });
  })();
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Component.SearchBar"] = $PS["Ocelot.Component.SearchBar"] || {};
  var exports = $PS["Ocelot.Component.SearchBar"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var DOM_HTML_Indexed_ButtonType = $PS["DOM.HTML.Indexed.ButtonType"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_AVar = $PS["Effect.Aff.AVar"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Ocelot_Block_Icon = $PS["Ocelot.Block.Icon"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var Web_Event_Event = $PS["Web.Event.Event"];
  var Web_UIEvent_MouseEvent = $PS["Web.UIEvent.MouseEvent"];
  var Searched = (function () {
      function Searched(value0) {
          this.value0 = value0;
      };
      Searched.create = function (value0) {
          return new Searched(value0);
      };
      return Searched;
  })();
  var Clear = (function () {
      function Clear(value0) {
          this.value0 = value0;
      };
      Clear.create = function (value0) {
          return new Clear(value0);
      };
      return Clear;
  })();
  var Search = (function () {
      function Search(value0) {
          this.value0 = value0;
      };
      Search.create = function (value0) {
          return new Search(value0);
      };
      return Search;
  })();
  var Open = (function () {
      function Open() {

      };
      Open.value = new Open();
      return Open;
  })();
  var Blur = (function () {
      function Blur() {

      };
      Blur.value = new Blur();
      return Blur;
  })();
  var render = function (dictMonadAff) {
      return function (v) {
          var keepOpenClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)((function () {
              if (v.keepOpen) {
                  return [ "hidden" ];
              };
              return [  ];
          })());
          var inputClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "no-outline", "flex-1", "bg-transparent", "h-full", "transition-1/4" ]);
          var ifOpen = function (openClasses) {
              return function (closedClasses) {
                  return Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)((function () {
                      if (v.open) {
                          return openClasses;
                      };
                      return closedClasses;
                  })());
              };
          };
          var inputCondClasses = ifOpen([ "w-full" ])([ "w-0" ]);
          var iconCondClasses = ifOpen([ "text-grey-50", "mb-0", "mt-0" ])([ "text-grey-70", "-mb-1", "mt-1" ]);
          var iconClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "pr-3", "text-2xl", "group-hover:text-grey-50", "transition-1/4" ]);
          var containerCondClasses = ifOpen([ "max-w-160", "border-blue-88" ])([ "max-w-12", "border-transparent", "cursor-pointer" ]);
          var containerClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "no-outline", "items-stretch", "transition-1/4", "border-b-2", "group" ]);
          var buttonCondClasses = ifOpen([ "opacity-100", "visible" ])([ "opacity-0", "invisible" ]);
          var buttonClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "no-outline", "text-grey-70", "hover:text-grey-50", "text-xs", "transition-1/4", "flex-shrink" ]);
          return Halogen_HTML_Elements.label([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(containerClasses)(containerCondClasses)), Halogen_HTML_Events.onClick((function () {
              var $75 = Data_Function["const"](Open.value);
              return function ($76) {
                  return Data_Maybe.Just.create($75($76));
              };
          })()) ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(iconClasses)(iconCondClasses)) ])([ Ocelot_Block_Icon.search_ ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-grow") ])([ Halogen_HTML_Elements.input([ Halogen_HTML_Events.onValueInput(function ($77) {
              return Data_Maybe.Just.create(Search.create($77));
          }), Halogen_HTML_Properties.placeholder("Search"), Halogen_HTML_Properties.value(v.query), Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(inputClasses)(inputCondClasses)), Halogen_HTML_Events.onBlur((function () {
              var $78 = Data_Function["const"](Blur.value);
              return function ($79) {
                  return Data_Maybe.Just.create($78($79));
              };
          })()), Halogen_HTML_Properties.tabIndex(0) ]) ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function ($80) {
              return Data_Maybe.Just.create(Clear.create($80));
          }), Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropButtonType)(DOM_HTML_Indexed_ButtonType.ButtonButton.value), Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonClasses)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonCondClasses)(keepOpenClasses))) ])([ Ocelot_Block_Icon.delete_ ]) ]);
      };
  };
  var openIfHasQuery = function (dictMonadState) {
      return function (q) {
          var $29 = Data_String_Common["null"](q);
          if ($29) {
              return Control_Applicative.pure((dictMonadState.Monad0()).Applicative0())(Data_Unit.unit);
          };
          return Control_Monad_State_Class.modify_(dictMonadState)(function (v) {
              var $30 = {};
              for (var $31 in v) {
                  if ({}.hasOwnProperty.call(v, $31)) {
                      $30[$31] = v[$31];
                  };
              };
              $30.open = true;
              return $30;
          });
      };
  };
  var handleQuery = function (dictMonadAff) {
      return function (v) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
              var $34 = {};
              for (var $35 in v1) {
                  if ({}.hasOwnProperty.call(v1, $35)) {
                      $34[$35] = v1[$35];
                  };
              };
              $34.query = v.value0;
              return $34;
          }))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(openIfHasQuery(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0))(function () {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value1));
              });
          });
      };
  };
  var closeIfNullQuery = function (dictMonadState) {
      return function (q) {
          var $39 = Data_String_Common["null"](q);
          if ($39) {
              return Control_Monad_State_Class.modify_(dictMonadState)(function (st) {
                  var $40 = {};
                  for (var $41 in st) {
                      if ({}.hasOwnProperty.call(st, $41)) {
                          $40[$41] = st[$41];
                      };
                  };
                  $40.open = st.keepOpen;
                  return $40;
              });
          };
          return Control_Applicative.pure((dictMonadState.Monad0()).Applicative0())(Data_Unit.unit);
      };
  };
  var handleAction = function (dictMonadAff) {
      return function (v) {
          if (v instanceof Open) {
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  var $44 = {};
                  for (var $45 in v1) {
                      if ({}.hasOwnProperty.call(v1, $45)) {
                          $44[$45] = v1[$45];
                      };
                  };
                  $44.open = true;
                  return $44;
              });
          };
          if (v instanceof Blur) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  return closeIfNullQuery(Halogen_Query_HalogenM.monadStateHalogenM)(v1.query);
              });
          };
          if (v instanceof Clear) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_Event_Event.stopPropagation(Web_UIEvent_MouseEvent.toEvent(v.value0))))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                      var $49 = {};
                      for (var $50 in st) {
                          if ({}.hasOwnProperty.call(st, $50)) {
                              $49[$50] = st[$50];
                          };
                      };
                      $49.query = "";
                      $49.open = st.keepOpen;
                      return $49;
                  }))(function () {
                      return Halogen_Query_HalogenM.raise(new Searched(""));
                  });
              });
          };
          if (v instanceof Search) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  var $53 = {};
                  for (var $54 in v1) {
                      if ({}.hasOwnProperty.call(v1, $54)) {
                          $53[$54] = v1[$54];
                      };
                  };
                  $53.query = v.value0;
                  return $53;
              }))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(openIfHasQuery(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0))(function () {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                          if (st.debouncer instanceof Data_Maybe.Nothing) {
                              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(Data_Unit.unit)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff_AVar.empty))(function ($$var) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff.forkAff(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(st.debounceTime))(function () {
                                      return Effect_Aff_AVar.put(v.value0)($$var);
                                  }))))(function (fiber) {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.fork(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff_AVar.take($$var)))(function (val) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                              var $57 = {};
                                              for (var $58 in v1) {
                                                  if ({}.hasOwnProperty.call(v1, $58)) {
                                                      $57[$58] = v1[$58];
                                                  };
                                              };
                                              $57.debouncer = Data_Maybe.Nothing.value;
                                              return $57;
                                          }))(function () {
                                              return Halogen_Query_HalogenM.raise(new Searched(val));
                                          });
                                      })))(function () {
                                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                              var $60 = {};
                                              for (var $61 in v1) {
                                                  if ({}.hasOwnProperty.call(v1, $61)) {
                                                      $60[$61] = v1[$61];
                                                  };
                                              };
                                              $60.debouncer = new Data_Maybe.Just({
                                                  "var": $$var,
                                                  fiber: fiber
                                              });
                                              return $60;
                                          });
                                      });
                                  });
                              }));
                          };
                          if (st.debouncer instanceof Data_Maybe.Just) {
                              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(Data_Unit.unit)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff.killFiber(Effect_Exception.error("Debounce restarted"))(st.debouncer.value0.fiber)))(function () {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff.forkAff(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(st.debounceTime))(function () {
                                      return Effect_Aff_AVar.put(v.value0)(st["debouncer"]["value0"]["var"]);
                                  }))))(function (fiber$prime) {
                                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                          var $63 = {};
                                          for (var $64 in v1) {
                                              if ({}.hasOwnProperty.call(v1, $64)) {
                                                  $63[$64] = v1[$64];
                                              };
                                          };
                                          $63.debouncer = new Data_Maybe.Just({
                                              "var": st["debouncer"]["value0"]["var"],
                                              fiber: fiber$prime
                                          });
                                          return $63;
                                      });
                                  });
                              }));
                          };
                          throw new Error("Failed pattern match at Ocelot.Component.SearchBar (line 118, column 5 - line 138, column 63): " + [ st.debouncer.constructor.name ]);
                      });
                  });
              });
          };
          throw new Error("Failed pattern match at Ocelot.Component.SearchBar (line 100, column 16 - line 138, column 63): " + [ v.constructor.name ]);
      };
  };
  var component = function (dictMonadAff) {
      var initialState = function (v) {
          return {
              query: "",
              debouncer: Data_Maybe.Nothing.value,
              debounceTime: Data_Maybe.fromMaybe(0.0)(v.debounceTime),
              open: false,
              keepOpen: false
          };
      };
      return Halogen_Component.mkComponent({
          initialState: initialState,
          render: render(dictMonadAff),
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction(dictMonadAff),
              handleQuery: handleQuery(dictMonadAff),
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.Component.TextFields"] = $PS["UIGuide.Component.TextFields"] || {};
  var exports = $PS["UIGuide.Component.TextFields"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Ocelot_Block_Button = $PS["Ocelot.Block.Button"];
  var Ocelot_Block_Card = $PS["Ocelot.Block.Card"];
  var Ocelot_Block_FormField = $PS["Ocelot.Block.FormField"];
  var Ocelot_Block_Format = $PS["Ocelot.Block.Format"];
  var Ocelot_Block_Icon = $PS["Ocelot.Block.Icon"];
  var Ocelot_Block_Input = $PS["Ocelot.Block.Input"];
  var Ocelot_Block_Loading = $PS["Ocelot.Block.Loading"];
  var Ocelot_Component_SearchBar = $PS["Ocelot.Component.SearchBar"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var UIGuide_Block_Backdrop = $PS["UIGuide.Block.Backdrop"];
  var UIGuide_Block_Documentation = $PS["UIGuide.Block.Documentation"];                
  var HandleSearch = (function () {
      function HandleSearch(value0) {
          this.value0 = value0;
      };
      HandleSearch.create = function (value0) {
          return new HandleSearch(value0);
      };
      return HandleSearch;
  })();
  var _search = Data_Symbol.SProxy.value;
  var cnDocumentationBlocks = function (dictMonadAff) {
      var content = UIGuide_Block_Backdrop.content([ Ocelot_HTML_Properties.css("flex") ]);
      return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.block_({
          header: "Text Fields",
          subheader: "Captures string input."
      })([ UIGuide_Block_Backdrop.backdrop_([ content([ Ocelot_Block_Card.card([ Halogen_HTML_Properties.class_("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Static") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Email*"),
          helpText: [ Halogen_HTML_Core.text("Add the email of the End Advertiser.") ],
          error: [  ],
          inputId: "email"
      })([ Ocelot_Block_Input.input([ Halogen_HTML_Properties.placeholder("address@gmail.com"), Halogen_HTML_Properties.id_("email") ]) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Error") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Email*"),
          helpText: [ Halogen_HTML_Core.text("Add the email of the End Advertiser.") ],
          error: [ Halogen_HTML_Elements.ul_(Data_Functor.map(Data_Functor.functorArray)((function () {
              var $8 = Control_Applicative.pure(Control_Applicative.applicativeArray);
              return function ($9) {
                  return Halogen_HTML_Elements.li_($8(Halogen_HTML_Core.text($9)));
              };
          })())([ "This field is required", "Must be a valid email" ])) ],
          inputId: "email-error"
      })([ Ocelot_Block_Input.input([ Halogen_HTML_Properties.placeholder("address@gmail.com"), Halogen_HTML_Properties.id_("email-error") ]) ]) ]) ]), content([ Ocelot_Block_Card.card([ Halogen_HTML_Properties.class_("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Hydrated") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Email*"),
          helpText: [ Halogen_HTML_Core.text("Add the email of the End Advertiser.") ],
          error: [  ],
          inputId: "email-hydrated"
      })([ Ocelot_Block_Input.input([ Halogen_HTML_Properties.value("jeff@citizennet.com"), Halogen_HTML_Properties.id_("email-hydrated") ]) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Disabled") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Email*"),
          helpText: [ Halogen_HTML_Core.text("Add the email of the End Advertiser.") ],
          error: [  ],
          inputId: "email-disabled"
      })([ Ocelot_Block_Input.input([ Halogen_HTML_Properties.value("jeff@citizennet.com"), Halogen_HTML_Properties.id_("email-disabled"), Halogen_HTML_Properties.disabled(true) ]) ]) ]) ]) ]) ]), UIGuide_Block_Documentation.block_({
          header: "Text Fields - Right Addon",
          subheader: "Captures string input while indicating to user useful information about the input type."
      })([ UIGuide_Block_Backdrop.backdrop_([ content([ Ocelot_Block_Card.card([ Halogen_HTML_Properties.class_("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Static") ]), Ocelot_Block_FormField.fieldSmall_({
          label: Halogen_HTML_Core.text("Daily Goal"),
          helpText: [ Halogen_HTML_Core.text("Desired daily spend as percentage of total budget.") ],
          error: [  ],
          inputId: "daily-goal"
      })([ Ocelot_Block_Input.percentage_([ Halogen_HTML_Properties.id_("daily-goal") ]) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Error") ]), Ocelot_Block_FormField.fieldSmall_({
          label: Halogen_HTML_Core.text("Daily Goal"),
          helpText: [ Halogen_HTML_Core.text("Desired daily spend as percentage of total budget.") ],
          error: [ Halogen_HTML_Core.text("Must be between 0 and 100") ],
          inputId: "daily-goal-error"
      })([ Ocelot_Block_Input.percentage_([ Halogen_HTML_Properties.value("200"), Halogen_HTML_Properties.id_("daily-goal-error") ]) ]) ]) ]), content([ Ocelot_Block_Card.card([ Halogen_HTML_Properties.class_("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Hydrated") ]), Ocelot_Block_FormField.fieldSmall_({
          label: Halogen_HTML_Core.text("Daily Goal"),
          helpText: [ Halogen_HTML_Core.text("Desired daily spend as percentage of total budget.") ],
          error: [  ],
          inputId: "daily-goal-hydrated"
      })([ Ocelot_Block_Input.percentage_([ Halogen_HTML_Properties.value("25"), Halogen_HTML_Properties.id_("daily-goal-hydrated") ]) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Disabled") ]), Ocelot_Block_FormField.fieldSmall_({
          label: Halogen_HTML_Core.text("Daily Goal"),
          helpText: [ Halogen_HTML_Core.text("Desired daily spend as percentage of total budget.") ],
          error: [  ],
          inputId: "daily-goal-disabled"
      })([ Ocelot_Block_Input.percentage_([ Halogen_HTML_Properties.value("25"), Halogen_HTML_Properties.id_("daily-goal-disabled"), Halogen_HTML_Properties.disabled(true) ]) ]) ]) ]) ]) ]), UIGuide_Block_Documentation.block_({
          header: "Text Fields - Left Addon",
          subheader: "Captures string input while indicating to user useful information about the input type."
      })([ UIGuide_Block_Backdrop.backdrop_([ content([ Ocelot_Block_Card.card([ Halogen_HTML_Properties.class_("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Static") ]), Ocelot_Block_FormField.fieldSmall_({
          label: Halogen_HTML_Core.text("Budget*"),
          helpText: [ Halogen_HTML_Core.text("Total amount for campaign to spend.") ],
          error: [  ],
          inputId: "budget"
      })([ Ocelot_Block_Input.currency_([ Halogen_HTML_Properties.id_("budget") ]) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Error") ]), Ocelot_Block_FormField.fieldSmall_({
          label: Halogen_HTML_Core.text("Budget*"),
          helpText: [ Halogen_HTML_Core.text("Total amount for campaign to spend.") ],
          error: [ Halogen_HTML_Core.text("This field is required.") ],
          inputId: "budget-error"
      })([ Ocelot_Block_Input.currency_([ Halogen_HTML_Properties.id_("budget-error") ]) ]) ]) ]), content([ Ocelot_Block_Card.card([ Halogen_HTML_Properties.class_("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Hydrated") ]), Ocelot_Block_FormField.fieldSmall_({
          label: Halogen_HTML_Core.text("Budget*"),
          helpText: [ Halogen_HTML_Core.text("Total amount for campaign to spend.") ],
          error: [  ],
          inputId: "budget-hydrated"
      })([ Ocelot_Block_Input.currency_([ Halogen_HTML_Properties.value("50,000"), Halogen_HTML_Properties.id_("budget-hydrated") ]) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Disabled") ]), Ocelot_Block_FormField.fieldSmall_({
          label: Halogen_HTML_Core.text("Budget*"),
          helpText: [ Halogen_HTML_Core.text("Total amount for campaign to spend.") ],
          error: [  ],
          inputId: "budget-disabled"
      })([ Ocelot_Block_Input.currency_([ Halogen_HTML_Properties.value("50,000"), Halogen_HTML_Properties.id_("budget-disabled"), Halogen_HTML_Properties.disabled(true) ]) ]) ]) ]) ]) ]), UIGuide_Block_Documentation.block_({
          header: "Text Fields - Surrounding Addons",
          subheader: "Captures string input while indicating to user useful information about the input type."
      })([ UIGuide_Block_Backdrop.backdrop_([ content([ Ocelot_Block_Card.card([ Halogen_HTML_Properties.class_("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Static") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Search"),
          helpText: [ Halogen_HTML_Core.text("This text field shows how you might represent a search field.") ],
          error: [  ],
          inputId: "search"
      })([ Ocelot_Block_Input.inputGroup_([ Ocelot_Block_Input.inputCenter([ Halogen_HTML_Properties.id_("search"), Halogen_HTML_Properties.class_("focus:next:text-blue-88") ]), Ocelot_Block_Input.addonLeft_([ Ocelot_Block_Icon.search_ ]), Ocelot_Block_Input.borderRight([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.linkClasses) ])([ Halogen_HTML_Core.text("Search") ]) ]) ]) ]) ]), content([ Ocelot_Block_Card.card([ Halogen_HTML_Properties.class_("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Loading") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Search"),
          helpText: [ Halogen_HTML_Core.text("This text field shows how you might represent a loading state for a search field.") ],
          error: [  ],
          inputId: "search-loading"
      })([ Ocelot_Block_Input.inputGroup_([ Ocelot_Block_Input.inputCenter([ Halogen_HTML_Properties.class_("focus:next:text-blue-88"), Halogen_HTML_Properties.id_("search-loading"), Halogen_HTML_Properties.value("Something") ]), Ocelot_Block_Input.addonCenter_([ Ocelot_Block_Loading.spinner([ Halogen_HTML_Properties.class_("w-6 text-blue-88") ]) ]), Ocelot_Block_Input.addonLeft_([ Ocelot_Block_Icon.search_ ]), Ocelot_Block_Input.borderRight([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.linkClasses) ])([ Halogen_HTML_Core.text("Search") ]) ]) ]) ]) ]) ]) ]), UIGuide_Block_Documentation.block_({
          header: "Text Areas",
          subheader: "Captures large string input."
      })([ UIGuide_Block_Backdrop.backdrop_([ content([ Ocelot_Block_Card.card([ Halogen_HTML_Properties.class_("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Static") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Comment"),
          helpText: [ Halogen_HTML_Core.text("Say something.") ],
          error: [  ],
          inputId: "comment"
      })([ Ocelot_Block_Input.textarea([ Halogen_HTML_Properties.placeholder("Be nice."), Halogen_HTML_Properties.id_("comment") ]) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Error") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Comment*"),
          helpText: [ Halogen_HTML_Core.text("Say something.") ],
          error: [ Halogen_HTML_Core.text("This field is required.") ],
          inputId: "comment-error"
      })([ Ocelot_Block_Input.textarea([ Halogen_HTML_Properties.placeholder("Be nice."), Halogen_HTML_Properties.id_("comment-error") ]) ]) ]) ]), content([ Ocelot_Block_Card.card([ Halogen_HTML_Properties.class_("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Hydrated") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Comment"),
          helpText: [ Halogen_HTML_Core.text("Say something.") ],
          error: [  ],
          inputId: "comment-hydrated"
      })([ Ocelot_Block_Input.textarea([ Halogen_HTML_Properties.value("Forest drinks on the job"), Halogen_HTML_Properties.id_("comment-hydrated") ]) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Disabled") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Comment*"),
          helpText: [ Halogen_HTML_Core.text("Say something.") ],
          error: [  ],
          inputId: "comment-disabled"
      })([ Ocelot_Block_Input.textarea([ Halogen_HTML_Properties.value("Forest drinks on the job"), Halogen_HTML_Properties.id_("comment-disabled"), Halogen_HTML_Properties.disabled(true) ]) ]) ]) ]) ]) ]), UIGuide_Block_Documentation.block_({
          header: "Search Bar",
          subheader: "A component for handling searching"
      })([ UIGuide_Block_Backdrop.backdrop_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("w-1/3 pb-6") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "search";
      }))(Data_Ord.ordUnit)(_search)(Data_Unit.unit)(Ocelot_Component_SearchBar.component(dictMonadAff))({
          debounceTime: new Data_Maybe.Just(250.0)
      })(function ($10) {
          return Data_Maybe.Just.create(HandleSearch.create($10));
      }) ]) ]) ]) ]), UIGuide_Block_Documentation.block_({
          header: "Search Bar - With Neighbors",
          subheader: "A component for handling search, sharing a space with other blocks"
      })([ UIGuide_Block_Backdrop.backdrop_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex items-center pb-6") ])([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("mr-8") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "search";
      }))(Data_Ord.ordUnit)(_search)(Data_Unit.unit)(Ocelot_Component_SearchBar.component(dictMonadAff))({
          debounceTime: new Data_Maybe.Just(250.0)
      })(function ($11) {
          return Data_Maybe.Just.create(HandleSearch.create($11));
      }) ]), Ocelot_Block_Button.buttonPrimary_([ Halogen_HTML_Core.text("Neighbor") ]) ]) ]) ]) ]) ]);
  };
  var component = function (dictMonadAff) {
      var render = function (v) {
          return cnDocumentationBlocks(dictMonadAff);
      };
      var handleAction = function (v) {
          return Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Console.log(v.value0.value0)));
      };
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction,
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Ocelot.Block.Tray"] = $PS["Ocelot.Block.Tray"] || {};
  var exports = $PS["Ocelot.Block.Tray"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];                
  var trayOpenClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "pin-b" ]);
  var trayClosedClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "-pin-b-40" ]);
  var trayClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "fixed", "bg-white", "p-6", "pin-b", "pin-l", "shadow", "border-t", "border-grey-90", "transition-1/4-out", "w-full", "flex", "items-center" ]);
  var pullOpenProp = (function () {
      var f = function (v) {
          if (v instanceof Halogen_VDom_DOM_Prop.Property && v.value0 === "open") {
              return Data_Bifunctor.lmap(Data_Tuple.bifunctorTuple)(Data_Function["const"](v.value1));
          };
          return Data_Bifunctor.rmap(Data_Tuple.bifunctorTuple)(Data_Function.flip(Data_Array.snoc)(v));
      };
      return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(new Data_Tuple.Tuple(false, [  ]));
  })();
  var tray = function (iprops) {
      return function (html) {
          var v = pullOpenProp(iprops);
          var trayClasses$prime = (function () {
              if (v.value0) {
                  return trayOpenClasses;
              };
              return trayClosedClasses;
          })();
          return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(trayClasses)(trayClasses$prime)) ])(v.value1))(html);
      };
  };
  var open = Halogen_HTML_Properties.prop(Halogen_HTML_Core.isPropBoolean)("open");
  exports["open"] = open;
  exports["tray"] = tray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.Component.Tray"] = $PS["UIGuide.Component.Tray"] || {};
  var exports = $PS["UIGuide.Component.Tray"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Ocelot_Block_Badge = $PS["Ocelot.Block.Badge"];
  var Ocelot_Block_Button = $PS["Ocelot.Block.Button"];
  var Ocelot_Block_Tray = $PS["Ocelot.Block.Tray"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var UIGuide_Block_Backdrop = $PS["UIGuide.Block.Backdrop"];
  var UIGuide_Block_Documentation = $PS["UIGuide.Block.Documentation"];                
  var Toggle = (function () {
      function Toggle() {

      };
      Toggle.value = new Toggle();
      return Toggle;
  })();
  var component = (function () {
      var render = function (state) {
          return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.customBlock_({
              header: "Tray",
              subheader: "Interacting with Multiple Selected List Items"
          })([ UIGuide_Block_Backdrop.backdrop_([ Ocelot_Block_Button.button([ Halogen_HTML_Events.onClick(Data_Function["const"](new Data_Maybe.Just(Toggle.value))) ])([ Halogen_HTML_Core.text("toggle tray") ]), Ocelot_Block_Tray.tray([ Ocelot_Block_Tray.open(state.open) ])([ Ocelot_Block_Badge.badgeLarge([ Ocelot_HTML_Properties.css("mr-2") ])([ Halogen_HTML_Core.text("2") ]), Halogen_HTML_Elements.p([ Ocelot_HTML_Properties.css("mr-10") ])([ Halogen_HTML_Core.text("Ads selected:") ]), Ocelot_Block_Button.button_([ Halogen_HTML_Core.text("View Ads") ]), Ocelot_Block_Button.button([ Ocelot_HTML_Properties.css("ml-4") ])([ Halogen_HTML_Core.text("Dave's Design Patterns") ]) ]) ]) ]) ]);
      };
      var handleAction = function (v) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  var $4 = {};
                  for (var $5 in v1) {
                      if ({}.hasOwnProperty.call(v1, $5)) {
                          $4[$5] = v1[$5];
                      };
                  };
                  $4.open = !state.open;
                  return $4;
              });
          });
      };
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"]({
              open: true
          }),
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction,
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  })();
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.Component.Type"] = $PS["UIGuide.Component.Type"] || {};
  var exports = $PS["UIGuide.Component.Type"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Ocelot_Block_Format = $PS["Ocelot.Block.Format"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var UIGuide_Block_Backdrop = $PS["UIGuide.Block.Backdrop"];
  var UIGuide_Block_Documentation = $PS["UIGuide.Block.Documentation"];                
  var cnDocumentationBlocks = Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.block_({
      header: "Type",
      subheader: "Various typography styles."
  })([ UIGuide_Block_Backdrop.backdrop_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1 flex flex-col justify-between") ])([ Ocelot_Block_Format.heading_([ Halogen_HTML_Core.text("H1 \u2014 heading") ]), Ocelot_Block_Format.subHeading_([ Halogen_HTML_Core.text("H2 \u2014 subHeading") ]), Ocelot_Block_Format.contentHeading_([ Halogen_HTML_Core.text("H3 \u2014 contentHeading") ]), Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("H4 \u2014 caption") ]), Ocelot_Block_Format.p_([ Halogen_HTML_Core.text("p \u2014 plain pragraph") ]), Ocelot_Block_Format.p([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.mutedClasses) ])([ Halogen_HTML_Core.text(".muted") ]), Ocelot_Block_Format.p([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.linkClasses) ])([ Halogen_HTML_Core.text(".link") ]) ]) ]) ]), UIGuide_Block_Backdrop.backdropDark_([ UIGuide_Block_Backdrop.content_([ Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("flex-1 flex flex-col justify-between") ])([ Ocelot_Block_Format.headingDark_([ Halogen_HTML_Core.text("H1 \u2014 headingDark") ]), Ocelot_Block_Format.subHeadingDark_([ Halogen_HTML_Core.text("H2 \u2014 subHeadingDark") ]), Ocelot_Block_Format.contentHeading_([ Halogen_HTML_Core.text("H3 \u2014 contentHeading") ]), Ocelot_Block_Format.caption_([ Halogen_HTML_Core.text("H4 \u2014 caption") ]), Ocelot_Block_Format.p_([ Halogen_HTML_Core.text("p \u2014 plain pragraph") ]), Ocelot_Block_Format.p([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.mutedClasses) ])([ Halogen_HTML_Core.text(".muted") ]), Ocelot_Block_Format.p([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.linkDarkClasses) ])([ Halogen_HTML_Core.text(".linkDark") ]) ]) ]) ]) ]) ]);
  var component = (function () {
      var render = function (v) {
          return cnDocumentationBlocks;
      };
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": Halogen_Component.mkEval(Halogen_Component.defaultEval)
      });
  })();
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.Component.Typeaheads"] = $PS["UIGuide.Component.Typeaheads"] || {};
  var exports = $PS["UIGuide.Component.Typeaheads"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Network_RemoteData = $PS["Network.RemoteData"];
  var Ocelot_Block_Card = $PS["Ocelot.Block.Card"];
  var Ocelot_Block_FormField = $PS["Ocelot.Block.FormField"];
  var Ocelot_Block_Format = $PS["Ocelot.Block.Format"];
  var Ocelot_Block_ItemContainer = $PS["Ocelot.Block.ItemContainer"];
  var Ocelot_Component_Typeahead = $PS["Ocelot.Component.Typeahead"];
  var Ocelot_Component_Typeahead_Base = $PS["Ocelot.Component.Typeahead.Base"];
  var Ocelot_Component_Typeahead_Render = $PS["Ocelot.Component.Typeahead.Render"];
  var Ocelot_HTML_Properties = $PS["Ocelot.HTML.Properties"];
  var UIGuide_Block_Backdrop = $PS["UIGuide.Block.Backdrop"];
  var UIGuide_Block_Documentation = $PS["UIGuide.Block.Documentation"];
  var UIGuide_Utility_Async = $PS["UIGuide.Utility.Async"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var content = UIGuide_Block_Backdrop.content([ Ocelot_HTML_Properties.css("flex") ]);
  var _singleUser = Data_Symbol.SProxy.value;
  var _singleLocation = Data_Symbol.SProxy.value;
  var _multiUser = Data_Symbol.SProxy.value;
  var _multiLocation = Data_Symbol.SProxy.value;
  var cnDocumentationBlocks = function (dictMonadAff) {
      return Halogen_HTML_Elements.div_([ UIGuide_Block_Documentation.block_({
          header: "Typeaheads - Single-Select",
          subheader: "Uses string input to search predetermined entries. User selects one of these entries."
      })([ UIGuide_Block_Backdrop.backdrop_([ content([ Ocelot_Block_Card.card([ Halogen_HTML_Properties.class_("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Standard") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Locations"),
          helpText: [ Halogen_HTML_Core.text("Search your favorite destination.") ],
          error: [  ],
          inputId: "location"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp3";
      }))(Data_Ord.ordInt)(_singleLocation)(0)(Ocelot_Component_Typeahead_Base.single(UIGuide_Utility_Async.eqLocation)(dictMonadAff))((function () {
          var v = Ocelot_Component_Typeahead.syncSingle(UIGuide_Utility_Async.eqLocation)(dictMonadAff)({
              renderFuzzy: (function () {
                  var $20 = Ocelot_Block_ItemContainer.boldMatches("name");
                  return function ($21) {
                      return Halogen_HTML_Elements.span_($20($21));
                  };
              })(),
              itemToObject: UIGuide_Utility_Async.locationToObject
          })([ Halogen_HTML_Properties.placeholder("Search locations..."), Halogen_HTML_Properties.id_("location") ]);
          return {
              items: v.items,
              insertable: new Ocelot_Component_Typeahead_Base.Insertable(UIGuide_Utility_Async.stringToLocation),
              keepOpen: v.keepOpen,
              itemToObject: v.itemToObject,
              async: v.async,
              disabled: v.disabled,
              debounceTime: v.debounceTime,
              render: v.render
          };
      })())(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Standard Hydrated") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Locations"),
          helpText: [ Halogen_HTML_Core.text("Search your favorite destination.") ],
          error: [  ],
          inputId: "location-hydrated"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp3";
      }))(Data_Ord.ordInt)(_singleLocation)(1)(Ocelot_Component_Typeahead_Base.single(UIGuide_Utility_Async.eqLocation)(dictMonadAff))((function () {
          var v = Ocelot_Component_Typeahead.asyncSingle(UIGuide_Utility_Async.eqLocation)(dictMonadAff)({
              renderFuzzy: (function () {
                  var $22 = Ocelot_Block_ItemContainer.boldMatches("name");
                  return function ($23) {
                      return Halogen_HTML_Elements.span_($22($23));
                  };
              })(),
              itemToObject: UIGuide_Utility_Async.locationToObject,
              async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.locations)
          })([ Halogen_HTML_Properties.placeholder("Search locations..."), Halogen_HTML_Properties.id_("location-hydrated") ]);
          return {
              items: v.items,
              insertable: new Ocelot_Component_Typeahead_Base.Insertable(UIGuide_Utility_Async.stringToLocation),
              keepOpen: v.keepOpen,
              itemToObject: v.itemToObject,
              async: v.async,
              disabled: v.disabled,
              debounceTime: v.debounceTime,
              render: v.render
          };
      })())(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]), content([ Ocelot_Block_Card.card([ Halogen_HTML_Properties.class_("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Custom Render") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Users"),
          helpText: [ Halogen_HTML_Core.text("Search your favorite companion.") ],
          error: [  ],
          inputId: "user"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp1";
      }))(Data_Ord.ordInt)(_singleUser)(0)(Ocelot_Component_Typeahead_Base.single(UIGuide_Utility_Async.eqUser)(dictMonadAff))(Ocelot_Component_Typeahead.asyncSingle(UIGuide_Utility_Async.eqUser)(dictMonadAff)({
          renderFuzzy: UIGuide_Utility_Async.renderFuzzyUser,
          itemToObject: UIGuide_Utility_Async.userToObject,
          async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.users)
      })([ Halogen_HTML_Properties.placeholder("Search users..."), Halogen_HTML_Properties.id_("user") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Custom Render Hydrated") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Users"),
          helpText: [ Halogen_HTML_Core.text("Search your favorite companion.") ],
          error: [  ],
          inputId: "user-hydrated"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp1";
      }))(Data_Ord.ordInt)(_singleUser)(1)(Ocelot_Component_Typeahead_Base.single(UIGuide_Utility_Async.eqUser)(dictMonadAff))(Ocelot_Component_Typeahead.asyncSingle(UIGuide_Utility_Async.eqUser)(dictMonadAff)({
          renderFuzzy: UIGuide_Utility_Async.renderFuzzyUser,
          itemToObject: UIGuide_Utility_Async.userToObject,
          async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.users)
      })([ Halogen_HTML_Properties.placeholder("Search users..."), Halogen_HTML_Properties.id_("user-hydrated") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]) ]) ]), UIGuide_Block_Documentation.block_({
          header: "Typeaheads - Multi-Select",
          subheader: "Uses string input to search predetermined entries. User selects one or more of these entries"
      })([ UIGuide_Block_Backdrop.backdrop_([ content([ Ocelot_Block_Card.card([ Halogen_HTML_Properties.class_("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Standard") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Locations"),
          helpText: [ Halogen_HTML_Core.text("Search your top destinations.") ],
          error: [  ],
          inputId: "locations"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp4";
      }))(Data_Ord.ordInt)(_multiLocation)(0)(Ocelot_Component_Typeahead_Base.multi(UIGuide_Utility_Async.eqLocation)(dictMonadAff))((function () {
          var v = Ocelot_Component_Typeahead.asyncMulti(UIGuide_Utility_Async.eqLocation)(dictMonadAff)({
              renderFuzzy: (function () {
                  var $24 = Ocelot_Block_ItemContainer.boldMatches("name");
                  return function ($25) {
                      return Halogen_HTML_Elements.span_($24($25));
                  };
              })(),
              itemToObject: UIGuide_Utility_Async.locationToObject,
              async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.locations)
          })([ Halogen_HTML_Properties.placeholder("Search locations..."), Halogen_HTML_Properties.id_("locations") ]);
          return {
              items: v.items,
              insertable: new Ocelot_Component_Typeahead_Base.Insertable(UIGuide_Utility_Async.stringToLocation),
              keepOpen: v.keepOpen,
              itemToObject: v.itemToObject,
              async: v.async,
              disabled: v.disabled,
              debounceTime: v.debounceTime,
              render: v.render
          };
      })())(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Standard Hydrated") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Locations"),
          helpText: [ Halogen_HTML_Core.text("Search your top destinations.") ],
          error: [  ],
          inputId: "locations"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp4";
      }))(Data_Ord.ordInt)(_multiLocation)(1)(Ocelot_Component_Typeahead_Base.multi(UIGuide_Utility_Async.eqLocation)(dictMonadAff))((function () {
          var v = Ocelot_Component_Typeahead.asyncMulti(UIGuide_Utility_Async.eqLocation)(dictMonadAff)({
              renderFuzzy: (function () {
                  var $26 = Ocelot_Block_ItemContainer.boldMatches("name");
                  return function ($27) {
                      return Halogen_HTML_Elements.span_($26($27));
                  };
              })(),
              itemToObject: UIGuide_Utility_Async.locationToObject,
              async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.locations)
          })([ Halogen_HTML_Properties.placeholder("Search locations..."), Halogen_HTML_Properties.id_("locations") ]);
          return {
              items: v.items,
              insertable: new Ocelot_Component_Typeahead_Base.Insertable(UIGuide_Utility_Async.stringToLocation),
              keepOpen: v.keepOpen,
              itemToObject: v.itemToObject,
              async: v.async,
              disabled: v.disabled,
              debounceTime: v.debounceTime,
              render: v.render
          };
      })())(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]), content([ Ocelot_Block_Card.card([ Halogen_HTML_Properties.class_("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Custom Render") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Users"),
          helpText: [ Halogen_HTML_Core.text("Search your top companions.") ],
          error: [  ],
          inputId: "users"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp2";
      }))(Data_Ord.ordInt)(_multiUser)(0)(Ocelot_Component_Typeahead_Base.multi(UIGuide_Utility_Async.eqUser)(dictMonadAff))(Ocelot_Component_Typeahead.asyncMulti(UIGuide_Utility_Async.eqUser)(dictMonadAff)({
          renderFuzzy: UIGuide_Utility_Async.renderFuzzyUser,
          itemToObject: UIGuide_Utility_Async.userToObject,
          async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.users)
      })([ Halogen_HTML_Properties.placeholder("Search users..."), Halogen_HTML_Properties.id_("user") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Custom Render Hydrated") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Users"),
          helpText: [ Halogen_HTML_Core.text("Search your top companions.") ],
          error: [  ],
          inputId: "users-hydrated"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp2";
      }))(Data_Ord.ordInt)(_multiUser)(1)(Ocelot_Component_Typeahead_Base.multi(UIGuide_Utility_Async.eqUser)(dictMonadAff))(Ocelot_Component_Typeahead.asyncMulti(UIGuide_Utility_Async.eqUser)(dictMonadAff)({
          renderFuzzy: UIGuide_Utility_Async.renderFuzzyUser,
          itemToObject: UIGuide_Utility_Async.userToObject,
          async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.users)
      })([ Halogen_HTML_Properties.placeholder("Search users..."), Halogen_HTML_Properties.id_("user") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]) ]) ]), UIGuide_Block_Documentation.block_({
          header: "Typeaheads - State Variants",
          subheader: "Typeaheads can also be in a disabled, loading or error state."
      })([ UIGuide_Block_Backdrop.backdrop_([ content([ Ocelot_Block_Card.card([ Halogen_HTML_Properties.class_("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Disabled Single Select - Empty") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Locations"),
          helpText: [ Halogen_HTML_Core.text("Search your top destinations.") ],
          error: [  ],
          inputId: "disabled-locations-empty"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp3";
      }))(Data_Ord.ordInt)(_singleLocation)(2)(Ocelot_Component_Typeahead_Base.single(UIGuide_Utility_Async.eqLocation)(dictMonadAff))(Ocelot_Component_Typeahead.asyncSingle(UIGuide_Utility_Async.eqLocation)(dictMonadAff)({
          renderFuzzy: (function () {
              var $28 = Ocelot_Block_ItemContainer.boldMatches("name");
              return function ($29) {
                  return Halogen_HTML_Elements.span_($28($29));
              };
          })(),
          itemToObject: UIGuide_Utility_Async.locationToObject,
          async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.locations)
      })([ Halogen_HTML_Properties.placeholder("Search locations..."), Halogen_HTML_Properties.id_("disabled-locations-empty"), Halogen_HTML_Properties.disabled(true) ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Disabled Single Select - Hydrated") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Locations"),
          helpText: [ Halogen_HTML_Core.text("Search your top destinations.") ],
          error: [  ],
          inputId: "disabled-locations-hydrated"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp3";
      }))(Data_Ord.ordInt)(_singleLocation)(3)(Ocelot_Component_Typeahead_Base.single(UIGuide_Utility_Async.eqLocation)(dictMonadAff))(Ocelot_Component_Typeahead.asyncSingle(UIGuide_Utility_Async.eqLocation)(dictMonadAff)({
          renderFuzzy: (function () {
              var $30 = Ocelot_Block_ItemContainer.boldMatches("name");
              return function ($31) {
                  return Halogen_HTML_Elements.span_($30($31));
              };
          })(),
          itemToObject: UIGuide_Utility_Async.locationToObject,
          async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.locations)
      })([ Halogen_HTML_Properties.placeholder("Search locations..."), Halogen_HTML_Properties.id_("disabled-locations-hydrated"), Halogen_HTML_Properties.disabled(true) ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Error Single Select") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Locations"),
          helpText: [ Halogen_HTML_Core.text("Search your top destinations.") ],
          error: [  ],
          inputId: "error-locations"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp3";
      }))(Data_Ord.ordInt)(_singleLocation)(4)(Ocelot_Component_Typeahead_Base.single(UIGuide_Utility_Async.eqLocation)(dictMonadAff))(Ocelot_Component_Typeahead.asyncSingle(UIGuide_Utility_Async.eqLocation)(dictMonadAff)({
          renderFuzzy: (function () {
              var $32 = Ocelot_Block_ItemContainer.boldMatches("name");
              return function ($33) {
                  return Halogen_HTML_Elements.span_($32($33));
              };
          })(),
          itemToObject: UIGuide_Utility_Async.locationToObject,
          async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.locations)
      })([ Halogen_HTML_Properties.placeholder("Search locations..."), Halogen_HTML_Properties.id_("error-locations") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Loading Single Select") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Locations"),
          helpText: [ Halogen_HTML_Core.text("Search your top destinations.") ],
          error: [  ],
          inputId: "loading-locations"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp3";
      }))(Data_Ord.ordInt)(_singleLocation)(5)(Ocelot_Component_Typeahead_Base.single(UIGuide_Utility_Async.eqLocation)(dictMonadAff))(Ocelot_Component_Typeahead.asyncSingle(UIGuide_Utility_Async.eqLocation)(dictMonadAff)({
          renderFuzzy: (function () {
              var $34 = Ocelot_Block_ItemContainer.boldMatches("name");
              return function ($35) {
                  return Halogen_HTML_Elements.span_($34($35));
              };
          })(),
          itemToObject: UIGuide_Utility_Async.locationToObject,
          async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.locations)
      })([ Halogen_HTML_Properties.placeholder("Search locations..."), Halogen_HTML_Properties.id_("loading-locations") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]), content([ Ocelot_Block_Card.card([ Halogen_HTML_Properties.class_("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Disabled Multi Select - Empty") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Users"),
          helpText: [ Halogen_HTML_Core.text("Search your top companions.") ],
          error: [  ],
          inputId: "disabled-users-empty"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp2";
      }))(Data_Ord.ordInt)(_multiUser)(2)(Ocelot_Component_Typeahead_Base.multi(UIGuide_Utility_Async.eqUser)(dictMonadAff))(Ocelot_Component_Typeahead.asyncMulti(UIGuide_Utility_Async.eqUser)(dictMonadAff)({
          renderFuzzy: UIGuide_Utility_Async.renderFuzzyUser,
          itemToObject: UIGuide_Utility_Async.userToObject,
          async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.users)
      })([ Halogen_HTML_Properties.placeholder("Search users..."), Halogen_HTML_Properties.disabled(true), Halogen_HTML_Properties.id_("disabled-users-empty") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Disabled Multi Select - Hydrated") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Users"),
          helpText: [ Halogen_HTML_Core.text("Search your top companions.") ],
          error: [  ],
          inputId: "disabled-users-hydrated"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp2";
      }))(Data_Ord.ordInt)(_multiUser)(3)(Ocelot_Component_Typeahead_Base.multi(UIGuide_Utility_Async.eqUser)(dictMonadAff))(Ocelot_Component_Typeahead.asyncMulti(UIGuide_Utility_Async.eqUser)(dictMonadAff)({
          renderFuzzy: UIGuide_Utility_Async.renderFuzzyUser,
          itemToObject: UIGuide_Utility_Async.userToObject,
          async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.users)
      })([ Halogen_HTML_Properties.placeholder("Search users..."), Halogen_HTML_Properties.disabled(true), Halogen_HTML_Properties.id_("disabled-users-hydrated") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Error Multi Select") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Users"),
          helpText: [ Halogen_HTML_Core.text("Search your top companions.") ],
          error: [  ],
          inputId: "error-users"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp2";
      }))(Data_Ord.ordInt)(_multiUser)(4)(Ocelot_Component_Typeahead_Base.multi(UIGuide_Utility_Async.eqUser)(dictMonadAff))(Ocelot_Component_Typeahead.asyncMulti(UIGuide_Utility_Async.eqUser)(dictMonadAff)({
          renderFuzzy: UIGuide_Utility_Async.renderFuzzyUser,
          itemToObject: UIGuide_Utility_Async.userToObject,
          async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.users)
      })([ Halogen_HTML_Properties.placeholder("Search users..."), Halogen_HTML_Properties.id_("error-users") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]), Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Loading Multi Select") ]), Ocelot_Block_FormField.field_({
          label: Halogen_HTML_Core.text("Users"),
          helpText: [ Halogen_HTML_Core.text("Search your top companions.") ],
          error: [  ],
          inputId: "loading-users"
      })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp2";
      }))(Data_Ord.ordInt)(_multiUser)(5)(Ocelot_Component_Typeahead_Base.multi(UIGuide_Utility_Async.eqUser)(dictMonadAff))(Ocelot_Component_Typeahead.asyncMulti(UIGuide_Utility_Async.eqUser)(dictMonadAff)({
          renderFuzzy: UIGuide_Utility_Async.renderFuzzyUser,
          itemToObject: UIGuide_Utility_Async.userToObject,
          async: UIGuide_Utility_Async.loadFromSource(dictMonadAff)(UIGuide_Utility_Async.users)
      })([ Halogen_HTML_Properties.placeholder("Search users..."), Halogen_HTML_Properties.id_("loading-users") ]))(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]) ]) ]), UIGuide_Block_Documentation.block_({
          header: "Typeaheads - Alternate Renderings",
          subheader: "Renderless allows the typeahead to take on a variety of appearances"
      })([ UIGuide_Block_Backdrop.backdrop_([ content([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("flex-1 bg-black mb-6 rounded clearfix") ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("m-6") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Searchable Dropdown in a Header (e.g. for filtering)") ]), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp3";
      }))(Data_Ord.ordInt)(_singleLocation)(9)(Ocelot_Component_Typeahead_Base.component(Data_Maybe.plusMaybe)(UIGuide_Utility_Async.eqLocation)(dictMonadAff)({
          runSelect: function ($36) {
              return Data_Function["const"](Data_Maybe.Just.create($36));
          },
          runRemove: Data_Function["const"](Data_Function["const"](Data_Maybe.Nothing.value)),
          runFilter: Data_Function["const"]
      }))({
          items: Network_RemoteData.NotAsked.value,
          insertable: Ocelot_Component_Typeahead_Base.NotInsertable.value,
          keepOpen: false,
          debounceTime: Data_Maybe.Nothing.value,
          async: Data_Maybe.Nothing.value,
          itemToObject: UIGuide_Utility_Async.locationToObject,
          disabled: false,
          render: Ocelot_Component_Typeahead_Render.renderHeaderSearchDropdown(UIGuide_Utility_Async.eqLocation)("All Locations")("All Locations")((function () {
              var $37 = Data_Newtype.unwrap(UIGuide_Utility_Async.newtypeLocation);
              return function ($38) {
                  return Halogen_HTML_Core.text((function (v) {
                      return v.name;
                  })($37($38)));
              };
          })())((function () {
              var $39 = Ocelot_Block_ItemContainer.boldMatches("name");
              return function ($40) {
                  return Halogen_HTML_Elements.span_($39($40));
              };
          })())
      })(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]), content([ Ocelot_Block_Card.card([ Halogen_HTML_Properties.class_("flex-1") ])([ Halogen_HTML_Elements.h3([ Halogen_HTML_Properties.classes(Ocelot_Block_Format.captionClasses) ])([ Halogen_HTML_Core.text("Searchable Dropdown in a Toolbar (e.g. for filtering)") ]), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "cp3";
      }))(Data_Ord.ordInt)(_singleLocation)(10)(Ocelot_Component_Typeahead_Base.component(Data_Maybe.plusMaybe)(UIGuide_Utility_Async.eqLocation)(dictMonadAff)({
          runSelect: function ($41) {
              return Data_Function["const"](Data_Maybe.Just.create($41));
          },
          runRemove: Data_Function["const"](Data_Function["const"](Data_Maybe.Nothing.value)),
          runFilter: Data_Function["const"]
      }))({
          items: Network_RemoteData.NotAsked.value,
          insertable: Ocelot_Component_Typeahead_Base.NotInsertable.value,
          keepOpen: false,
          debounceTime: Data_Maybe.Nothing.value,
          async: Data_Maybe.Nothing.value,
          itemToObject: UIGuide_Utility_Async.locationToObject,
          disabled: false,
          render: Ocelot_Component_Typeahead_Render.renderToolbarSearchDropdown(UIGuide_Utility_Async.eqLocation)("All Locations")("All Locations")((function () {
              var $42 = Data_Newtype.unwrap(UIGuide_Utility_Async.newtypeLocation);
              return function ($43) {
                  return Halogen_HTML_Core.text((function (v) {
                      return v.name;
                  })($42($43)));
              };
          })())((function () {
              var $44 = Ocelot_Block_ItemContainer.boldMatches("name");
              return function ($45) {
                  return Halogen_HTML_Elements.span_($44($45));
              };
          })())
      })(Data_Function["const"](Data_Maybe.Nothing.value)) ]) ]) ]) ]) ]);
  };
  var component = function (dictMonadAff) {
      var render = function (v) {
          return cnDocumentationBlocks(dictMonadAff);
      };
      var fetchAndSetUsers = Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(UIGuide_Utility_Async.loadFromSource(Effect_Aff_Class.monadAffAff)(UIGuide_Utility_Async.users)("")))(function (remoteUsers) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(UIGuide_Utility_Async.loadFromSource(Effect_Aff_Class.monadAffAff)(UIGuide_Utility_Async.users)("an")))(function (selectedUsers) {
              if (remoteUsers instanceof Network_RemoteData.Success && selectedUsers instanceof Network_RemoteData.Success) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.queryAll()(new Data_Symbol.IsSymbol(function () {
                      return "cp1";
                  }))(Data_Ord.ordInt)(_singleUser)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(remoteUsers)))))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.queryAll()(new Data_Symbol.IsSymbol(function () {
                          return "cp2";
                      }))(Data_Ord.ordInt)(_multiUser)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(remoteUsers)))))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                              return "cp1";
                          }))(Data_Ord.ordInt)(_singleUser)(1)(new Ocelot_Component_Typeahead_Base.ReplaceSelected(Data_Array.head(selectedUsers.value0), Data_Unit.unit))))(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                                  return "cp2";
                              }))(Data_Ord.ordInt)(_multiUser)(1)(new Ocelot_Component_Typeahead_Base.ReplaceSelected(Data_Array.take(4)(selectedUsers.value0), Data_Unit.unit))))(function () {
                                  return Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                                      return "cp2";
                                  }))(Data_Ord.ordInt)(_multiUser)(3)(new Ocelot_Component_Typeahead_Base.ReplaceSelected(Data_Array.take(4)(selectedUsers.value0), Data_Unit.unit)));
                              });
                          });
                      });
                  });
              };
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
          });
      });
      var fetchAndSetLocations = Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(UIGuide_Utility_Async.loadFromSource(Effect_Aff_Class.monadAffAff)(UIGuide_Utility_Async.locations)("")))(function (remoteLocations) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(UIGuide_Utility_Async.loadFromSource(Effect_Aff_Class.monadAffAff)(UIGuide_Utility_Async.locations)("an")))(function (selectedLocations) {
              if (remoteLocations instanceof Network_RemoteData.Success && selectedLocations instanceof Network_RemoteData.Success) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.queryAll()(new Data_Symbol.IsSymbol(function () {
                      return "cp3";
                  }))(Data_Ord.ordInt)(_singleLocation)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(remoteLocations)))))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                          return "cp3";
                      }))(Data_Ord.ordInt)(_singleLocation)(1)(new Ocelot_Component_Typeahead_Base.ReplaceSelected(Data_Array.head(selectedLocations.value0), Data_Unit.unit))))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                              return "cp3";
                          }))(Data_Ord.ordInt)(_singleLocation)(3)(new Ocelot_Component_Typeahead_Base.ReplaceSelected(Data_Array.head(selectedLocations.value0), Data_Unit.unit))))(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.queryAll()(new Data_Symbol.IsSymbol(function () {
                                  return "cp4";
                              }))(Data_Ord.ordInt)(_multiLocation)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(remoteLocations)))))(function () {
                                  return Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                                      return "cp4";
                                  }))(Data_Ord.ordInt)(_multiLocation)(1)(new Ocelot_Component_Typeahead_Base.ReplaceSelected(Data_Array.take(4)(selectedLocations.value0), Data_Unit.unit)));
                              });
                          });
                      });
                  });
              };
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
          });
      });
      var handleAction = function (v) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Parallel.parSequence_(Halogen_Query_HalogenM.parallelHalogenM)(Data_Foldable.foldableArray)([ Halogen_Query_HalogenM.queryAll()(new Data_Symbol.IsSymbol(function () {
              return "cp1";
          }))(Data_Ord.ordInt)(_singleUser)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(Network_RemoteData.Loading.value))), Halogen_Query_HalogenM.queryAll()(new Data_Symbol.IsSymbol(function () {
              return "cp2";
          }))(Data_Ord.ordInt)(_multiUser)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(Network_RemoteData.Loading.value))), Halogen_Query_HalogenM.queryAll()(new Data_Symbol.IsSymbol(function () {
              return "cp3";
          }))(Data_Ord.ordInt)(_singleLocation)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(Network_RemoteData.Loading.value))), Halogen_Query_HalogenM.queryAll()(new Data_Symbol.IsSymbol(function () {
              return "cp4";
          }))(Data_Ord.ordInt)(_multiLocation)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(Network_RemoteData.Loading.value))) ]))(function () {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Parallel.parSequence_(Halogen_Query_HalogenM.parallelHalogenM)(Data_Foldable.foldableArray)([ fetchAndSetLocations, fetchAndSetUsers ]))(function () {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Parallel.parSequence_(Halogen_Query_HalogenM.parallelHalogenM)(Data_Foldable.foldableArray)([ Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                      return "cp3";
                  }))(Data_Ord.ordInt)(_singleLocation)(4)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(new Network_RemoteData.Failure("")))), Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                      return "cp3";
                  }))(Data_Ord.ordInt)(_singleLocation)(5)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(Network_RemoteData.Loading.value))), Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                      return "cp2";
                  }))(Data_Ord.ordInt)(_multiUser)(4)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(new Network_RemoteData.Failure("")))), Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                      return "cp2";
                  }))(Data_Ord.ordInt)(_multiUser)(5)(Halogen_Query.tell(Ocelot_Component_Typeahead_Base.ReplaceItems.create(Network_RemoteData.Loading.value))) ]))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  });
              });
          });
      };
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction,
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: new Data_Maybe.Just(Initialize.value),
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["UIGuide.App.Routes"] = $PS["UIGuide.App.Routes"] || {};
  var exports = $PS["UIGuide.App.Routes"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Halogen_Storybook_Proxy = $PS["Halogen.Storybook.Proxy"];
  var UIGuide_App = $PS["UIGuide.App"];
  var UIGuide_Component_Badge = $PS["UIGuide.Component.Badge"];
  var UIGuide_Component_Button = $PS["UIGuide.Component.Button"];
  var UIGuide_Component_DatePickers = $PS["UIGuide.Component.DatePickers"];
  var UIGuide_Component_Dialogs = $PS["UIGuide.Component.Dialogs"];
  var UIGuide_Component_Dropdown = $PS["UIGuide.Component.Dropdown"];
  var UIGuide_Component_ExpansionCards = $PS["UIGuide.Component.ExpansionCards"];
  var UIGuide_Component_FormControl = $PS["UIGuide.Component.FormControl"];
  var UIGuide_Component_Icons = $PS["UIGuide.Component.Icons"];
  var UIGuide_Component_Modals = $PS["UIGuide.Component.Modals"];
  var UIGuide_Component_Table = $PS["UIGuide.Component.Table"];
  var UIGuide_Component_TextFields = $PS["UIGuide.Component.TextFields"];
  var UIGuide_Component_Tray = $PS["UIGuide.Component.Tray"];
  var UIGuide_Component_Type = $PS["UIGuide.Component.Type"];
  var UIGuide_Component_Typeaheads = $PS["UIGuide.Component.Typeaheads"];                
  var routes = Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("expandables", {
      anchor: "Expansion Cards",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Component_ExpansionCards.component(Effect_Aff_Class.monadAffAff)),
      group: UIGuide_App.Components.value
  }), new Data_Tuple.Tuple("textfields", {
      anchor: "Text Fields",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Component_TextFields.component(Effect_Aff_Class.monadAffAff)),
      group: UIGuide_App.Components.value
  }), new Data_Tuple.Tuple("typeaheads", {
      anchor: "Typeaheads",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Component_Typeaheads.component(Effect_Aff_Class.monadAffAff)),
      group: UIGuide_App.Components.value
  }), new Data_Tuple.Tuple("date-pickers", {
      anchor: "Date Pickers",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Component_DatePickers.component(Effect_Aff_Class.monadAffAff)),
      group: UIGuide_App.Components.value
  }), new Data_Tuple.Tuple("buttons", {
      anchor: "Buttons",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Component_Button.component),
      group: UIGuide_App.Components.value
  }), new Data_Tuple.Tuple("controls", {
      anchor: "Controls",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Component_FormControl.component),
      group: UIGuide_App.Components.value
  }), new Data_Tuple.Tuple("modals", {
      anchor: "Modals",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Component_Modals.component(Effect_Aff_Class.monadAffAff)),
      group: UIGuide_App.Components.value
  }), new Data_Tuple.Tuple("tables", {
      anchor: "Tables",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Component_Table.component),
      group: UIGuide_App.Components.value
  }), new Data_Tuple.Tuple("dropdowns", {
      anchor: "Dropdowns",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Component_Dropdown.component(Effect_Aff_Class.monadAffAff)),
      group: UIGuide_App.Components.value
  }), new Data_Tuple.Tuple("type", {
      anchor: "Type",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Component_Type.component),
      group: UIGuide_App.Basics.value
  }), new Data_Tuple.Tuple("icons", {
      anchor: "Icons",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Component_Icons.component),
      group: UIGuide_App.Basics.value
  }), new Data_Tuple.Tuple("tray", {
      anchor: "Tray",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Component_Tray.component),
      group: UIGuide_App.Components.value
  }), new Data_Tuple.Tuple("dialogs", {
      anchor: "Dialogs",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Component_Dialogs.component(Effect_Aff_Class.monadAffAff)),
      group: UIGuide_App.Components.value
  }), new Data_Tuple.Tuple("badge", {
      anchor: "Badge",
      component: Halogen_Storybook_Proxy.proxy(UIGuide_Component_Badge.component),
      group: UIGuide_App.Basics.value
  }) ]);
  var groups = [ UIGuide_App.Basics.value, UIGuide_App.Components.value ];
  exports["routes"] = routes;
  exports["groups"] = groups;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var Control_Bind = $PS["Control.Bind"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Halogen_Aff_Util = $PS["Halogen.Aff.Util"];
  var UIGuide_App = $PS["UIGuide.App"];
  var UIGuide_App_Routes = $PS["UIGuide.App.Routes"];                
  var main = Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Aff_Util.awaitBody)(function (body) {
      return UIGuide_App.runStorybook(UIGuide_App_Routes.routes)(UIGuide_App_Routes.groups)(body);
  }));
  exports["main"] = main;
})(PS);
PS["Main"].main();